{"version":3,"file":"nodom.js","sources":["../core/application.ts","../core/defineelementmanager.ts","../node_modules/tslib/tslib.es6.js","../core/directivetype.ts","../core/model.ts","../core/serializer.ts","../core/resourcemanager.ts","../core/modulefactory.ts","../core/messagequeue.ts","../core/factory.ts","../core/methodfactory.ts","../core/renderer.ts","../core/modelmanager.ts","../core/module.ts","../core/router.ts","../core/scheduler.ts","../node_modules/kayaks/src/util/actions.ts","../node_modules/kayaks/src/watcher.ts","../node_modules/kayaks/src/model.ts","../node_modules/kayaks/src/combineReducers.ts","../node_modules/kayaks/src/util/index.ts","../node_modules/kayaks/src/index.ts","../core/nodom.ts","../core/error.ts","../core/util.ts","../core/directivemanager.ts","../core/filtermanager.ts","../core/filter.ts","../core/directive.ts","../core/expression.ts","../core/types.ts","../core/element.ts","../core/event.ts","../core/compiler.ts","../core/defineelement.ts","../core/extend/defineelementinit.ts","../core/extend/directiveinit.ts","../core/extend/filterinit.ts","../core/locales/msg_en.ts","../core/locales/msg_zh.ts","../core/messagemanager.ts"],"sourcesContent":["/**\r\n * 应用类\r\n * 全局对象\r\n * @since 2.0\r\n */\r\nexport class Application{\r\n    /**\r\n     * 路径对象 包含 {\r\n     *              app:appPath(应用基础路径),\r\n     *              css:css路径(css加载基础路径 app+css),\r\n     *              js:js路径(js加载基础路径 app+css),\r\n     *              template:模版路径(模版加载基础 app+template)\r\n     *              route:路由前置路径(路由完整路径为 route + routePath)\r\n     *              module:模块基础路径\r\n     */\r\n    private static path:any;\r\n    \r\n    /**\r\n     * 调度器执行间隔，如果支持requestAnimationFrame，则不需要\r\n     */\r\n    private static renderTick:number;\r\n    /**\r\n     * 根容器\r\n     */\r\n    private static rootContainer:HTMLElement|string;\r\n\r\n    /**\r\n     * 获取路径\r\n     * @param type  路径类型 app,template,css,js,module,route \r\n     * @returns     type对应的基础路径\r\n     */\r\n    public static getPath(type:string):string{\r\n        if(!this.path){\r\n            return '';\r\n        }\r\n        let appPath:string = this.path.app || '';\r\n        \r\n        if(type === 'app'){\r\n            return appPath;\r\n        }else if(type === 'route'){\r\n            return this.path.route || '';\r\n        }else{\r\n            let p = this.path[type] || '';\r\n            if(appPath !== ''){\r\n                if(p !== ''){\r\n                    return appPath + '/' + p;\r\n                }else{\r\n                    return appPath;\r\n                }\r\n            }\r\n            return p; \r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置path 对象\r\n     * @param pathObj   路径对象\r\n     */\r\n    public static setPath(pathObj:Object){\r\n        this.path = pathObj;\r\n    }\r\n}\r\n","import { IDefineElementCfg } from \"./types\";\r\n\r\n/**\r\n * 自定义元素管理器\r\n */\r\nexport class DefineElementManager {\r\n    /**\r\n     * 自定义element\r\n     */\r\n    private static elements: Map<string, IDefineElementCfg> = new Map();\r\n    /**\r\n     * 添加自定义元素类\r\n     * @param name  元素名\r\n     * @param cfg   配置\r\n     */\r\n    public static add(name: string, cfg: IDefineElementCfg) {\r\n        this.elements.set(name, cfg);\r\n    }\r\n\r\n    /**\r\n     * 获取自定义元素类\r\n     * @param tagName 元素名\r\n     */\r\n    public static get(tagName: string): IDefineElementCfg {\r\n        return this.elements.get(tagName);\r\n    }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\r\n * 指令类\r\n */\r\nexport  class DirectiveType {\r\n    /**\r\n     * 指令类型名\r\n     */\r\n    public name:string;\r\n    \r\n    /**\r\n     * 优先级，越小优先级越高\r\n     */\r\n    public prio:number;\r\n\r\n    /**\r\n     * 编译时执行方法\r\n     */\r\n    public init:Function;\r\n\r\n    /**\r\n     * 渲染时执行方法\r\n     */\r\n    public handle:Function;\r\n    \r\n    /**\r\n     * 构造方法\r\n     * @param name      指令类型名       \r\n     * @param prio      类型优先级\r\n     * @param init      编译时执行方法\r\n     * @param handle    渲染时执行方法\r\n     */ \r\n    constructor(name:string, prio?:number,init?:Function,handle?:Function) {\r\n        this.name = name;\r\n        this.prio = prio>=0?prio:10;\r\n        this.init = init;\r\n        this.handle = handle;\r\n    }\r\n}\r\n","import { ModuleFactory } from \"../index\";\r\nimport { ModelManager } from \"./modelmanager\";\r\nimport { Module } from \"./module\";\r\nimport { Util } from \"./util\";\r\n/**\r\n * 模型类\r\n */\r\n\r\nexport const modelCloneExpKey = [\"$moduleId\", \"$key\", \"$watch\", \"$query\"]\r\n\r\nexport class Model {\r\n    /**\r\n     * 模块id\r\n     */\r\n    $moduleId: number;\r\n\r\n\r\n    /**\r\n     * @param data \t\t数据\r\n     * @param module \t模块对象\r\n     * @returns         模型代理对象\r\n     */\r\n    constructor(data: any, module: Module) {\r\n        //模型管理器\r\n        let mm: ModelManager = module.modelManager;\r\n\r\n        let proxy = new Proxy(data, {\r\n            set: (src: any, key: string, value: any, receiver: any) => {\r\n                \r\n                //值未变,proxy 不处理\r\n                if (src[key] === value) {\r\n                    return true;\r\n                }\r\n                //不处理原型属性 \r\n                let excludes = ['__proto__', 'constructor'];\r\n                if (excludes.includes(<string>key)) {\r\n                    return true;\r\n                }\r\n                const excArr = ['$watch', \"$moduleId\", \"$query\", \"$key\", \"$index\"];\r\n                //不进行赋值\r\n                if (typeof value !== 'object' || (value === null || !value.$watch)) {\r\n                    //更新渲染\r\n                    if (excArr.indexOf(key) == -1) {\r\n                        mm.update(proxy, key, src[key], value);\r\n                    }\r\n                }\r\n                return Reflect.set(src, key, value, receiver);\r\n            },\r\n            get: (src: any, key: string | symbol, receiver) => {\r\n                let res = Reflect.get(src, key, receiver);\r\n                let data = module.modelManager.getFromDataMap(src[key]);\r\n                if (data) {\r\n                    return data;\r\n                }\r\n                if (typeof res === 'object' && res !== null) {\r\n                    //如果是的对象，则返回代理，便于后续激活get set方法                   \r\n                    // 判断是否已经代理，如果未代理，则增加代理\r\n                    if (!src[key].$watch) {\r\n                        let p = new Model(res, module);\r\n                        // receiver[key] = p;\r\n                        return p;\r\n                    }\r\n                    // else {\r\n                    //     let data = module.modelManager.getFromDataMap(src[key]);\r\n                    //     return data ? data : res;\r\n                    // }\r\n                }\r\n                return res;\r\n            },\r\n            deleteProperty: function (src: any, key: any) {\r\n                //如果删除对象，从mm中同步删除\r\n                if (src[key] != null && typeof src[key] === 'object') {\r\n                    mm.delToDataMap(src[key]);\r\n                    mm.delModelToModelMap(src[key]);\r\n                }\r\n                delete src[key];\r\n                return true;\r\n            }\r\n        });\r\n        proxy.$watch = this.$watch;\r\n        proxy.$moduleId = module.id;\r\n        proxy.$query = this.$query;\r\n        proxy.$key = Util.genId();\r\n        mm.addToDataMap(data, proxy);\r\n        mm.addModelToModelMap(proxy, data);\r\n        return proxy;\r\n    }\r\n\r\n\r\n    /**\r\n     * 观察(取消观察)某个数据项\r\n     * @param key       数据项名\r\n     * @param operate   数据项变化时执行方法名(在module的methods中定义)\r\n     * @param cancel    取消观察\r\n     */\r\n    public $watch(key: string, operate: string | Function, cancel?: boolean) {\r\n        let model = this;\r\n        let index = -1;\r\n        //如果带'.'，则只取最里面那个对象\r\n        if ((index = key.lastIndexOf('.')) !== -1) {\r\n            model = this.$query(key.substr(0, index));\r\n            key = key.substr(index + 1);\r\n        }\r\n        if (!model) {\r\n            return;\r\n        }\r\n        const mod = ModuleFactory.get(this.$moduleId);\r\n        if (cancel) {\r\n            mod.modelManager.removeWatcherFromModelMap(model, key, operate);\r\n        } else {\r\n            mod.modelManager.addWatcherToModelMap(model, key, operate);\r\n        }\r\n    }\r\n    /**\r\n     * 查询子属性\r\n     * @param key   子属性，可以分级，如 name.firstName\r\n     * @returns     属性对应model proxy\r\n     */\r\n    $query(key: string) {\r\n        let model: Model = this;\r\n        if (key.indexOf('.') !== -1) {    //层级字段\r\n            let arr = key.split('.');\r\n            for (let i = 0; i < arr.length - 1; i++) {\r\n                model = model[arr[i]];\r\n                if (!model) {\r\n                    break;\r\n                }\r\n            }\r\n            if (!model) {\r\n                return;\r\n            }\r\n            key = arr[arr.length - 1];\r\n        }\r\n        return model[key];\r\n    }\r\n}\r\n","import { Element } from \"./element\";\r\nimport { Module } from \"./module\";\r\nimport { Util } from \"./util\";\r\n\r\n/**\r\n *  编译器\r\n *  描述：用于进行预编译和预编译后的json串反序列化，处理两个部分：虚拟dom树和表达式工厂\r\n *  版本2.1预留\r\n */\r\nexport class Serializer{\r\n\t/**\r\n\t * 序列化，只序列化virtualDom\r\n\t * @param module \t模块\r\n\t * @return   \t\tjsonstring\r\n\t */\r\n\tpublic static serialize(module:Module){\r\n\t\tlet dom = module.virtualDom;\r\n\t\taddClsName(dom);\r\n\t\treturn JSON.stringify(dom);\r\n\r\n\t\t/**\r\n\t\t * 为对象添加class name（递归执行）\r\n\t\t * @param obj \t对象\r\n\t\t */\r\n\t\tfunction addClsName(obj:any){\r\n\t\t\tif(typeof obj !== 'object'){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tobj.className = obj.constructor.name;\r\n\t\t\t\r\n\t\t\tUtil.getOwnProps(obj).forEach((item)=>{\r\n\t\t\t\tif(Util.isArray(obj[item])){\r\n\t\t\t\t\t//删除空数组\r\n\t\t\t\t\tif(obj[item].length === 0){\r\n\t\t\t\t\t\tdelete obj[item];\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tobj[item].forEach((item1)=>{\r\n\t\t\t\t\t\t\taddClsName(item1);\r\n\t\t\t\t\t\t});\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}else if(typeof obj[item] === 'object'){\r\n\t\t\t\t\t//删除空对象\r\n\t\t\t\t\tif(Util.isEmpty(obj[item])){\r\n\t\t\t\t\t\tdelete obj[item];\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\taddClsName(obj[item]);\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 反序列化\r\n\t * @param jsonStr \tjson串\r\n\t * @param module \t模块\r\n\t * @returns \t\t virtualDom\t\r\n\t */\r\n\tpublic static deserialize(jsonStr:string):Element{\r\n\t\tlet jObj = JSON.parse(jsonStr);\r\n\t\treturn handleCls(jObj);\r\n\r\n\t\tfunction handleCls(jsonObj):Element{\r\n\t\t\tif(!Util.isObject(jsonObj)){\r\n\t\t\t\treturn jsonObj;\r\n\t\t\t}\r\n\r\n\t\t\tlet retObj;\r\n\t\t\tif(jsonObj.hasOwnProperty('className')){\r\n\t\t\t\tconst cls:string = jsonObj['className'];\r\n\t\t\t\tlet param = [];\r\n\t\t\t\t//指令需要传入参数\r\n\t\t\t\tswitch(cls){\r\n\t\t\t\t\tcase 'Directive':\r\n\t\t\t\t\t\tparam = [jsonObj['type']];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Expression':\r\n\t\t\t\t\t\tparam = [jsonObj['execString']];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Element':\r\n\t\t\t\t\t\tparam = [];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'NodomNEvent':\r\n\t\t\t\t\t\tparam = [jsonObj['name']];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t// let clazz:any = eval(cls);\r\n\t\t\t\tlet clazz:any = new Function('return '+cls);\r\n\t\t\t\tretObj = Reflect.construct(clazz,param);\r\n\t\t\t}else{\r\n\t\t\t\tretObj = {};\r\n\t\t\t}\r\n\r\n\t\t\t//子对象可能用到父对象属性，所以子对象要在属性赋值后处理\r\n\t\t\tlet objArr = [];  //子对象\r\n\t\t\tlet arrArr = [];  //子数组\r\n\t\t\tUtil.getOwnProps(jsonObj).forEach((item)=>{\r\n\t\t\t\t//子对象\r\n\t\t\t\tif(Util.isObject(jsonObj[item])){\r\n\t\t\t\t\tobjArr.push(item);\r\n\t\t\t\t}else if(Util.isArray(jsonObj[item])){ //子数组\r\n\t\t\t\t\tarrArr.push(item);\r\n\t\t\t\t}else{  //普通属性\r\n\t\t\t\t\t//className 不需要复制\r\n\t\t\t\t\tif(item !== 'className'){\r\n\t\t\t\t\t\tretObj[item] = jsonObj[item];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//子对象处理\r\n\t\t\tobjArr.forEach((item)=>{\r\n\t\t\t\tretObj[item] = handleCls(jsonObj[item]);\r\n\t\t\t});\r\n\r\n\t\t\t//子数组处理\r\n\t\t\tarrArr.forEach(item=>{\r\n\t\t\t\tretObj[item] = [];\r\n\t\t\t\tjsonObj[item].forEach((item1)=>{\r\n\t\t\t\t\tretObj[item].push(handleCls(item1));\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn retObj;\r\n\t\t}\r\n\t}\r\n}\r\n","import { Compiler } from \"./compiler\";\r\nimport { Serializer } from \"./serializer\";\r\nimport { IResourceObj } from \"./types\";\r\nimport { Util } from \"./util\";\r\nimport { request } from \"./nodom\";\r\n\r\n/**\r\n * 资源管理器\r\n * 用于url资源的加载及管理，主要针对js、模版等\r\n */\r\nexport class ResourceManager{\r\n    /**\r\n     * 资源map，key为url，值为整数，1表示正在加载，2表示已加载完成\r\n     */\r\n    public static resources:Map<string,IResourceObj> = new Map();\r\n    \r\n    /**\r\n     * 加载任务  任务id:资源对象，{id1:{url1:false,url2:false},id2:...}\r\n     */\r\n    private static loadingTasks:Map<number,string[]> = new Map();\r\n\r\n    /**\r\n     * 资源等待列表  {资源url:[taskId1,taskId2,...]}\r\n     */\r\n    private static waitList:Map<string,number[]> = new Map();\r\n    \r\n    /**\r\n     * 获取多个资源\r\n     * @param urls  [{url:**,type:**}]或 [url1,url2,...]\r\n     * @returns     IResourceObj\r\n     */\r\n    public static async getResources(reqs:any[]):Promise<IResourceObj[]>{\r\n        let me = this;\r\n        this.preHandle(reqs); \r\n        //无请求\r\n        if(reqs.length === 0){\r\n            return [];\r\n        }\r\n        let taskId:number = Util.genId();\r\n        \r\n        //设置任务资源数组\r\n        let resArr = [];\r\n        for(let item of reqs){\r\n            resArr.push(item.url);\r\n        }\r\n        this.loadingTasks.set(taskId,resArr);\r\n        return new Promise(async(res,rej)=>{\r\n            //保存资源id状态\r\n            for(let item of reqs){\r\n                let url:string = item.url;\r\n                if(this.resources.has(url)){        //已加载，直接获取资源内容\r\n                    let r = me.awake(taskId);\r\n                    if(r){\r\n                        res(r);\r\n                    }\r\n                }else if(this.waitList.has(url)){   //加载中，放入资源等待队列\r\n                    this.waitList.get(url).push(taskId);\r\n                }else{  //新加载\r\n                    //将自己的任务加入等待队列\r\n                    this.waitList.set(url,[taskId]);\r\n                    //请求资源\r\n                    let content = await request({url:url})\r\n                    let rObj = {type:item.type,content:content};\r\n                    this.handleOne(url,rObj);\r\n                    this.resources.set(url,rObj);\r\n                    let arr = this.waitList.get(url);\r\n                    //从等待列表移除\r\n                    this.waitList.delete(url);\r\n                    //唤醒任务\r\n                    for(let tid of arr){\r\n                        let r = me.awake(tid);\r\n                        if(r){\r\n                            res(r);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 唤醒任务\r\n     * @param taskId    任务id\r\n     * @returns         加载内容数组或undefined\r\n     */\r\n    public static awake(taskId:number):IResourceObj[]{\r\n        if(!this.loadingTasks.has(taskId)){\r\n            return;\r\n        }\r\n        let resArr = this.loadingTasks.get(taskId);\r\n        let finish:boolean = true;\r\n        //资源内容数组\r\n        let contents = [];\r\n        //检查是否全部加载完成\r\n        for(let url of resArr){\r\n            //一个未加载完，则需要继续等待\r\n            if(!this.resources.has(url)){\r\n                finish = false;\r\n                break;\r\n            }\r\n            //放入返回对象\r\n            contents.push(this.resources.get(url));\r\n        }\r\n        //加载完成\r\n        if(finish){\r\n            //从loadingTask删除\r\n            this.loadingTasks.delete(taskId);\r\n            return contents;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 获取url类型\r\n     * @param url   url\r\n     * @returns     url type\r\n     */\r\n    public static getType(url:string):string{\r\n        let ind = -1;\r\n        let type:string;\r\n        if((ind=url.lastIndexOf('.')) !== -1){\r\n            type = url.substr(ind+1);\r\n            if(type === 'htm' || type === 'html'){\r\n                type = 'template';\r\n            }\r\n        }\r\n        return type || 'text';\r\n    }\r\n\r\n    /**\r\n     * 处理一个资源获取结果\r\n     * @param url   资源url\r\n     * @param rObj  资源对象\r\n     */\r\n    private static handleOne(url:string,rObj:IResourceObj){\r\n        switch(rObj.type){\r\n            case 'js':\r\n                let head = document.querySelector('head');\r\n                let script = Util.newEl('script');\r\n                script.innerHTML = rObj.content;\r\n                head.appendChild(script);\r\n                head.removeChild(script);\r\n                delete rObj.content;\r\n                break;\r\n            case 'template':\r\n                rObj.content = Compiler.compile(rObj.content);\r\n                break;\r\n            case 'nd':\r\n                rObj.content = Serializer.deserialize(rObj.content);\r\n                break;\r\n            case 'data': //数据\r\n                try{\r\n                    rObj.content = JSON.parse(rObj.content);\r\n                }catch(e){\r\n                    console.log(e);\r\n                }\r\n        }\r\n        this.resources.set(url,rObj);\r\n    }\r\n\r\n    /**\r\n     * 预处理\r\n     * @param reqs  [{url:**,type:**},url,...]\r\n     * @returns     [promises(请求对象数组),urls(url数组),types(类型数组)]\r\n     */\r\n    private static preHandle(reqs:any[]):any[]{\r\n        let head = document.querySelector('head');\r\n        //预处理请求资源\r\n        for(let i=0;i<reqs.length;i++){\r\n            //url串，需要构造成object\r\n            if(typeof reqs[i] === 'string'){\r\n                reqs[i] = {\r\n                    url:reqs[i]\r\n                }\r\n            }\r\n            reqs[i].type = reqs[i].type || this.getType(reqs[i].url);\r\n            //css 不需要加载\r\n            if(reqs[i].type === 'css'){\r\n                let css = <HTMLLinkElement>Util.newEl('link');\r\n                css.type = 'text/css';\r\n                css.rel = 'stylesheet'; // 保留script标签的path属性\r\n                css.href = reqs[i].url;\r\n                head.appendChild(css);\r\n                //移除\r\n                reqs.splice(i--,1);\r\n            }\r\n        }\r\n        return reqs;\r\n    }\r\n}\r\n","import { Application } from \"./application\";\r\nimport { DefineElementManager } from \"./defineelementmanager\";\r\nimport { Directive } from \"./directive\";\r\nimport { Element } from \"./element\";\r\nimport { NError } from \"./error\";\r\nimport { Model } from \"./model\";\r\nimport { Module } from \"./module\";\r\nimport { NodomMessage, store } from \"./nodom\";\r\nimport { ResourceManager } from \"./resourcemanager\";\r\nimport { IMdlClassObj } from \"./types\";\r\nimport { Util } from \"./util\";\r\n\r\n/**\r\n * 过滤器工厂，存储模块过滤器\r\n */\r\nexport class ModuleFactory {\r\n    /**\r\n     * 模块对象工厂 {moduleId:{key:容器key,className:模块类名,instance:模块实例}}\r\n     */\r\n    private static modules: Map<number, Module> = new Map();\r\n\r\n    /**\r\n     * 模块类集合\r\n     */\r\n    private static classes: Map<string, IMdlClassObj> = new Map();\r\n\r\n    /**\r\n     * 主模块\r\n     */\r\n    private static mainModule: Module;\r\n    /**\r\n     * 添加模块到工厂\r\n     * @param id    模块id\r\n     * @param item  模块存储对象\r\n     */\r\n    public static add(item: Module) {\r\n        this.modules.set(item.id, item);\r\n    }\r\n\r\n    /**\r\n     * 获得模块\r\n     * @param id    模块id\r\n     */\r\n    public static get(id: number): Module {\r\n        return this.modules.get(id);\r\n    }\r\n\r\n    /**\r\n     * 获取模块实例（通过类名）\r\n     * @param className     模块类名\r\n     * @param moduleName    模块名\r\n     * @param data          数据或数据url\r\n     */\r\n    public static async getInstance(className: string, moduleName?: string, data?: any): Promise<Module> {\r\n        if (!this.classes.has(className)) {\r\n            throw new NError('notexist1', NodomMessage.TipWords['moduleClass'], className);\r\n        }\r\n        let cfg: IMdlClassObj = this.classes.get(className);\r\n        if (moduleName) {\r\n            cfg.name = moduleName;\r\n        }\r\n        if (!cfg.instance) {\r\n            if (!cfg.initing) {\r\n                cfg.initing = true;\r\n                await this.initModule(cfg);\r\n            }\r\n\r\n            return new Promise((res, rej) => {\r\n                check();\r\n                function check() {\r\n                    if (!cfg.initing) {\r\n                        res(get(cfg));\r\n                    } else {\r\n                        setTimeout(check, 0);\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            return get(cfg);\r\n        }\r\n        function get(cfg: IMdlClassObj): Module {\r\n            if (cfg.singleton) {\r\n                return cfg.instance;\r\n            } else {\r\n                let mdl: Module = cfg.instance.clone(moduleName);\r\n                //处理数据\r\n                if (data) {\r\n                    //如果为url，则设置dataurl和loadnewdata标志\r\n                    if (typeof data === 'string') {\r\n                        mdl.setDataUrl(data);\r\n                    } else { //数据模型化\r\n                        mdl.model = new Model(data, mdl);\r\n                    }\r\n                }\r\n                return mdl;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 从工厂移除模块\r\n     * @param id    模块id\r\n     */\r\n    static remove(id: number) {\r\n        this.modules.delete(id);\r\n    }\r\n    /**\r\n     * 设置主模块\r\n     * @param m \t模块 \r\n     */\r\n    static setMain(m: Module) {\r\n        this.mainModule = m;\r\n        m.setMain();\r\n    }\r\n\r\n    /**\r\n     * 获取主模块\r\n     * @returns \t应用的主模块\r\n     */\r\n    static getMain() {\r\n        return this.mainModule;\r\n    }\r\n\r\n    /**\r\n     * 添加模块类\r\n     * @param modules \r\n     */\r\n    public static async addModules(modules: Array<IMdlClassObj>) {\r\n        for (let cfg of modules) {\r\n            if (!cfg.path) {\r\n                throw new NError(\"paramException\", 'modules', 'path');\r\n            }\r\n            if (!cfg.class) {\r\n                throw new NError(\"paramException\", 'modules', 'class');\r\n            }\r\n            //lazy默认true\r\n            if (cfg.lazy === undefined) {\r\n                cfg.lazy = true;\r\n            }\r\n            //singleton默认true\r\n            if (cfg.singleton === undefined) {\r\n                cfg.singleton = true;\r\n            }\r\n            //自定义标签名\r\n            if(cfg.className){\r\n                DefineElementManager.add(cfg.className.toLocaleUpperCase(),{\r\n                    init:function(element:Element,parent?:Element){\r\n                        element.tagName = 'div';\r\n                        new Directive('module',cfg.class,element,parent);\r\n                    }\r\n                });\r\n                \r\n            }\r\n            if (!cfg.lazy) {\r\n                await this.initModule(cfg);\r\n            }\r\n            //存入class工厂\r\n            this.classes.set(cfg.class, cfg);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 初始化模块\r\n     * @param cfg 模块类对象\r\n     */\r\n    private static async initModule(cfg: IMdlClassObj) {\r\n        //增加 .js后缀\r\n        let path: string = cfg.path;\r\n        if (!path.endsWith('.js')) {\r\n            path += '.js';\r\n        }\r\n        //加载模块类js文件\r\n        let url: string = Util.mergePath([Application.getPath('module'), path]);\r\n        await ResourceManager.getResources([{ url: url, type: 'js' }]);\r\n        // let cls = eval(cfg.class);\r\n        let cls = new Function('return '+cfg.class)();\r\n        if (cls) {\r\n            let instance = Reflect.construct(cls, [{\r\n                name: cfg.name,\r\n                data: cfg.data,\r\n                lazy: cfg.lazy\r\n            }]);\r\n            if(store){\r\n               instance.store=store;\r\n            }\r\n            //模块初始化\r\n            await instance.init();\r\n            cfg.instance = instance;\r\n            //单例，则需要保存到modules\r\n            if (cfg.singleton) {\r\n                this.modules.set(instance.id, instance);\r\n            }\r\n            //初始化完成\r\n            delete cfg.initing;\r\n        } else {\r\n            throw new NError('notexist1', NodomMessage.TipWords['moduleClass'], cfg.class);\r\n        }\r\n    }\r\n}\r\n","import {Module} from \"./module\"\r\nimport { ModuleFactory } from \"./modulefactory\";\r\n\r\n/**\r\n * 消息类\r\n */\r\nexport class Message {\r\n    /**\r\n     * 来源模块id\r\n     */\r\n    fromModule: number;\r\n    /**\r\n     * 目标模块id 或 名字\r\n     */\r\n    toModule: number|string;\r\n\r\n    /**\r\n     * 来源模块父id，当 toModule 为模块名时需要\r\n     */\r\n    parentId:number;\r\n\r\n    /**\r\n     * 消息内容\r\n     */\r\n    content: any;\r\n    \r\n    \r\n    /**\r\n     * @param fromModule \t来源模块id\r\n     * @param toModule \t\t目标模块id或名字\r\n     * @param content \t\t消息内容\r\n     * @param parentId      父模块id\r\n     */\r\n    constructor(fromModule: number, toModule: number|string, content: any,parentId?:number) {\r\n        this.fromModule = fromModule;\r\n        this.toModule = toModule;\r\n        this.content = content;\r\n        this.parentId = parentId;\r\n    }\r\n}\r\n/**\r\n * 消息队列\r\n */\r\nexport class MessageQueue {\r\n    /**\r\n     * 消息数组\r\n     */\r\n    static messages: Array<Message> =[];\r\n\r\n    static noOwnerNMessages:Array<Message> = [];\r\n    /**\r\n     * 添加消息到消息队列\r\n     * @param fromModule \t来源模块名\r\n     * @param toModule \t\t目标模块名\r\n     * @param content \t\t消息内容\r\n     * @param parentId      父模块消息\r\n     */\r\n    public static add(from: number, to: number|string, data: any,parentId?: number) {\r\n        if(parentId){\r\n            this.noOwnerNMessages.push(new Message(from,to,data,parentId));\r\n        }else{\r\n            this.messages.push(new Message(from, to, data));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从 no owner队列移动到 待发队列\r\n     * @param moduleName    模块名\r\n     * @param moduleId      模块id\r\n     * @param parentId      父模块id\r\n     */\r\n    public static move(moduleName:string,moduleId:number,parentId:number){\r\n        let index;\r\n        while((index = this.noOwnerNMessages.findIndex(item=>item.parentId===parentId && moduleName === item.toModule))!==-1){\r\n            let msg:Message = this.noOwnerNMessages[index];\r\n            //从noowner数组移除\r\n            this.noOwnerNMessages.splice(index,1);\r\n            msg.toModule = moduleId;\r\n            delete msg.parentId;\r\n            //加入待发队列\r\n            this.messages.push(msg);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 处理消息队列\r\n     */\r\n    public static handleQueue() {\r\n        for (let i = 0; i < this.messages.length; i++) {\r\n            let msg: Message = this.messages[i];\r\n            let module: Module = ModuleFactory.get(<number>msg.toModule);\r\n            // 模块状态未激活或激活才接受消息\r\n            if (module && module.state >= 2) {\r\n                module.receive(msg.fromModule, msg.content);\r\n                // 清除已接受消息，或已死亡模块的消息\r\n                MessageQueue.messages.splice(i--, 1);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Module } from \"./module\";\r\n\r\n/**\r\n * 工厂基类\r\n */\r\nexport class NFactory {\r\n    /**\r\n     * 模块名\r\n     */\r\n    private moduleId:number;\r\n    /**\r\n     * 工厂item对象\r\n     */\r\n    private items:Map<number|string,any> = new Map();\r\n    \r\n    /**\r\n     * @param module 模块\r\n     */\r\n    constructor(module?:Module) {\r\n        if (module !== undefined) {\r\n            this.moduleId = module.id;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加到工厂\r\n     * @param name \titem name\r\n     * @param item\titem\r\n     */\r\n    public add(name:string|number, item:any) {\r\n        this.items.set(name,item);\r\n    }\r\n\r\n    /**\r\n     * 获得item\r\n     * @param name \titem name\r\n     * @returns     item\r\n     */\r\n    public get(name:string|number):any{\r\n        return this.items.get(name);\r\n    }\r\n\r\n    \r\n    /**\r\n     * 从容器移除\r\n     * @param name \titem name\r\n     */\r\n    public remove(name:string|number) {\r\n        this.items.delete(name);\r\n    }\r\n\r\n    /**\r\n     * 是否拥有该项\r\n     * @param name  item name\r\n     * @return      true/false\r\n     */\r\n    public has(name:string|number):boolean{\r\n        return this.items.has(name);\r\n    }\r\n}\r\n","import { NError } from \"./error\";\r\nimport { NFactory } from \"./factory\";\r\nimport { NodomMessage } from \"./nodom\";\r\nimport { Module } from \"./module\";\r\nimport { Util } from \"./util\";\r\n\r\n/**\r\n * 方法工厂，每个模块一个\r\n */\r\nexport class MethodFactory extends NFactory {\r\n    private module:Module;\r\n    /**\r\n     * 调用方法\r\n     * @param name \t\t方法名\r\n     * @param params \t方法参数数组\r\n     */\r\n    public invoke(name:string, params:Array<any>) {\r\n        const foo = this.get(name);\r\n        if (!Util.isFunction(foo)) {\r\n            throw new NError(NodomMessage.ErrorMsgs['notexist1'], NodomMessage.TipWords['method'], name);\r\n        }\r\n        return Util.apply(foo, this.module.model, params);\r\n    }\r\n\r\n}\r\n","import { Module } from \"./module\";\r\nimport { ModuleFactory } from \"./modulefactory\";\r\n\r\n/**\r\n * 渲染器\r\n */\r\nexport class Renderer {\r\n    /**\r\n     * 等待渲染列表（模块名）\r\n     */\r\n    private static waitList: Array < number > = [];\r\n    /**\r\n     * 添加到渲染列表\r\n     * @param module 模块\r\n     */\r\n    public static add(module:Module) {\r\n        //非激活状态，不进入渲染列表\r\n        if (module.state !== 3) {\r\n            return;\r\n        }\r\n        \r\n        //如果已经在列表中，不再添加\r\n        if (!this.waitList.includes(module.id)) {\r\n            //计算优先级\r\n            this.waitList.push(module.id);\r\n        }\r\n    }\r\n    //从列表移除\r\n    public static remove(module:Module) {\r\n        let ind;\r\n        if ((ind = this.waitList.indexOf(module.id)) !== -1) {\r\n            this.waitList.splice(ind, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 队列渲染\r\n     */\r\n    public static render() {\r\n        //调用队列渲染\r\n        for (let i=0; i<this.waitList.length; i++) {\r\n            let m = ModuleFactory.get(this.waitList[i]);\r\n            //渲染成功，从队列移除\r\n            if(!m || m.render()){\r\n                this.waitList.shift();\r\n                i--;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Element } from \"./element\";\r\nimport { Model } from \"./model\";\r\nimport { Module } from \"./module\";\r\nimport { Renderer } from \"./renderer\";\r\n\r\n/**\r\n * 模型工厂\r\n */\r\nexport class ModelManager {\r\n    public module: Module;\r\n    /**\r\n     * 数据对象与模型映射，key为数据对象，value为model\r\n     */\r\n    private dataMap: WeakMap<object, Model> = new WeakMap();\r\n    /**\r\n     * 模型模块映射\r\n     * key:model proxy, value:{model:model,watchers:{key:[监听器1,监听器2,...]}}\r\n     * 每个数据对象，可有多个监听器\r\n     */\r\n    private modelMap: WeakMap<Model, any> = new WeakMap();\r\n    constructor(module: Module) {\r\n        this.module = module;\r\n    }\r\n\r\n    /**\r\n     * 添加到 dataNModelMap\r\n     * @param data      数据对象\r\n     * @param model     模型\r\n     */\r\n    public addToDataMap(data: Object, model: Model) {\r\n        this.dataMap.set(data, model);\r\n    }\r\n\r\n    /**\r\n  * 删除从 dataNModelMap\r\n  * @param data      数据对象\r\n  * @param model     模型\r\n  */\r\n    public delToDataMap(data: Object) {\r\n        this.dataMap.delete(data);\r\n    }\r\n\r\n    /**\r\n     * 从dataNModelMap获取model\r\n     * @param data      数据对象\r\n     * @returns         model\r\n     */\r\n    public getFromDataMap(data: Object): Model {\r\n        return this.dataMap.get(data);\r\n    }\r\n\r\n    /**\r\n     * 是否存在数据模型映射\r\n     * @param data  数据对象\r\n     * @returns     true/false\r\n     */\r\n    public hasDataNModel(data: Object): Boolean {\r\n        return this.dataMap.has(data);\r\n    }\r\n\r\n\r\n    /**\r\n     * 添加源模型到到模型map\r\n     * @param model     模型代理\r\n     * @param srcNModel  源模型\r\n     */\r\n    public addModelToModelMap(model: any, srcNModel: Model) {\r\n        if (!this.modelMap.has(model)) {\r\n            this.modelMap.set(model, { model: srcNModel });\r\n        } else {\r\n            this.modelMap.get(model).model = srcNModel;\r\n        }\r\n    }\r\n    /**\r\n   * 删除源模型到到模型map\r\n   * @param model     模型代理\r\n   * @param srcNModel  源模型\r\n   */\r\n    public delModelToModelMap(model: any) {\r\n\r\n        this.modelMap.delete(model)\r\n\r\n    }\r\n    /**\r\n     * 从模型Map获取源模型\r\n     * @param model     模型代理\r\n     * @returns         源模型\r\n     */\r\n    public getModelFromModelMap(model: any): Model {\r\n        if (this.modelMap.has(model)) {\r\n            return this.modelMap.get(model).model;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * 获取model监听器\r\n     * @param model     model\r\n     * @param key       model对应的属性\r\n     * @param foo       监听处理方法\r\n     * @returns         void\r\n     */\r\n    public addWatcherToModelMap(model: Model, key: string, foo: Function | string) {\r\n        // 把model加入到model map\r\n        if (!this.modelMap.has(model)) {\r\n            this.modelMap.set(model, {});\r\n        }\r\n        //添加watchers属性\r\n        if (!this.modelMap.get(model).watchers) {\r\n            this.modelMap.get(model).watchers = Object.create(null);\r\n        }\r\n        let watchers = this.modelMap.get(model).watchers;\r\n        //添加观察器数组\r\n        if (!watchers[key]) {\r\n            watchers[key] = [];\r\n        }\r\n        //把处理函数加入观察器数组\r\n        watchers[key].push(foo);\r\n    }\r\n\r\n    /**\r\n     * 获取model监听器\r\n     * @param model     model\r\n     * @param key       model对应的属性\r\n     * @param foo       监听处理方法\r\n     * @returns         void\r\n     */\r\n    public removeWatcherFromModelMap(model: Model, key: string, foo: Function | string) {\r\n        if (!this.modelMap.has(model)) {\r\n            return;\r\n        }\r\n        if (!this.modelMap.get(model).watchers) {\r\n            return;\r\n        }\r\n        let watchers = this.modelMap.get(model).watchers;\r\n        if (!watchers[key]) {\r\n            return;\r\n        }\r\n        let index = watchers[key].findIndex(foo);\r\n        //找到后移除\r\n        if (index !== -1) {\r\n            watchers.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取model监听器\r\n     * @param model     model\r\n     * @param key       model对应的属性\r\n     * @returns         监听处理函数数组\r\n     */\r\n    public getWatcherFromModelMap(model: Model, key: string): Array<Function> {\r\n        if (!this.modelMap.has(model)) {\r\n            return undefined;\r\n        }\r\n        let watchers = this.modelMap.get(model).watchers;\r\n        if (watchers) {\r\n            return watchers[key];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新导致渲染\r\n     * @param model     model\r\n     * @param key       属性\r\n     * @param oldValue  旧值\r\n     * @param newValue  新值\r\n     */\r\n    public update(model: Model, key: string, oldValue: any, newValue: Element) {\r\n        Renderer.add(this.module);\r\n        //处理观察器函数\r\n        let watcher = this.getWatcherFromModelMap(model, key);\r\n        if (watcher) {\r\n            for (let foo of watcher) {\r\n                //方法名\r\n                if (typeof foo === 'string') {\r\n                    if (this.module) {\r\n                        foo = this.module.getMethod(foo);\r\n                        if (foo) {\r\n                            foo.call(model, oldValue, newValue);\r\n                        }\r\n                    }\r\n                } else {\r\n                    foo.call(model, oldValue, newValue);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","import { Application } from \"./application\";\r\nimport { Compiler } from \"./compiler\";\r\nimport { DefineElementManager } from \"./defineelementmanager\";\r\nimport { Directive } from \"./directive\";\r\nimport { Element } from \"./element\";\r\nimport { MessageQueue } from \"./messagequeue\";\r\nimport { MethodFactory } from \"./methodfactory\";\r\nimport { Model } from \"./model\";\r\nimport { ModelManager } from \"./modelmanager\";\r\nimport { ModuleFactory } from \"./modulefactory\";\r\nimport { request } from \"./nodom\";\r\nimport { Renderer } from \"./renderer\";\r\nimport { ResourceManager } from \"./resourcemanager\";\r\nimport { ChangedDom, IModuleCfg, IResourceObj, RegisterOps } from \"./types\";\r\nimport { Util } from \"./util\";\r\nimport { store } from \"./nodom\";\r\n\r\n/**\r\n * 模块类\r\n */\r\nexport class Module {\r\n    /**\r\n     * 模块id(全局唯一)\r\n     */\r\n    public id: number;\r\n    /**\r\n     * 模块名(模块内(父模块的子模块之间)唯一)，如果不设置，则系统会自动生成Module+id\r\n     */\r\n    public name: string;\r\n\r\n    /**\r\n     * 模型\r\n     */\r\n    public model: Model;\r\n\r\n    /**\r\n     * 是否主模块，一个app只有一个根模块\r\n     */\r\n    private isMain: boolean;\r\n\r\n    /**\r\n     * 是否是首次渲染\r\n     */\r\n    private firstRender: boolean = true;\r\n\r\n    /**\r\n     * 根虚拟dom\r\n     */\r\n    public virtualDom: Element;\r\n\r\n    /**\r\n     * 渲染树\r\n     */\r\n    private renderTree: Element;\r\n\r\n    /**\r\n     * 父模块名\r\n     */\r\n    private parentId: number;\r\n\r\n    /**\r\n     * 子模块id数组\r\n     */\r\n    public children: Array<number> = [];\r\n\r\n    /**\r\n     * 模块对应容器选择器\r\n     */\r\n    private selector: string;\r\n\r\n    /**\r\n     * 模块创建时执行操作\r\n     */\r\n    private createOps: Array<Function> = [];\r\n\r\n    /**\r\n     * 状态 0 create(创建)、1 init(初始化，已编译)、2 unactive(渲染后被置为非激活) 3 active(激活，可渲染显示)\r\n     */\r\n    public state: number = 0;\r\n\r\n    /**\r\n     * 数据url\r\n     */\r\n    private dataUrl: string;\r\n\r\n    /**\r\n     * 需要加载新数据\r\n     */\r\n    private loadNewData: boolean = false;\r\n\r\n    /**\r\n     * 方法工厂\r\n     */\r\n    private methodFactory: MethodFactory;\r\n\r\n    /**\r\n     * 数据模型工厂\r\n     */\r\n    public modelManager: ModelManager;\r\n\r\n    /**\r\n     * 待渲染的虚拟dom数组\r\n     */\r\n    private renderDoms: Array<ChangedDom> = [];\r\n\r\n    /**\r\n     * 初始配置\r\n     */\r\n    private initConfig: IModuleCfg;\r\n\r\n    /**\r\n     * 放置模块的容器\r\n     */\r\n    private container: HTMLElement = null;\r\n\r\n    /**\r\n     * 模版串\r\n     */\r\n    private template: string;\r\n\r\n    /**\r\n     * 容器key\r\n     */\r\n    private containerKey: string;\r\n\r\n    /**\r\n     * 子模块名id映射，如 {modulea:1}\r\n     */\r\n    private moduleMap: Map<string, number> = new Map();\r\n\r\n    /**\r\n     * 状态管理对象\r\n     */\r\n    private store: object;\r\n\r\n    /**\r\n     * 父模块通过标签 表达式/字符串 传值\r\n     */\r\n    props: object;\r\n\r\n\r\n    /**\r\n     * 构造器\r\n     * @param config    模块配置\r\n     */\r\n    constructor(config?: IModuleCfg) {\r\n        this.id = Util.genId();\r\n        // 模块名字\r\n        if (config && config.name) {\r\n            this.name = config.name;\r\n        } else {\r\n            this.name = 'Module' + this.id;\r\n        }\r\n        ModuleFactory.add(this);\r\n        this.methodFactory = new MethodFactory(this);\r\n        this.modelManager = new ModelManager(this);\r\n        //执行创建后操作\r\n        for (let foo of this.createOps) {\r\n            foo.call(this);\r\n        }\r\n        //执行创建事件\r\n        this.doModuleEvent('onCreate');\r\n        //无配置对象，不需要处理\r\n        if (!config) {\r\n            return;\r\n        }\r\n\r\n        //保存config，存在延迟初始化情况\r\n        this.initConfig = config;\r\n        //设置选择器\r\n        this.selector = config.el;\r\n        //方法加入工厂\r\n        if (Util.isObject(config.methods)) {\r\n            Util.getOwnProps(config.methods).forEach((item) => {\r\n                this.methodFactory.add(item, config.methods[item]);\r\n            });\r\n        }\r\n\r\n        //清除container的内部内容\r\n        if (this.getContainer()) {\r\n            // 处理特殊字符\r\n            this.template = this.container.innerHTML.trim();\r\n            let transferWords = { 'lt': '<', 'gt': '>', 'nbsp': ' ', 'amp': '&', 'quot': '\"' };\r\n            this.template = this.template.replace(/&(lt|gt|nbsp|amp|quot);/ig, function (all, t) { return transferWords[t]; });\r\n            this.container.innerHTML = '';\r\n        }\r\n        if (store) {\r\n            this.store = store;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 初始化模块（加载和编译）\r\n     */\r\n    private async init(): Promise<any> {\r\n        let config = this.initConfig;\r\n        let urlArr: Array<Object> = []; //请求url数组\r\n        let cssPath: string = Application.getPath('css');\r\n        let templatePath: string = Application.getPath('template');\r\n        let jsPath: string = Application.getPath('js');\r\n        //加载文件\r\n        if (config && Util.isArray(config.requires) && config.requires.length > 0) {\r\n            config.requires.forEach((item) => {\r\n                let type: string;\r\n                let url: string = '';\r\n                if (Util.isObject(item)) { //为对象，可能是css或js\r\n                    type = item['type'] || 'js';\r\n                    url = item['url'];\r\n                } else { //js文件\r\n                    type = 'js';\r\n                    url = <string>item;\r\n                }\r\n                //转换路径\r\n                let path: string = type === 'js' ? jsPath : cssPath;\r\n                urlArr.push({ url: Util.mergePath([path, url]), type: type });\r\n            });\r\n        }\r\n\r\n        //模版串\r\n        let templateStr: string = this.template;\r\n        //模版信息\r\n        if (config.template) {\r\n            config.template = config.template.trim();\r\n            if (config.template.startsWith('<')) { //html模版串\r\n                templateStr = config.template;\r\n            } else {  //文件\r\n                urlArr.push({\r\n                    url: Util.mergePath([templatePath, config.template]),\r\n                    type: config.template.endsWith('.nd') ? 'nd' : 'template'\r\n                });\r\n            }\r\n        }\r\n        //删除template\r\n        delete this.template;\r\n\r\n        //注册自定义标签模块\r\n        if (this.methodFactory.has('registerModule')) {\r\n            let registers: Array<RegisterOps> = Reflect.apply(this.methodFactory.get('registerModule'), null, []);\r\n            if (Array.isArray(registers) && registers.length > 0) {\r\n                registers.forEach(v => {\r\n                    const tagName = v.name.toUpperCase();\r\n                    \r\n                    //重复注册\r\n                    if (DefineElementManager.get(tagName) !== undefined) {\r\n                        throw new Error(`The module name ${tagName}has been registered, please change the name `);\r\n                    }\r\n                    DefineElementManager.add(tagName, {\r\n                        init: function (element: Element, parent?: Element) {\r\n                            element.tagName = 'div';\r\n                            element.setProp('modulename', v.name);\r\n                            new Directive('module', v.class, element, parent);\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        }\r\n\r\n        //如果已存在templateStr，则直接编译\r\n        if (!Util.isEmpty(templateStr)) {\r\n            this.virtualDom = Compiler.compile(templateStr);\r\n        }\r\n\r\n        //数据\r\n        if (config.data) { //数据\r\n            if (Util.isObject(config.data)) { //数据\r\n                this.model = new Model(config.data, this);\r\n            } else { //数据url\r\n                urlArr.push({\r\n                    url: config.data,\r\n                    type: 'data'\r\n                });\r\n                this.dataUrl = <string>config.data;\r\n            }\r\n        } else { //空数据\r\n            this.model = new Model({}, this);\r\n        }\r\n\r\n        //批量请求文件\r\n        if (urlArr.length > 0) {\r\n            let rets: IResourceObj[] = await ResourceManager.getResources(urlArr);\r\n            for (let r of rets) {\r\n                if (r.type === 'template' || r.type === 'nd') {\r\n                    this.virtualDom = <Element>r.content;\r\n                } else if (r.type === 'data') {\r\n                    this.model = new Model(r.content, this);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n        //处理子模块\r\n        if (this.initConfig.modules) {\r\n            for (let cfg of this.initConfig.modules) {\r\n                let mdl: Module = new Module(cfg);\r\n                mdl.parentId = this.id;\r\n                this.addChild(mdl.id);\r\n            }\r\n        }\r\n        changeState(this);\r\n        delete this.initConfig;\r\n        /**\r\n         * 修改状态\r\n         * @param mod \t模块\r\n         */\r\n        function changeState(mod: Module) {\r\n            if (mod.isMain) {\r\n                mod.state = 3;\r\n                //可能不能存在数据，需要手动添加到渲染器\r\n                Renderer.add(mod);\r\n            } else if (mod.parentId) {\r\n                mod.state = ModuleFactory.get(mod.parentId).state;\r\n            } else {\r\n                mod.state = 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 模型渲染\r\n     * @return false 渲染失败 true 渲染成功\r\n     */\r\n    public render(): boolean {\r\n        //状态为2，不渲染\r\n        if (this.state === 2) {\r\n            return true;\r\n        }\r\n        //容器没就位或state不为active则不渲染，返回渲染失败\r\n        if (this.state !== 3 || !this.virtualDom || !this.getContainer()) {\r\n            return false;\r\n        }\r\n        //克隆新的树\r\n        let root: Element = this.virtualDom.clone();\r\n\r\n        if (this.firstRender) {\r\n            //model无数据，如果存在dataUrl，则需要加载数据\r\n            if (this.loadNewData && this.dataUrl) {\r\n                request({\r\n                    url: this.dataUrl,\r\n                    type: 'json'\r\n                }).then(\r\n                    (r) => {\r\n                        this.model = new Model(r, this);\r\n                        this.doFirstRender(root);\r\n                        this.loadNewData = false;\r\n                    }\r\n                );\r\n            } else {\r\n                this.doFirstRender(root);\r\n            }\r\n        } else { //增量渲染\r\n            //执行每次渲染前事件\r\n            this.doModuleEvent('onBeforeRender');\r\n            if (this.model) {\r\n                root.model = this.model;\r\n                let oldTree = this.renderTree;\r\n                this.renderTree = root;\r\n                //渲染\r\n                root.render(this, null);\r\n                this.clearDontRender(root);\r\n                this.doModuleEvent('onBeforeRenderToHtml');\r\n                let deleteMap = new Map();\r\n                // 比较节点\r\n                root.compare(oldTree, this.renderDoms, deleteMap);\r\n                //刪除和替換\r\n                deleteMap.forEach((value, key) => {\r\n                    let dp: HTMLElement = this.getNode(key);\r\n                    for (let i = value.length - 1; i >= 0; i--) {\r\n                        let index = value[i];\r\n                        if (typeof index == 'string') {\r\n                            let parm = index.split('|');\r\n                            index = parm[0];\r\n                            const vDom: Element = root.query(parm[1]);\r\n                            dp.insertBefore((() => {\r\n                                const el: HTMLElement | SVGElement = vDom.getTmpParam('isSvgNode') ? Util.newSvgEl(vDom.tagName) : Util.newEl(vDom.tagName);\r\n                                //设置属性\r\n                                Util.getOwnProps(vDom.props).forEach(k => el.setAttribute(k, vDom.props[k]));\r\n                                el.setAttribute('key', vDom.key);\r\n                                vDom.handleNEvents(this, el, vDom.parent);\r\n                                vDom.handleAssets(el);\r\n                                return el;\r\n                            })(), dp.childNodes[index++]);\r\n                        }\r\n                        dp.removeChild(dp.childNodes[index]);\r\n                    }\r\n                });\r\n                deleteMap.clear();\r\n\r\n                // 渲染\r\n                this.renderDoms.forEach((item) => {\r\n                    item.node.renderToHtml(this, item);\r\n                });\r\n            }\r\n            //执行每次渲染后事件\r\n            this.doModuleEvent('onRender');\r\n        }\r\n        //数组还原\r\n        this.renderDoms = [];\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 执行首次渲染\r\n     * @param root \t根虚拟dom\r\n     */\r\n    private doFirstRender(root: Element) {\r\n        this.doModuleEvent('onBeforeFirstRender');\r\n        //渲染树\r\n        this.renderTree = root;\r\n        if (this.model) {\r\n            root.model = this.model;\r\n        }\r\n\r\n        root.render(this, null);\r\n        this.clearDontRender(root);\r\n        this.doModuleEvent('onBeforeFirstRenderToHTML');\r\n        //清空子元素\r\n        Util.empty(this.container);\r\n        //渲染到html\r\n        root.renderToHtml(this, <ChangedDom>{ type: 'fresh' });\r\n        //删除首次渲染标志\r\n        delete this.firstRender;\r\n        //执行首次渲染后事件\r\n        this.doModuleEvent('onFirstRender');\r\n    }\r\n\r\n    /**\r\n     * 克隆模块\r\n     * 共享virtual Dom，但是名字为新名字\r\n     * @param moduleName    新模块名\r\n     */\r\n    clone(moduleName: string): any {\r\n        let me = this;\r\n        let m: Module = new Module({ name: moduleName });\r\n        //克隆数据\r\n        if (this.model) {\r\n            let data = Util.clone(this.model, /^\\$\\S+/);\r\n            m.model = new Model(data, m);\r\n        }\r\n        let excludes = ['id', 'name', 'model', 'virtualDom', 'container', 'containerKey', 'modelManager', 'defineElements'];\r\n        Object.getOwnPropertyNames(this).forEach((item) => {\r\n            if (excludes.includes(item)) {\r\n                return;\r\n            }\r\n            m[item] = me[item];\r\n        });\r\n        //克隆虚拟dom树\r\n        m.virtualDom = this.virtualDom.clone(true);\r\n        return m;\r\n    }\r\n\r\n    /**\r\n     * 检查容器是否存在，如果不存在，则尝试找到\r\n     */\r\n    public getContainer() {\r\n        //根模块，直接使用el\r\n        if (this.selector) {\r\n            this.container = document.querySelector(this.selector);\r\n        } else {  //非根模块，根据容器key获得\r\n            this.container = document.querySelector(\"[key='\" + this.containerKey + \"']\");\r\n        }\r\n        return this.container;\r\n    }\r\n\r\n    /**\r\n     * 设置模块容器 key\r\n     * @param key   模块容器key\r\n     */\r\n    public setContainerKey(key: string) {\r\n        this.containerKey = key;\r\n    }\r\n\r\n    /**\r\n     * 获取模块容器 key\r\n     * @param key   模块容器key\r\n     */\r\n    public getContainerKey() {\r\n        return (this.containerKey);\r\n    }\r\n\r\n\r\n    /**\r\n     * 数据改变\r\n     * @param model \t改变的model\r\n     */\r\n    public dataChange() {\r\n        Renderer.add(this);\r\n    }\r\n\r\n    /**\r\n     * 添加子模块\r\n     * @param moduleId      模块id\r\n     * @param className     类名\r\n     */\r\n    public addChild(moduleId: number) {\r\n        if (!this.children.includes(moduleId)) {\r\n            this.children.push(moduleId);\r\n            let m: Module = ModuleFactory.get(moduleId);\r\n            if (m) {\r\n                m.parentId = this.id;\r\n            }\r\n            //保存name和id映射\r\n            this.moduleMap.set(m.name, moduleId);\r\n\r\n            //执行无主消息检测\r\n            MessageQueue.move(m.name, moduleId, this.id);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 发送\r\n     * @param toName \t\t接收模块名或模块id，如果为模块id，则直接发送，不需要转换\r\n     * @param data \t\t\t消息内容\r\n     */\r\n    public send(toName: string | number, data: any) {\r\n        if (typeof toName === 'number') {\r\n            MessageQueue.add(this.id, toName, data);\r\n            return;\r\n        }\r\n\r\n        let m: Module;\r\n        let pm: Module = ModuleFactory.get(this.parentId);\r\n        //1 比对父节点名\r\n        //2 比对兄弟节点名\r\n        //3 比对孩子节点名\r\n        if (pm) {\r\n            if (pm.name === toName) { //父亲\r\n                m = pm\r\n            } else { //兄弟\r\n                m = pm.getChild(toName);\r\n            }\r\n        }\r\n        if (!m) { //孩子节点\r\n            m = this.getChild(toName);\r\n        }\r\n        if (m) {\r\n            MessageQueue.add(this.id, m.id, data);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 广播给父、兄弟和孩子（第一级）节点\r\n     */\r\n    public broadcast(data: any) {\r\n        //兄弟节点\r\n        if (this.parentId) {\r\n            let pmod: Module = ModuleFactory.get(this.parentId);\r\n            if (pmod) {\r\n                //父模块\r\n                this.send(this.parentId, data);\r\n                if (pmod.children) {\r\n                    pmod.children.forEach((item) => {\r\n                        //自己不发\r\n                        if (item === this.id) {\r\n                            return;\r\n                        }\r\n                        let m: Module = ModuleFactory.get(item);\r\n                        //兄弟模块\r\n                        this.send(m.id, data);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.children !== undefined) {\r\n            this.children.forEach((item) => {\r\n                let m: Module = ModuleFactory.get(item);\r\n                this.send(m.id, data);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 接受消息\r\n     * @param fromName \t\t来源模块名\r\n     * @param data \t\t\t消息内容\r\n     */\r\n    public receive(fromName, data) {\r\n        this.doModuleEvent('onReceive', [fromName, data]);\r\n    }\r\n\r\n    /**\r\n     * 激活模块(添加到渲染器)\r\n     */\r\n    public async active() {\r\n        //激活状态不用激活，创建状态不能激活\r\n        if (this.state === 3) {\r\n            return;\r\n        }\r\n        //未初始化，需要先初始化\r\n        if (this.state === 0) {\r\n            await this.init();\r\n        }\r\n        this.state = 3;\r\n        //添加到渲染器\r\n        Renderer.add(this);\r\n        //孩子节点激活\r\n        if (Util.isArray(this.children)) {\r\n            this.children.forEach(async (item) => {\r\n                let m: Module = ModuleFactory.get(item);\r\n                if (m) {\r\n                    await m.active();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 取消激活\r\n     */\r\n    public unactive() {\r\n        //主模块不允许取消\r\n        if (this.isMain || this.state === 2) {\r\n            return;\r\n        }\r\n        this.state = 2;\r\n        //设置首次渲染标志\r\n        this.firstRender = true;\r\n        if (Util.isArray(this.children)) {\r\n            this.children.forEach((item) => {\r\n                let m: Module = ModuleFactory.get(item);\r\n                if (m) {\r\n                    m.unactive();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 模块终结\r\n     */\r\n    public destroy() {\r\n        if (Util.isArray(this.children)) {\r\n            this.children.forEach((item) => {\r\n                let m: Module = ModuleFactory.get(item);\r\n                if (m) {\r\n                    m.destroy();\r\n                }\r\n            });\r\n        }\r\n        //从工厂释放\r\n        ModuleFactory.remove(this.id);\r\n    }\r\n\r\n    /*************事件**************/\r\n\r\n    /**\r\n     * 执行模块事件\r\n     * @param eventName \t事件名\r\n     * @param param \t\t参数，为数组\r\n     */\r\n    private doModuleEvent(eventName: string, param?: Array<any>) {\r\n        const foo: Function = this.methodFactory.get(eventName);\r\n        if (!foo) {\r\n            return;\r\n        }\r\n        //模块作为第一个参数\r\n        if (param) {\r\n            param.unshift(this);\r\n        } else {\r\n            param = [this];\r\n        }\r\n        //调用方法\r\n        Util.apply(foo, this.model, param);\r\n    }\r\n\r\n    /**\r\n     * 添加实例化后操作\r\n     * @param foo  \t操作方法\r\n     */\r\n    public addCreateOperation(foo: Function) {\r\n        if (!Util.isFunction(foo)) {\r\n            return;\r\n        }\r\n        if (!this.createOps.includes(foo)) {\r\n            this.createOps.push(foo);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清理不渲染节点\r\n     * @param dom   节点\r\n     */\r\n    clearDontRender(dom: Element) {\r\n        for (let i = 0; i < dom.children.length; i++) {\r\n            let item = dom.children[i];\r\n            if (item.dontRender) {\r\n                dom.children.splice(i, 1);\r\n                return;\r\n            }\r\n            this.clearDontRender(item);\r\n        }\r\n    }\r\n    /**\r\n     * 获取子孙模块\r\n     * @param name          模块名 \r\n     * @param descendant    如果为false,只在子节点内查找，否则在后代节点查找（深度查询），直到找到第一个名字相同的模块\r\n     */\r\n    public getChild(name: string, descendant?: boolean): Module {\r\n        if (this.moduleMap.has(name)) {\r\n            let mid = this.moduleMap.get(name);\r\n            return ModuleFactory.get(mid);\r\n        } else if (descendant) {\r\n            for (let id of this.children) {\r\n                let m = ModuleFactory.get(id);\r\n                if (m) {\r\n                    let m1 = m.getChild(name, descendant);\r\n                    if (m1) {\r\n                        return m1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 获取模块方法\r\n     * @param name  方法名\r\n     * @returns     方法\r\n     */\r\n    public getMethod(name: string): Function {\r\n        return this.methodFactory.get(name);\r\n    }\r\n\r\n    /**\r\n     * 添加方法\r\n     * @param name  方法名\r\n     * @param foo   方法函数\r\n     */\r\n    public addMethod(name: string, foo: Function) {\r\n        this.methodFactory.add(name, foo);\r\n    }\r\n\r\n    /**\r\n     * 移除方法\r\n     * @param name  方法名\r\n     */\r\n    public removeMethod(name: string) {\r\n        this.methodFactory.remove(name);\r\n    }\r\n\r\n    /**\r\n     * 设置数据url\r\n     * @param url   数据url\r\n     */\r\n    public setDataUrl(url: string) {\r\n        this.dataUrl = url;\r\n        //设置新加载数据标志\r\n        this.loadNewData = true;\r\n    }\r\n\r\n    /**\r\n     * 获取模块下的html节点\r\n     * @param key       el key值或对象{attrName:attrValue}\r\n     * @param notNull   如果不存在，则返回container\r\n     * @returns         html element\r\n     */\r\n    public getNode(key: string | Object, notNull?: boolean): HTMLElement {\r\n        let keyName: string;\r\n        let value: any;\r\n        if (typeof key === 'string') {  //默认为key值查找\r\n            keyName = 'key';\r\n            value = key;\r\n        } else {  //对象\r\n            keyName = Object.getOwnPropertyNames(key)[0];\r\n            value = key[keyName];\r\n        }\r\n        let qs: string = \"[\" + keyName + \"='\" + value + \"']\";\r\n        let el: HTMLElement = this.container ? this.container.querySelector(qs) : null;\r\n        if (!el && notNull) {\r\n            return this.container;\r\n        }\r\n        return el;\r\n    }\r\n\r\n    /**\r\n     * 获取虚拟dom节点\r\n     * @param key               dom key\r\n     * @param fromVirtualDom    是否从源虚拟dom数获取，否则从渲染树获取\r\n     */\r\n    public getElement(key: string | Object, fromVirtualDom?: boolean) {\r\n        let tree = fromVirtualDom ? this.virtualDom : this.renderTree;\r\n        return tree.query(key);\r\n    }\r\n\r\n    /**\r\n     * 判断是否为容器key\r\n     * @param key   element key\r\n     */\r\n    public isContainerKey(key: string): boolean {\r\n        return this.containerKey === key;\r\n    }\r\n\r\n    /**\r\n     * 设置首次渲染标志\r\n     * @param flag  首次渲染标志true/false\r\n     */\r\n    setFirstRender(flag: boolean) {\r\n        this.firstRender = flag;\r\n    }\r\n\r\n    /**\r\n     * 设置为主模块\r\n     */\r\n    setMain() {\r\n        this.isMain = true;\r\n    }\r\n\r\n    /**\r\n     * 设置模块容器选择器\r\n     * @param selector \r\n     */\r\n    setSelector(selector: string) {\r\n        this.selector = selector;\r\n    }\r\n}\r\n","import { Application } from \"./application\";\r\nimport { NError } from \"./error\";\r\nimport { Model } from \"./model\";\r\nimport { Module } from \"./module\";\r\nimport { ModuleFactory } from \"./modulefactory\";\r\nimport { NodomMessage } from \"./nodom\";\r\nimport { IRouteCfg } from \"./types\";\r\nimport { Util } from \"./util\";\r\n\r\n/**\r\n * 路由类\r\n * @since \t\t1.0\r\n */\r\nexport class Router {\r\n    /**\r\n     * 加载中标志\r\n     */\r\n    static loading:boolean = false;\r\n    /**\r\n     * 路由map\r\n     */\r\n    static routes:Map<number,Route> = new Map();\r\n    /**\r\n     * 当前路径\r\n     */\r\n    static currentPath:string = '';\r\n    /**\r\n     * 显示路径（useParentPath时，实际路由路径与显示路径不一致）\r\n     */\r\n    static showPath:string = '';\r\n    /**\r\n     * path等待链表\r\n     */\r\n    static waitList:Array<string> = []; \r\n    /**\r\n     * 当前路由在路由链中的index\r\n     */\r\n    static currentIndex:number = 0;\r\n    /**\r\n     * 默认路由进入事件方法\r\n     */\r\n    static onDefaultEnter:Function;\r\n    /**\r\n     * 默认路由离开事件\r\n     */\r\n    static onDefaultLeave:Function; \r\n    \r\n    /**\r\n     * 启动方式 0:直接启动 1:由element active改变启动 2:popstate 启动\r\n     */\r\n    static startStyle:number = 0;\r\n\r\n    /**\r\n     * 激活Dom map，格式为{moduleId:[]}\r\n     */\r\n    static activeDomMap:Map<number,Array<string>> = new Map();\r\n\r\n    /**\r\n     * 绑定到module的router指令对应的key，即router容器对应的key，格式为 {moduleId:routerKey,...}\r\n     */\r\n    static routerKeyMap:Map<number,string> = new Map();\r\n    \r\n    /**\r\n     * 把路径加入跳转列表(准备跳往该路由)\r\n     * @param path \t路径 \r\n     */\r\n    static async go(path:string) {\r\n        for (let i = 0; i < this.waitList.length; i++) {\r\n            let li:string = this.waitList[i];\r\n            //相等，则不加入队列\r\n            if (li === path) {\r\n                return;\r\n            }\r\n            //父路径，不加入\r\n            if (li.indexOf(path) === 0 && li.substr(path.length + 1,1) === '/') {\r\n                return;\r\n            }\r\n        }\r\n        this.waitList.push(path);\r\n        this.load();\r\n    }\r\n\r\n    /**\r\n     * 启动加载\r\n     */\r\n    private static async load() {\r\n        //在加载，或无等待列表，则返回\r\n        if (this.loading || this.waitList.length === 0) {\r\n            return;\r\n        }\r\n        let path:string = this.waitList.shift();\r\n        this.loading = true;\r\n        await this.start(path);\r\n        this.loading = false;\r\n        this.load();\r\n    }\r\n\r\n    /**\r\n     * 切换路由\r\n     * @param path \t路径\r\n     */\r\n    private static async start(path:string) {\r\n        let diff = this.compare(this.currentPath, path);\r\n        //获得当前模块，用于寻找router view\r\n        let parentModule:Module;\r\n        if(diff[0] === null){\r\n            parentModule = findParentModule();\r\n        }else{\r\n            if(typeof diff[0].module === 'string'){\r\n                parentModule = await ModuleFactory.getInstance(diff[0].module,diff[0].moduleName,diff[0].dataUrl);\r\n            }else{\r\n                parentModule = ModuleFactory.get(diff[0].module);\r\n            }\r\n        }\r\n        \r\n        //父模块不存在，不继续处理\r\n        if(!parentModule){\r\n            return;\r\n        }\r\n        //onleave事件，从末往前执行\r\n        for (let i = diff[1].length - 1; i >= 0; i--) {\r\n            const r = diff[1][i];\r\n            if (!r.module) {\r\n                continue;\r\n            }\r\n            let module:Module = ModuleFactory.get(r.module);\r\n            if (Util.isFunction(this.onDefaultLeave)) {\r\n                this.onDefaultLeave(module.model);\r\n            }\r\n            if (Util.isFunction(r.onLeave)) {\r\n                r.onLeave(module.model);\r\n            }\r\n            //module置为不激活\r\n            module.unactive();\r\n        }\r\n        \r\n        let showPath:string; \t\t\t\t//实际要显示的路径\r\n        \r\n        if (diff[2].length === 0) { //路由相同，参数不同\r\n            let route:Route = diff[0];\r\n            let proute:Route = diff[3];\r\n            if (route !== null) {\r\n                //如果useparentpath，则使用父路由的路径，否则使用自己的路径\r\n                showPath = route.useParentPath && proute?proute.fullPath:route.fullPath;\r\n                //给模块设置路由参数\r\n                let module:Module = ModuleFactory.get(<number>route.module);\r\n                route.setLinkActive();\r\n                //设置首次渲染\r\n                module.setFirstRender(true);\r\n                await module.active();\r\n                setRouteParamToNModel(route,module);\r\n            }\r\n        } else { //路由不同\r\n            //加载模块\r\n            for (let ii = 0,index=0,len=diff[2].length; ii < len; ii++) {\r\n                let route:Route = diff[2][ii];\r\n\r\n                //路由不存在或路由没有模块（空路由）\r\n                if (!route || !route.module) {\r\n                    continue;\r\n                }\r\n                \r\n                if (!route.useParentPath) {\r\n                    showPath = route.fullPath;\r\n                }\r\n                let module:Module;\r\n                //尚未获取module，进行初始化\r\n                if(typeof route.module === 'string'){\r\n                    module = await ModuleFactory.getInstance(route.module,route.moduleName,route.dataUrl);\r\n                    if(!module){\r\n                        throw new NError('notexist1',NodomMessage.TipWords['module'],route.module);\r\n                    }\r\n                    route.module = module.id;\r\n                }else{\r\n                    module = ModuleFactory.get(route.module);\r\n                }\r\n                \r\n                //设置首次渲染\r\n                module.setFirstRender(true);\r\n                let routerKey:string = Router.routerKeyMap.get(parentModule.id);\r\n                //从父模块子节点中删除以此routerKey为containerKey的模块\r\n                for(let i=0;i<parentModule.children.length;i++){\r\n                    let m:Module = ModuleFactory.get(parentModule.children[i]);\r\n                    if(m && m.isContainerKey(routerKey)){\r\n                        parentModule.children.splice(i,1);\r\n                        break;\r\n                    }\r\n                }\r\n                //把此模块添加到父模块\r\n                parentModule.addChild(module.id);\r\n                module.setContainerKey(routerKey);\r\n                //激活模块\r\n                await module.active();\r\n                //设置active项激活\r\n                route.setLinkActive();\r\n                \r\n                //设置路由参数\r\n                setRouteParamToNModel(route);\r\n                //默认全局路由enter事件\r\n                if (Util.isFunction(this.onDefaultEnter)) {\r\n                    this.onDefaultEnter(module.model);\r\n                }\r\n                //当前路由进入事件\r\n                if (Util.isFunction(route.onEnter)) {\r\n                    route.onEnter(module.model);\r\n                }\r\n                parentModule = module;\r\n            }\r\n        }\r\n        //如果是history popstate，则不加入history\r\n        if (this.startStyle !== 2 && showPath) {\r\n            let p:string = Util.mergePath([Application.getPath('route') ,showPath]);\r\n            //子路由，替换state\r\n            if (this.showPath && showPath.indexOf(this.showPath) === 0) {\r\n                history.replaceState(path, '', p);\r\n            } else { //路径push进history\r\n                history.pushState(path, '', p);\r\n            }\r\n            //设置显示路径\r\n            this.showPath = showPath;\r\n        }\r\n        //修改currentPath\r\n        this.currentPath = path;\r\n        //设置start类型为正常start\r\n        this.startStyle = 0;\r\n        \r\n        /**\r\n         * 将路由参数放入module的model中\r\n         * @param route \t路由\r\n         * @param module    模块\r\n         */\r\n        function setRouteParamToNModel(route:Route,module?:Module){\r\n            if (!route) {\r\n                return;\r\n            }\r\n            if(!module){\r\n                module = ModuleFactory.get(<number>route.module);\r\n            }\r\n            let o = {\r\n                path: route.path\r\n            };\r\n            if (!Util.isEmpty(route.data)) {\r\n                o['data'] = route.data;\r\n            }\r\n            if (!module.model) {\r\n                module.model = new Model({}, module);\r\n            }\r\n            module.model['$route'] = o;\r\n        }\r\n\r\n        /**\r\n         * 找到第一个带router的父模块\r\n         * @param pm    父模块\r\n         */\r\n        function findParentModule(pm?:Module){\r\n            if(!pm){\r\n                pm = ModuleFactory.getMain();\r\n            }\r\n            if(Router.routerKeyMap.has(pm.id)){\r\n                return pm;\r\n            }\r\n            for(let c of pm.children){\r\n                let m:Module = ModuleFactory.get(c);\r\n                return findParentModule(m);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n        * 重定向\r\n        * @param path \t路径\r\n        */\r\n    static redirect(path:string) {\r\n        this.go(path);\r\n    }\r\n\r\n    /**\r\n     * 添加路由\r\n     * @param route \t路由配置 \r\n     * @param parent \t父路由 \r\n     */\r\n    static addRoute(route:Route, parent:Route) {\r\n        //加入router tree\r\n        if (RouterTree.add(route, parent) === false) {\r\n            throw new NError(\"exist1\", NodomMessage.TipWords['route'], route.path);\r\n        }\r\n\r\n        //加入map\r\n        this.routes.set(route.id, route);\r\n    }\r\n\r\n    /**\r\n     * 获取路由\r\n     * @param path \t路径\r\n     * @param last \t是否获取最后一个路由,默认false\r\n     */\r\n    static getRoute(path:string, last?:boolean):Array<Route> {\r\n        if (!path) {\r\n            return null;\r\n        }\r\n        \r\n        let routes:Array<Route> = RouterTree.get(path);\r\n        if (routes === null || routes.length === 0) {\r\n            return null;\r\n        }\r\n        //routeid 转route\r\n        if (last) { //获取最后一个\r\n            return [routes.pop()];\r\n        } else { //获取所有\r\n            return routes;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 比较两个路径对应的路由链\r\n     * @param path1 \t第一个路径\r\n     * @param path2 \t第二个路径\r\n     * @returns \t\t[不同路由的父路由，第一个需要销毁的路由数组，第二个需要增加的路由数组，上2级路由]\r\n     */\r\n    private static compare(path1:string, path2:string):Array<any> {\r\n        \r\n        // 获取路由id数组\r\n        let arr1:Array<Route> = null;\r\n        let arr2:Array<Route> = null;\r\n\r\n        if (path1) {\r\n            arr1 = this.getRoute(path1);\r\n        }\r\n        if (path2) {\r\n            arr2 = this.getRoute(path2);\r\n        }\r\n        \r\n        let len = 0;\r\n        if (arr1 !== null) {\r\n            len = arr1.length;\r\n        }\r\n\r\n        if (arr2 !== null) {\r\n            if (arr2.length < len) {\r\n                len = arr2.length;\r\n            }\r\n        } else {\r\n            len = 0;\r\n        }\r\n        //需要销毁的旧路由数组\r\n        let retArr1 = [];\r\n        //需要加入的新路由数组\r\n        let retArr2 = [];\r\n        let i = 0;\r\n\r\n        for (i = 0; i < len; i++) {\r\n            //找到不同路由开始位置\r\n            if (arr1[i].id === arr2[i].id) {\r\n                //比较参数\r\n                if (JSON.stringify(arr1[i].data) !== JSON.stringify(arr2[i].data)) {\r\n                    //从后面开始更新，所以需要i+1\r\n                    i++;\r\n                    break;\r\n                }\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        //旧路由改变数组\r\n        if (arr1 !== null) {\r\n            for (let j = i; j < arr1.length; j++) {\r\n                retArr1.push(arr1[j]);\r\n            }\r\n        }\r\n        \r\n        //新路由改变数组（相对于旧路由）\r\n        if (arr2 !== null) {\r\n            for (let j = i; j < arr2.length; j++) {\r\n                retArr2.push(arr2[j]);\r\n            }\r\n        }\r\n        \r\n\r\n        //上一级路由和上二级路由\r\n        let p1:Route = null;\r\n        let p2:Route = null;\r\n        if (arr1 !== null && i > 0) {\r\n            for (let j = i - 1; j >= 0 && (p1 === null || p2 === null); j--) {\r\n                if (arr1[j].module !== undefined) {\r\n                    if (p1 === null) {\r\n                        p1 = arr1[j];\r\n                    } else if (p2 === null) {\r\n                        p2 = arr1[j];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return [p1, retArr1, retArr2, p2];\r\n    }\r\n\r\n    /**\r\n     * 修改模块active view（如果为view active为true，则需要路由跳转）\r\n     * @param module \t模块\r\n     * @param path \t\tview对应的route路径\r\n     */\r\n    static changeActive(module, path) {\r\n        if (!module || !path || path === '') {\r\n            return;\r\n        }\r\n        let domArr:string[] = Router.activeDomMap.get(module.id);\r\n        if(!domArr){\r\n            return;\r\n        }\r\n        //遍历router active view，设置或取消active class\r\n        domArr.forEach((item) => {\r\n            let dom = module.getElement(item);\r\n            if (!dom) {\r\n                return;\r\n            }\r\n            // dom route 路径\r\n            let domPath:string = dom.getProp('path');\r\n            if (dom.hasProp('activename')) { // active属性为表达式，修改字段值\r\n                let model = module.modelNFactory.get(dom.modelId);\r\n                if (!model) {\r\n                    return;\r\n                }\r\n                let field = dom.getProp('activename');\r\n                //路径相同或参数路由路径前部分相同则设置active 为true，否则为false\r\n                if (path === domPath || path.indexOf(domPath + '/') === 0) {\r\n                    model.set(field,true);\r\n                } else {\r\n                    model.set(field,false);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * 路由类\r\n */\r\nexport class Route {\r\n    /**\r\n     * 路由id\r\n     */\r\n    id:number;\r\n    /**\r\n     * 路由参数名数组\r\n     */\r\n    params:Array<string> = [];\r\n    /**\r\n     * 路由参数数据\r\n     */\r\n    data:any = {};\r\n    /**\r\n     * 子路由\r\n     */\r\n    children:Array<Route> = [];\r\n    /**\r\n     * 进入路由事件方法\r\n     */\r\n    onEnter:Function;\r\n    /**\r\n     * 离开路由方法\r\n     */\r\n    onLeave:Function;\r\n    /**\r\n     * 是否使用父路由路径\r\n     */\r\n    useParentPath:boolean;\r\n    /**\r\n     * 路由路径\r\n     */\r\n    path:string;\r\n    /**\r\n     * 完整路径\r\n     */\r\n    fullPath:string;\r\n    /**\r\n     * 路由对应模块id或类名\r\n     */\r\n    module:number|string;\r\n    \r\n    /**\r\n     * 模块名\r\n     */\r\n    moduleName:string;\r\n\r\n    /**\r\n     * 模块绑定数据url\r\n     */\r\n    dataUrl:string;\r\n\r\n    /**\r\n     * 父路由\r\n     */\r\n    parent:Route;\r\n    /**\r\n     * \r\n     * @param config 路由配置项\r\n     */\r\n    constructor(config:IRouteCfg) {\r\n        //参数赋值\r\n        for(let o in config){\r\n            this[o] = config[o];   \r\n        }\r\n        \r\n        if (config.path === '') {\r\n            return;\r\n        }\r\n\r\n        this.id = Util.genId();\r\n\r\n        if (!config.notAdd) {\r\n            Router.addRoute(this, config.parent);\r\n        }\r\n\r\n        //子路由\r\n        if (Util.isArray(config.routes)) {\r\n            config.routes.forEach((item) => {\r\n                item.parent = this;\r\n                new Route(item);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * 设置关联标签激活状态\r\n     */\r\n    setLinkActive() {\r\n        if(this.parent){\r\n            let pm:Module;\r\n            if(!this.parent.module){\r\n                pm = ModuleFactory.getMain();\r\n            }else{\r\n                pm = ModuleFactory.get(<number>this.parent.module);\r\n            }    \r\n            if (pm) {\r\n                Router.changeActive(pm, this.fullPath);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加子路由\r\n     * @param child \r\n     */\r\n    addChild(child:Route){\r\n        this.children.push(child);\r\n        child.parent = this;\r\n    }\r\n}\r\n\r\n/**\r\n * 路由树类\r\n */\r\nclass RouterTree {\r\n    static root:Route;\r\n    /**\r\n     * 添加route到路由树\r\n     *\r\n     * @param route 路由\r\n     * @return 添加是否成功 type Boolean\r\n     */\r\n    static add(route:Route, parent:Route) {\r\n        \r\n        //创建根节点\r\n        if (!this.root) {\r\n            this.root = new Route({ path: \"\", notAdd: true });\r\n        }\r\n        let pathArr:Array<string> = route.path.split('/');\r\n        let node:Route = parent || this.root;\r\n        let param:Array<string> = [];\r\n        let paramIndex:number = -1; //最后一个参数开始\r\n        let prePath:string = '';    //前置路径\r\n        for (let i = 0; i < pathArr.length; i++) {\r\n            let v = pathArr[i].trim();\r\n            if (v === '') {\r\n                pathArr.splice(i--, 1);\r\n                continue;\r\n            }\r\n\r\n            if (v.startsWith(':')) { //参数\r\n                if (param.length === 0) {\r\n                    paramIndex = i;\r\n                }\r\n                param.push(v.substr(1));\r\n            } else {\r\n                paramIndex = -1;\r\n                param = []; //上级路由的参数清空\r\n                route.path = v; //暂存path\r\n                let j = 0;\r\n                for (; j < node.children.length; j++) {\r\n                    let r = node.children[j];\r\n                    if (r.path === v) {\r\n                        node = r;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                //没找到，创建新节点\r\n                if (j === node.children.length) {\r\n                    if (prePath !== '') {\r\n                        let r:Route = new Route({ path: prePath, notAdd: true });\r\n                        node.addChild(r);\r\n                        node = node.children[node.children.length - 1];\r\n                    }\r\n                    prePath = v;\r\n                }\r\n            }\r\n\r\n            //不存在参数\r\n            if (paramIndex === -1) {\r\n                route.params = [];\r\n            } else {\r\n                route.params = param;\r\n            }\r\n        }\r\n\r\n        //添加到树\r\n        if (node !== undefined && node !== route) {\r\n            route.path = prePath;\r\n            node.addChild(route);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 从路由树中获取路由节点\r\n     * @param path  \t路径\r\n     */\r\n    static get(path:string):Array<Route> {\r\n        if (!this.root) {\r\n            throw new NError(\"notexist\", NodomMessage.TipWords['root']);\r\n        }\r\n        let pathArr:string[] = path.split('/');\r\n        let node:Route = this.root;\r\n        \r\n        let paramIndex:number = 0;      //参数索引\r\n        let retArr:Array<Route> = [];\r\n        let fullPath:string = '';       //完整路径\r\n        let preNode:Route = this.root;  //前一个节点\r\n\r\n        for (let i = 0; i < pathArr.length; i++) {\r\n            let v:string = pathArr[i].trim();\r\n            if (v === '') {\r\n                continue;\r\n            }\r\n            let find:boolean = false;\r\n            for (let j=0; j<node.children.length; j++) {\r\n                if (node.children[j].path === v) {\r\n                    //设置完整路径\r\n                    if (preNode !== this.root) {\r\n                        preNode.fullPath = fullPath;\r\n                        preNode.data = node.data;\r\n                        retArr.push(preNode);\r\n                    }\r\n\r\n                    //设置新的查找节点\r\n                    node = node.children[j];\r\n                    //参数清空\r\n                    node.data = {};\r\n                    preNode = node;\r\n                    find = true;\r\n                    //参数索引置0\r\n                    paramIndex = 0;\r\n                    break;\r\n                }\r\n            }\r\n            //路径叠加\r\n            fullPath += '/' + v;\r\n            //不是孩子节点,作为参数\r\n            if (!find) {\r\n                if (paramIndex < node.params.length) { //超出参数长度的废弃\r\n                    node.data[node.params[paramIndex++]] = v;\r\n                }\r\n            }\r\n        }\r\n\r\n        //最后一个节点\r\n        if (node !== this.root) {\r\n            node.fullPath = fullPath;\r\n            retArr.push(node);\r\n        }\r\n        return retArr;\r\n    }\r\n}\r\n\r\n//处理popstate事件\r\nwindow.addEventListener('popstate', function (e) {\r\n    //根据state切换module\r\n    const state = history.state;\r\n    if (!state) {\r\n        return;\r\n    }\r\n    Router.startStyle = 2;\r\n    Router.go(state);\r\n});\r\n","import { NError } from \"./error\";\r\nimport { Util } from \"./util\";\r\n\r\n/**\r\n * 调度器，用于每次空闲的待操作序列调度\r\n */\r\nexport class Scheduler{\r\n\tprivate static tasks:Array<any> = [];\r\n\tpublic static dispatch(){\r\n\t\tScheduler.tasks.forEach((item)=>{\r\n\t\t\tif(Util.isFunction(item.func)){\r\n\t\t\t\tif(item.thiser){\r\n\t\t\t\t\titem.func.call(item.thiser);\r\n\t\t\t\t}else{\r\n\t\t\t\t\titem.func();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * 启动调度器\r\n\t * @param scheduleTick \t渲染间隔\r\n\t */\r\n\tpublic static start(scheduleTick?:number){\r\n\t\tScheduler.dispatch();\r\n\t\tif(window.requestAnimationFrame){\r\n\t\t\twindow.requestAnimationFrame(Scheduler.start);\r\n\t\t}else{\r\n\t\t\twindow.setTimeout(Scheduler.start,scheduleTick||50);\r\n\t\t}\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * 添加任务\r\n\t * @param foo \t\t任务和this指向\r\n\t * @param thiser \tthis指向\r\n\t */\r\n\tpublic static addTask(foo:Function,thiser?:any){\r\n\t\tif(!Util.isFunction(foo)){\r\n\t\t\tthrow new NError(\"invoke\",\"Scheduler.addTask\",\"0\",\"function\");\r\n\t\t}\r\n\t\t\r\n\t\tScheduler.tasks.push({func:foo,thiser:thiser});\r\n\t}\r\n\r\n\t/**\r\n\t * 移除任务\r\n\t * @param foo \t任务\r\n\t */\r\n\tpublic static removeTask(foo){\r\n\t\tif(!Util.isFunction(foo)){\r\n\t\t\tthrow new NError(\"invoke\",\"Scheduler.removeTask\",\"0\",\"function\");\r\n\t\t}\r\n\t\tlet ind = -1;\r\n\t\tif((ind = Scheduler.tasks.indexOf(foo)) !== -1){\r\n\t\t\tScheduler.tasks.splice(ind,1);\r\n\t\t}\t\r\n\t}\r\n}\r\n","\r\nconst randomString = () =>\r\n  Math.random().toString(36).substring(8).split('').join('_')\r\n\r\nconst ActionTypes = {\r\n  INIT: `@@kayak/INIT${randomString()}`,\r\n  REPLACE: `@@kayak/REPLACE${randomString()}`,\r\n}\r\n\r\nexport default ActionTypes\r\n\r\nexport function isObject(action: any) {\r\n  return typeof action == 'object' && action != null;\r\n}","\r\nexport default class Watcher {\r\n    static watchers: Array<Function> = [];\r\n    static keyMap: Map<string, Array<Function>> = new Map();\r\n    static isExec: boolean = false;\r\n  \r\n    public static update(key: string,fn:Function): void {\r\n        if (this.isExec) {\r\n            return;\r\n        }\r\n        this.isExec = true;\r\n        let extra:Array<any>=[];\r\n        if(key!==undefined ){\r\n            extra=Watcher.keyMap.get(key)||[];\r\n        }\r\n        \r\n        let watchers:Array<Function>=[...Watcher.watchers,...extra];\r\n        fn();\r\n        watchers?.forEach(fn => fn());\r\n        \r\n        this.isExec=false;\r\n    }\r\n    static remove(fn: Function, key?: string) {\r\n        let watchers:Array<Function>|undefined=this.watchSelect(key);\r\n        watchers?.splice(watchers.indexOf(fn), 1);\r\n    }\r\n    static add(fn: Function, key?: string) {\r\n        let watchers:Array<Function>|undefined=this.watchSelect(key);\r\n        if (key && watchers === undefined) {\r\n            this.keyMap.set(key, new Array());\r\n            this.keyMap.get(key)?.push(fn);\r\n        }\r\n        watchers?.push(fn);\r\n    }\r\n    private static  watchSelect(key: string | undefined) {\r\n        return key === undefined ? Watcher.watchers : Watcher.keyMap.get(key);\r\n    }\r\n}","import Watcher from \"./watcher\";\r\n\r\nexport default class Model {\r\n\r\n    constructor(data: object,fn:Function) {\r\n        \r\n        let proxy = new Proxy(data, {\r\n            set: (src: any, key: string, value: any, receiver: any) => {\r\n\r\n                //值未变,proxy 不处理\r\n                if (src[key] === value) {\r\n                    return true;\r\n                }\r\n                //不处理原型属性 \r\n                let excludes = ['__proto__', 'constructor'];\r\n\r\n                if (excludes.includes(<string>key)) {\r\n                    return true;\r\n                }\r\n                ;\r\n\r\n                if (key != '$watch') {\r\n                    Watcher.update(key,fn);\r\n                }\r\n\r\n                return Reflect.set(src, key, value, receiver);\r\n            },\r\n            get: (src: any, key: string | symbol, receiver) => {\r\n                let res = Reflect.get(src, key, receiver);\r\n\r\n                let data = ModelManager.getFromDataMap(src[key]);\r\n                if (data) {\r\n                    return data;\r\n                }\r\n                if (typeof res === 'object' && res !== null) {\r\n                    if (!src[key].$watch) {\r\n                        let p = new Model(res,fn);\r\n                        return p;\r\n                    }\r\n                }\r\n                return res;\r\n            },\r\n            deleteProperty: function (src: any, key: any) {\r\n                if (src[key] != null && typeof src[key] === 'object') {\r\n                    ModelManager.delToDataMap(src[key]);\r\n                }\r\n                delete src[key];\r\n                return true;\r\n            }\r\n        });\r\n        proxy.$watch = true;\r\n\r\n        ModelManager.addToDataMap(data, proxy);\r\n\r\n        return proxy;\r\n    }\r\n\r\n}\r\n\r\nclass ModelManager {\r\n    private static dataMap: WeakMap<object, Model> = new WeakMap();\r\n\r\n    static addToDataMap(data: any, proxy: any) {\r\n        this.dataMap.set(data, proxy);\r\n    }\r\n\r\n    static delToDataMap(data: any) {\r\n        this.dataMap.delete(data);\r\n    }\r\n\r\n    static getFromDataMap(data: any) {\r\n        return this.dataMap.get(data);\r\n    }\r\n}\r\n","import ActionTypes from \"./util/actions\"\r\nimport { Reducer, ReducersObject, StateObject } from \"./types/reducer\"\r\nimport { AnyAction } from \"./types/action\"\r\nexport default function combineReducers(reducers: ReducersObject | any): Reducer {\r\n  const reducerKeys = Object.keys(reducers);\r\n  const combineReducers: ReducersObject = {};\r\n\r\n  for (let i = 0; i < reducerKeys.length; i++) {\r\n    const key:string = reducerKeys[i]\r\n\r\n    if (typeof reducers[key] === 'function') {\r\n      combineReducers[key] = reducers[key]\r\n    } else {\r\n      throw new Error(`${key}对应的reducer不是函数，请确保${reducers[key]}为函数,\r\n                      Please ensure that the reducer you provide is a function\r\n        `);\r\n    }\r\n  }\r\n  const combineKeys = Object.keys(combineReducers);\r\n\r\n\r\n  let shapeAssertionError: Error\r\n  try {\r\n    assertReducerShape(combineReducers)\r\n  } catch (e) {\r\n    shapeAssertionError = e\r\n  }\r\n\r\n  return function (\r\n    state: StateObject<typeof reducers> = {},\r\n    action: AnyAction,\r\n  ) {\r\n    if (shapeAssertionError) {\r\n      throw shapeAssertionError\r\n    }\r\n\r\n    for (let i = 0; i < combineKeys.length; i++) {\r\n      const key = combineKeys[i]\r\n      const reducer = combineReducers[key]\r\n      const previousStateForKey = state[key]\r\n      const nextStateForKey = reducer(previousStateForKey, action)\r\n      if (typeof nextStateForKey === 'undefined') {\r\n        const actionType = action && action.type\r\n        throw new Error(\r\n          `When called with an action of type ${actionType ? `\"${String(actionType)}\"` : '(unknown type)'\r\n          }, the slice reducer for key \"${key}\" returned undefined. ` +\r\n          `To ignore an action, you must explicitly return the previous state. ` +\r\n          `If you want this reducer to hold no value, you can return null instead of undefined.`\r\n        )\r\n      }\r\n\r\n      state[key] = nextStateForKey;\r\n    }\r\n\r\n  }\r\n}\r\nfunction assertReducerShape(reducers: ReducersObject) {\r\n  Object.keys(reducers).forEach(key => {\r\n    const reducer = reducers[key]\r\n    const initialState = reducer(undefined, { type: ActionTypes.INIT })\r\n\r\n    if (typeof initialState === 'undefined') {\r\n      throw new Error(\r\n        `The slice reducer for key \"${key}\" returned undefined during initialization. ` +\r\n        `If the state passed to the reducer is undefined, you must ` +\r\n        `explicitly return the initial state. The initial state may ` +\r\n        `not be undefined. If you don't want to set a value for this reducer, ` +\r\n        `you can use null instead of undefined.`\r\n      )\r\n    }\r\n\r\n    if (\r\n      typeof reducer(undefined, {\r\n        type: ActionTypes.INIT + '1'\r\n      }) === 'undefined'\r\n    ) {\r\n      throw new Error(\r\n        `The slice reducer for key \"${key}\" returned undefined when probed with a random type. ` +\r\n        `Don't try to handle '${ActionTypes.INIT}' or other actions in \"redux/*\" ` +\r\n        `namespace. They are considered private. Instead, you must return the ` +\r\n        `current state for any unknown actions, unless it is undefined, ` +\r\n        `in which case you must return the initial state, regardless of the ` +\r\n        `action type. The initial state may not be undefined, but can be null.`\r\n      )\r\n    }\r\n  })\r\n}","\r\nexport default function clone(proxy: object,...exc:Array<string>) :object {\r\n\r\n    let ds: Array<string> = Object.getOwnPropertyNames(proxy);\r\n    let res = new Object();\r\n    for (let i = 0; i < ds.length; i++) {\r\n        if (proxy.hasOwnProperty(ds[i])&&ds[i]!=='$watch'&&!exc.includes(ds[i])) {\r\n            let param = Reflect.get(proxy, ds[i]);\r\n            Object.defineProperty(res, ds[i], {\r\n                value: function () {\r\n                    if (typeof param === 'object' && param !== null) {\r\n                        return clone(param)\r\n                    } else {\r\n                        return param\r\n                    }\r\n                }(),\r\n                enumerable:true\r\n            })\r\n        }\r\n    }\r\n    return res;\r\n}","\r\nimport Action from './types/action';\r\nimport { Reducer } from './types/reducer';\r\nimport ActionTypes, { isObject } from './util/actions';\r\nimport Watcher from './watcher';\r\nimport Model from './model';\r\nimport combineReducers from './combineReducers';\r\nimport clone from './util/index';\r\n\r\n/**\r\n * \r\n * @param reducer A function to process your action state\r\n * @returns An object that controls your state repository\r\n */\r\nexport default function createStore(reducer: Reducer | object) {\r\n    /**\r\n     * Is the scheduling Reducer method being executed\r\n     */\r\n    let isDispatching: boolean = false;\r\n    /**\r\n     * \r\n     *  If there is only one reducer function, set the default value\r\n     */\r\n    let currentReducer = typeof reducer === 'function' ? reducer : combineReducers(reducer);\r\n    /**\r\n     *  \r\n        初始化数据\r\n        Initialization data\r\n     */\r\n    let data = {\r\n        'currentState': undefined\r\n    };\r\n    /**\r\n     * 初始化代理对象返回的proxy\r\n     * Initializes the proxy returned by the proxy object\r\n     */\r\n    let proxy: any;\r\n\r\n    let combine: boolean = typeof reducer === 'function' ? false : true;\r\n\r\n    /**\r\n     * \r\n     * @param action Action对象，要求传入type,\r\n     *              Action object. Type is required\r\n     */\r\n    function dispatch(action: Action) {\r\n        if (!isObject(action)) {\r\n            throw new Error(\r\n                `Actions must be a objects. Instead, the actual type was: '${typeof action}'`\r\n            )\r\n        }\r\n\r\n        if (typeof action.type === 'undefined') {\r\n            throw new Error(\r\n                'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.'\r\n            )\r\n        }\r\n\r\n        let currentState = data.currentState;\r\n        try {\r\n            isDispatching = true\r\n            if (combine) {\r\n                currentReducer(proxy, action);\r\n            } else {\r\n                proxy['currentState'] = currentReducer(currentState, action);\r\n            }\r\n        } finally {\r\n            isDispatching = false\r\n        }\r\n    }\r\n    function subscribe(listener: () => void, key?: string) {\r\n        if (typeof listener !== 'function') {\r\n            throw new Error(\r\n                `Expected the listener to be a function. Instead, received: '${typeof (\r\n                    listener\r\n                )}'`\r\n            )\r\n        }\r\n        if (isDispatching) {\r\n            throw new Error(\r\n                'You may not call store.subscribe() while the reducer is executing. ' +\r\n                'If you would like to be notified after the store has been updated, subscribe from a ' +\r\n                'component and invoke store.getState() in the callback to access the latest state. ' +\r\n                'See https://redux.js.org/api/store#subscribelistener for more details.'\r\n            )\r\n        }\r\n        let isSubscribed = true;\r\n        key !== undefined ? Watcher.add(listener, key) : Watcher.add(listener);\r\n        return function unsubscribe() {\r\n            if (!isSubscribed) {\r\n                return\r\n            }\r\n\r\n            if (isDispatching) {\r\n                throw new Error(\r\n                    'You may not unsubscribe from a store listener while the reducer is executing. '\r\n                )\r\n            }\r\n            Watcher.remove(listener, key);\r\n            isSubscribed = false;\r\n        }\r\n\r\n\r\n    }\r\n    function getState() {\r\n        if (isDispatching) {\r\n            throw new Error(\r\n                'You may not call store.getState() while the reducer is executing. ' +\r\n                'The reducer has already received the state as an argument. ' +\r\n                'Pass it down from the top reducer instead of reading it from the store.' +\r\n                'reducer还在执行中'\r\n            )\r\n        }\r\n        /**\r\n         * get clone object\r\n         */\r\n        const res: any = combine ? clone(data, 'currentState') : clone(data);\r\n\r\n        return combine ? res : res['currentState'];\r\n    }\r\n    /**\r\n     * \r\n     * @param newReducer A new Reducer replaces the original reducer function\r\n     * @returns store\r\n     */\r\n    function replace(newReducer: Reducer) {\r\n        if (typeof newReducer !== 'function') {\r\n            throw new Error(\r\n                `Expected the nextReducer to be a function. Instead, received: '${typeof\r\n                newReducer\r\n                }`\r\n            )\r\n        }\r\n        currentReducer =newReducer;\r\n        dispatch({ type: ActionTypes.REPLACE } as Action);\r\n        \r\n        return store;\r\n    }\r\n    function update(){\r\n        isDispatching=false;\r\n    }\r\n    /**\r\n     *   proxy Initialize data\r\n     */\r\n    \r\n    proxy = new Model(data,update);\r\n    /**\r\n     * state get default data\r\n     */\r\n    dispatch({ type: ActionTypes.INIT } as Action);\r\n\r\n    const store = {\r\n        dispatch: dispatch,\r\n        subscribe,\r\n        getState,\r\n        replace,\r\n    }\r\n    return store;\r\n}","import { Application } from \"./application\";\r\nimport { DirectiveManager } from \"./directivemanager\";\r\nimport { NError } from \"./error\";\r\nimport { MessageQueue } from \"./messagequeue\";\r\nimport { Module } from \"./module\";\r\nimport { ModuleFactory } from \"./modulefactory\";\r\nimport { Renderer } from \"./renderer\";\r\nimport { Route } from \"./router\";\r\nimport { Scheduler } from \"./scheduler\";\r\nimport { IAppCfg, IMdlClassObj, IRouteCfg } from \"./types\";\r\nimport { Util } from \"./util\";\r\nimport kayaks from \"kayaks\";\r\n\r\n/**\r\n * 新建store方法\r\n */\r\nexport const newStore=kayaks;\r\n/**\r\n * nodom提示消息\r\n */\r\nexport var NodomMessage;\r\nexport let store:Object|undefined ;\r\n/**\r\n * 新建一个App\r\n * @param config 应用配置\r\n */\r\nexport async function app(config?: IAppCfg): Promise<Module> {\r\n    if (window['NodomConfig']) {\r\n        config = Util.merge({}, window['NodomConfig'], config);\r\n    }\r\n\r\n    let lang: string = config && config.language;\r\n    if (!lang) {\r\n        lang = navigator.language ? navigator.language.substr(0, 2) : 'zh';\r\n     }\r\n    //  NodomMessage = eval('(NodomMessage_' + lang + ')');     \r\n     NodomMessage = new Function('return window.nodom.NodomMessage_' + lang)();\r\n    if (!config || !config.module) {\r\n        throw new NError('config', NodomMessage.TipWords['application']);\r\n    }\r\n\r\n    Application.setPath(config.path);\r\n\r\n    //模块数组初始化\r\n    if (config.modules) {\r\n        await ModuleFactory.addModules(config.modules);\r\n    }\r\n    \r\n    //消息队列消息处理任务\r\n    Scheduler.addTask(MessageQueue.handleQueue, MessageQueue);\r\n    //渲染器启动渲染\r\n    Scheduler.addTask(Renderer.render, Renderer);\r\n    //启动调度器\r\n    Scheduler.start(config.scheduleCircle);\r\n\r\n    //加载状态管理实例对象\r\n    if(Util.isObject(config.store)){\r\n        store=config.store;\r\n    }\r\n    //存在类名\r\n    let module: Module;\r\n    if (config.module.class) {\r\n        module = await ModuleFactory.getInstance(config.module.class, config.module.name, config.module.data);\r\n        module.setSelector(config.module.el);\r\n    } else {\r\n        module = new Module(config.module);\r\n    }\r\n\r\n    //设置主模块\r\n    ModuleFactory.setMain(module);\r\n    await module.active();\r\n\r\n    if (config.routes) {\r\n        this.createRoute(config.routes);\r\n    }\r\n    return module;\r\n}\r\n\r\n/**\r\n * 暴露的创建路由方法\r\n * @param config  数组或单个配置\r\n */\r\nexport function createRoute(config: IRouteCfg | Array<IRouteCfg>): Route {\r\n    if (Util.isArray(config)) {\r\n        for (let item of <Array<IRouteCfg>>config) {\r\n            new Route(item);\r\n        }\r\n    } else {\r\n        return new Route(<IRouteCfg>config);\r\n    }\r\n}\r\n\r\n/**\r\n * 创建指令\r\n * @param name      指令名 \r\n * @param priority  优先级（1最小，1-10为框架保留优先级）\r\n * @param init      初始化方法\r\n * @param handler   渲染时方法\r\n */\r\nexport function createDirective(name: string, priority: number, init: Function, handler: Function) {\r\n    return DirectiveManager.addType(name,\r\n        priority,\r\n        init,\r\n        handler\r\n    );\r\n}\r\n\r\n/**\r\n * 创建模块\r\n * @param modules 模块配置数组\r\n */\r\nexport function addModules(modules: Array<IMdlClassObj>) {\r\n    ModuleFactory.addModules(modules);\r\n}\r\n\r\n/**\r\n * ajax 请求\r\n * @param config    object 或 string\r\n *                  如果为string，则直接以get方式获取资源\r\n *                  object 项如下:\r\n *                  参数名|类型|默认值|必填|可选值|描述\r\n *                  -|-|-|-|-|-\r\n *                  url|string|无|是|无|请求url\r\n *\t\t\t\t\tmethod|string|GET|否|GET,POST,HEAD|请求类型\r\n *\t\t\t\t\tparams|Object/FormData|{}|否|无|参数，json格式\r\n *\t\t\t\t\tasync|bool|true|否|true,false|是否异步\r\n *  \t\t\t\ttimeout|number|0|否|无|请求超时时间\r\n *                  type|string|text|否|json,text|\r\n *\t\t\t\t\twithCredentials|bool|false|否|true,false|同源策略，跨域时cookie保存\r\n *                  header|Object|无|否|无|request header 对象\r\n *                  user|string|无|否|无|需要认证的请求对应的用户名\r\n *                  pwd|string|无|否|无|需要认证的请求对应的密码\r\n *                  rand|bool|无|否|无|请求随机数，设置则浏览器缓存失效\r\n */\r\nexport async function request(config): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n        if (typeof config === 'string') {\r\n            config = {\r\n                url: config\r\n            }\r\n        }\r\n        config.params = config.params || {};\r\n        //随机数\r\n        if (config.rand) { //针对数据部分，仅在app中使用\r\n            config.params.$rand = Math.random();\r\n        }\r\n        let url: string = config.url;\r\n        const async: boolean = config.async === false ? false : true;\r\n        const req: XMLHttpRequest = new XMLHttpRequest();\r\n        //设置同源策略\r\n        req.withCredentials = config.withCredentials;\r\n        //类型默认为get\r\n        const method: string = (config.method || 'GET').toUpperCase();\r\n        //超时，同步时不能设置\r\n        req.timeout = async ? config.timeout : 0;\r\n\r\n        req.onload = () => {\r\n            if (req.status === 200) {\r\n                let r = req.responseText;\r\n                if (config.type === 'json') {\r\n                    try {\r\n                        r = JSON.parse(r);\r\n                    } catch (e) {\r\n                        reject({ type: \"jsonparse\" });\r\n                    }\r\n                }\r\n                resolve(r);\r\n            } else {\r\n                reject({ type: 'error', url: url });\r\n            }\r\n        }\r\n\r\n        req.ontimeout = () => reject({ type: 'timeout' });\r\n        req.onerror = () => reject({ type: 'error', url: url });\r\n        //上传数据\r\n        let data = null;\r\n        switch (method) {\r\n            case 'GET':\r\n                //参数\r\n                let pa: string;\r\n                if (Util.isObject(config.params)) {\r\n                    let ar: string[] = [];\r\n                    Util.getOwnProps(config.params).forEach(function (key) {\r\n                        ar.push(key + '=' + config.params[key]);\r\n                    });\r\n                    pa = ar.join('&');\r\n                }\r\n                if (pa !== undefined) {\r\n                    if (url.indexOf('?') !== -1) {\r\n                        url += '&' + pa;\r\n                    } else {\r\n                        url += '?' + pa;\r\n                    }\r\n                }\r\n\r\n                break;\r\n            case 'POST':\r\n                if (config.params instanceof FormData) {\r\n                    data = config.params;\r\n                } else {\r\n                    let fd: FormData = new FormData();\r\n                    for (let o in config.params) {\r\n                        fd.append(o, config.params[o]);\r\n                    }\r\n                    data = fd;\r\n                }\r\n                break;\r\n        }\r\n\r\n        req.open(method, url, async, config.user, config.pwd);\r\n        //设置request header\r\n        if (config.header) {\r\n            Util.getOwnProps(config.header).forEach((item) => {\r\n                req.setRequestHeader(item, config.header[item]);\r\n            })\r\n        }\r\n        req.send(data);\r\n    }).catch((re) => {\r\n        switch (re.type) {\r\n            case \"error\":\r\n                throw new NError(\"notexist1\", NodomMessage.TipWords['resource'], re.url);\r\n            case \"timeout\":\r\n                throw new NError(\"timeout\");\r\n            case \"jsonparse\":\r\n                throw new NError(\"jsonparse\");\r\n        }\r\n    });\r\n}\r\n\r\n\r\n","import { NodomMessage } from \"./nodom\";\r\nimport { Util } from \"./util\";\r\n\r\n/**\r\n * 异常处理类\r\n * @since       1.0.0\r\n */\r\nexport  class NError extends Error{\r\n    constructor(errorName:string,p1?:string,p2?:string,p3?:string,p4?:string){\r\n        super(errorName);\r\n        let msg:string = NodomMessage.ErrorMsgs[errorName];\r\n        if(msg === undefined){\r\n            this.message = \"未知错误\";\r\n            return;\r\n        }\r\n        //复制请求参数\r\n        let params:Array<string> = [msg];\r\n        for(let i=1;i<arguments.length;i++){\r\n            params.push(arguments[i]);\r\n        }\r\n        this.message = Util.compileStr.apply(null,params);\r\n    }\r\n}\r\n","import { NError } from \"./error\";\r\nimport { NodomMessage } from \"./nodom\";\r\n\r\n/**\r\n * 基础服务库\r\n * @since       1.0.0\r\n */\r\nexport class Util {\r\n    private static generatedId: number = 1;\r\n    //唯一主键\r\n    public static genId() {\r\n        return this.generatedId++;\r\n    }\r\n    /******对象相关******/\r\n\r\n    /**\r\n     * 对象复制\r\n     * @param srcObj    源对象\r\n     * @param expKey    不复制的键正则表达式或名\r\n     * @param extra     clone附加参数\r\n     * @returns         复制的对象\r\n     */\r\n\r\n    public static clone(srcObj: Object, expKey?: RegExp | string[], extra?: any): any {\r\n        let me = this;\r\n        let map: WeakMap<Object, any> = new WeakMap();\r\n        // let map: Map<Object, any> = new Map();\r\n        return clone(srcObj, expKey, extra);\r\n\r\n        /**\r\n         * clone对象\r\n         * @param src   待clone对象\r\n         * @param extra clone附加参数\r\n         * @returns     克隆后的对象\r\n         */\r\n        function clone(src, expKey, extra?) {\r\n            //非对象或函数，直接返回            \r\n            if (!src || typeof src !== 'object' || Util.isFunction(src)) {\r\n                return src;\r\n            }\r\n            let dst;\r\n\r\n            //带有clone方法，则直接返回clone值\r\n            if (src.clone && Util.isFunction(src.clone)) {\r\n                return src.clone(extra);\r\n            } else if (me.isObject(src)) {\r\n                dst = new Object();\r\n                //把对象加入map，如果后面有新克隆对象，则用新克隆对象进行覆盖\r\n                map.set(src, dst);\r\n                Object.getOwnPropertyNames(src).forEach((prop) => {\r\n                    //不克隆的键\r\n                    if (expKey) {\r\n                        if (expKey.constructor === RegExp && (<RegExp>expKey).test(prop) //正则表达式匹配的键不复制\r\n                            || Util.isArray(expKey) && (<any[]>expKey).includes(prop)                        //被排除的键不复制\r\n                        ) {\r\n                            return;\r\n                        }\r\n                    }\r\n                    dst[prop] = getCloneObj(src[prop], expKey, extra);\r\n                });\r\n            } else if (me.isMap(src)) {\r\n                dst = new Map();\r\n                //把对象加入map，如果后面有新克隆对象，则用新克隆对象进行覆盖\r\n                src.forEach((value, key) => {\r\n                    //不克隆的键\r\n                    if (expKey) {\r\n                        if (expKey.constructor === RegExp && (<RegExp>expKey).test(key)       //正则表达式匹配的键不复制\r\n                            || (<any[]>expKey).includes(key)) {     //被排除的键不复制\r\n                            return;\r\n                        }\r\n                    }\r\n                    dst.set(key, getCloneObj(value, expKey, extra));\r\n                });\r\n            } else if (me.isArray(src)) {\r\n                dst = new Array();\r\n                //把对象加入map，如果后面有新克隆对象，则用新克隆对象进行覆盖\r\n                src.forEach(function (item, i) {\r\n                    dst[i] = getCloneObj(item, expKey, extra);\r\n                });\r\n            }\r\n            return dst;\r\n        }\r\n\r\n        /**\r\n         * 获取clone对象\r\n         * @param value     待clone值\r\n         * @param expKey    排除键\r\n         * @param extra     附加参数\r\n         */\r\n        function getCloneObj(value, expKey, extra) {\r\n\r\n            if (typeof value === 'object' && !Util.isFunction(value)) {\r\n                let co = null;\r\n                if (!map.has(value)) {  //clone新对象\r\n                    co = clone(value, expKey, extra);\r\n                } else {                    //从map中获取对象\r\n                    co = map.get(value);\r\n                }\r\n                return co;\r\n            }\r\n            return value;\r\n        }\r\n    }\r\n    /**\r\n     * 合并多个对象并返回\r\n     * @param   参数数组\r\n     * @returns 返回对象\r\n     */\r\n    public static merge(o1?: Object, o2?: Object, o3?: Object, o4?: Object, o5?: Object, o6?: Object) {\r\n        let me = this;\r\n        for (let i = 0; i < arguments.length; i++) {\r\n            if (!this.isObject(arguments[i])) {\r\n                throw new NError('invoke', 'Util.merge', i + '', 'object');\r\n            }\r\n        }\r\n        let retObj = Object.assign.apply(null, arguments);\r\n        subObj(retObj);\r\n        return retObj;\r\n        //处理子对象\r\n        function subObj(obj) {\r\n            for (let o in obj) {\r\n                if (me.isObject(obj[o]) || me.isArray(obj[o])) { //对象或数组\r\n                    retObj[o] = me.clone(retObj[o]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 把obj2对象所有属性赋值给obj1\r\n     */\r\n    public static assign(obj1, obj2) {\r\n        if (Object.assign) {\r\n            Object.assign(obj1, obj2);\r\n        } else {\r\n            this.getOwnProps(obj2).forEach(function (p) {\r\n                obj1[p] = obj2[p];\r\n            });\r\n        }\r\n        return obj1;\r\n    }\r\n\r\n    /**\r\n     * 获取对象自有属性\r\n     */\r\n    public static getOwnProps(obj): Array<string> {\r\n        if (!obj) {\r\n            return [];\r\n        }\r\n        return Object.getOwnPropertyNames(obj);\r\n    }\r\n    /**************对象判断相关************/\r\n    /**\r\n     * 是否为函数\r\n     * @param foo   检查的对象\r\n     * @returns     true/false\r\n     */\r\n    public static isFunction(foo): boolean {\r\n        return foo !== undefined && foo !== null && foo.constructor === Function;\r\n    }\r\n\r\n    /**\r\n     * 是否为数组\r\n     * @param obj   检查的对象\r\n     * @returns     true/false\r\n     */\r\n    public static isArray(obj): boolean {\r\n        return Array.isArray(obj);\r\n    }\r\n\r\n    /**\r\n     * 判断是否为map\r\n     * @param obj \r\n     */\r\n    public static isMap(obj): boolean {\r\n        return obj !== null && obj !== undefined && obj.constructor === Map;\r\n    }\r\n\r\n    /**\r\n     * 是否为对象\r\n     * @param obj   检查的对象\r\n     * @returns true/false\r\n     */\r\n    public static isObject(obj): boolean {\r\n        return obj !== null && obj !== undefined && obj.constructor === Object;\r\n    }\r\n\r\n    /**\r\n     * 判断是否为整数\r\n     * @param v 检查的值\r\n     * @returns true/false\r\n     */\r\n    public static isInt(v): boolean {\r\n        return Number.isInteger(v);\r\n    }\r\n    /**\r\n     * 判断是否为number\r\n     * @param v 检查的值\r\n     * @returns true/false\r\n     */\r\n    public static isNumber(v): boolean {\r\n        return typeof v === 'number';\r\n    }\r\n\r\n    /**\r\n     * 判断是否为boolean\r\n     * @param v 检查的值\r\n     * @returns true/false\r\n     */\r\n    public static isBoolean(v): boolean {\r\n        return typeof v === 'boolean';\r\n    }\r\n    /**\r\n     * 判断是否为字符串\r\n     * @param v 检查的值\r\n     * @returns true/false\r\n     */\r\n    public static isString(v): boolean {\r\n        return typeof v === 'string';\r\n    }\r\n\r\n    /**\r\n     * 是否为数字串\r\n     * @param v 检查的值\r\n     * @returns true/false\r\n     */\r\n    public static isNumberString(v): boolean {\r\n        return /^\\d+\\.?\\d*$/.test(v);\r\n    }\r\n\r\n    /**\r\n     * 对象/字符串是否为空\r\n     * @param obj   检查的对象\r\n     * @returns     true/false\r\n     */\r\n    public static isEmpty(obj): boolean {\r\n        if (obj === null || obj === undefined)\r\n            return true;\r\n        let tp = typeof obj;\r\n        if (this.isObject(obj)) {\r\n            let keys = Object.keys(obj);\r\n            if (keys !== undefined) {\r\n                return keys.length === 0;\r\n            }\r\n        } else if (tp === 'string') {\r\n            return obj === '';\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    /***********************对象相关******************/\r\n\r\n    /**\r\n     * 找到符合符合属性值条件的对象（深度遍历）\r\n     * @param obj       待查询对象\r\n     * @param props     属性值对象\r\n     * @param one       是否满足一个条件就可以，默认false\r\n     */\r\n    public static findObjByProps(obj: Object, props: Object, one: boolean): Array<Object> | Object {\r\n        if (!this.isObject(obj)) {\r\n            throw new NError('invoke', 'this.findObjByProps', '0', 'Object');\r\n        }\r\n\r\n        //默认false\r\n        one = one || false;\r\n        let ps: Array<string> = this.getOwnProps(props);\r\n        let find: boolean = false;\r\n        if (one === false) {  //所有条件都满足\r\n            find = true;\r\n            for (let i = 0; i < ps.length; i++) {\r\n                let p = ps[i];\r\n                if (obj[p] !== props[p]) {\r\n                    find = false;\r\n                    break;\r\n                }\r\n            }\r\n        } else {              //一个条件满足\r\n            for (let i = 0; i < ps.length; i++) {\r\n                let p = ps[i];\r\n                if (obj[p] === props[p]) {\r\n                    find = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (find) {\r\n            return obj;\r\n        }\r\n\r\n\r\n        //子节点查找\r\n        for (let p in obj) {\r\n            let o = obj[p];\r\n            if (o !== null) {\r\n                if (this.isObject(o)) {      //子对象\r\n                    //递归查找\r\n                    let oprops = this.getOwnProps(o);\r\n                    for (let i = 0; i < oprops.length; i++) {\r\n                        let item = o[oprops[i]];\r\n                        if (item !== null && this.isObject(item)) {\r\n                            let r = this.findObjByProps(item, props, one);\r\n                            if (r !== null) {\r\n                                return r;\r\n                            }\r\n                        }\r\n                    }\r\n                } else if (this.isArray(o)) { //数组对象\r\n                    for (let i = 0; i < o.length; i++) {\r\n                        let item = o[i];\r\n                        if (item !== null && this.isObject(item)) {\r\n                            let r = this.findObjByProps(item, props, one);\r\n                            if (r !== null) {\r\n                                return r;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**********dom相关***********/\r\n    /**\r\n     * 获取dom节点\r\n     * @param selector  选择器\r\n     * @param findAll   是否获取所有，默认为false\r\n     * @param pview     父html element\r\n     * @returns         html element/null 或 nodelist或[]\r\n     */\r\n    public static get(selector: string, findAll?: boolean, pview?: HTMLElement | Document): Node | NodeList {\r\n        pview = pview || document;\r\n        if (findAll === true) {\r\n            return pview.querySelectorAll(selector);\r\n        }\r\n        return pview.querySelector(selector);\r\n    }\r\n\r\n    /**\r\n     * 是否为element\r\n     * @param el    传入的对象\r\n     * @returns     true/false\r\n     */\r\n    public static isEl(el: any): boolean {\r\n        return el instanceof HTMLElement || el instanceof SVGElement;\r\n    }\r\n\r\n    /**\r\n     * 是否为node\r\n     * @param node 传入的对象\r\n     * @returns true/false\r\n     */\r\n    public static isNode(node: any): boolean {\r\n        return node !== undefined && node !== null && (node.nodeType === Node.TEXT_NODE || node.nodeType === Node.ELEMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE);\r\n    }\r\n\r\n    /**\r\n     * 新建dom\r\n     * @param tagName   标签名\r\n     * @param config    属性集合\r\n     * @param text      innerText\r\n     * @returns         新建的elelment\r\n     */\r\n    public static newEl(tagName: string, config?: Object, text?: string): HTMLElement {\r\n        if (!this.isString(tagName) || this.isEmpty(tagName)) {\r\n            throw new NError('invoke', 'this.newEl', '0', 'string');\r\n        }\r\n        let el = document.createElement(tagName);\r\n\r\n        if (this.isObject(config)) {\r\n            this.attr(el, config);\r\n        } else if (this.isString(text)) {\r\n            el.innerHTML = text;\r\n        }\r\n        return el;\r\n    }\r\n    /**\r\n     * 新建svg element\r\n     * @param tagName   标签名\r\n     * @returns         svg element\r\n     */\r\n    public static newSvgEl(tagName: string, config?: Object): SVGElement {\r\n        let el: SVGElement = document.createElementNS(\"http://www.w3.org/2000/svg\", tagName);\r\n        if (this.isObject(config)) {\r\n            this.attr(el, config);\r\n        }\r\n        return el;\r\n    }\r\n    /**\r\n     * 把srcNode替换为nodes\r\n     * @param srcNode       源dom\r\n     * @param nodes         替换的dom或dom数组\r\n     */\r\n    public static replaceNode(srcNode: Node, nodes: Node | Array<Node>) {\r\n        if (!this.isNode(srcNode)) {\r\n            throw new NError('invoke', 'this.replaceNode', '0', 'Node');\r\n        }\r\n\r\n        if (!this.isNode(nodes) && !this.isArray(nodes)) {\r\n            throw new NError('invoke1', 'this.replaceNode', '1', 'Node', 'Node Array');\r\n        }\r\n        let pnode: Node = srcNode.parentNode;\r\n        let bnode: Node = srcNode.nextSibling;\r\n        if (pnode === null) {\r\n            return;\r\n        }\r\n        pnode.removeChild(srcNode);\r\n        const nodeArr: Array<Node> = this.isArray(nodes) ? <Node[]>nodes : [<Node>nodes];\r\n        nodeArr.forEach(function (node) {\r\n            if (bnode === undefined || bnode === null) {\r\n                pnode.appendChild(node);\r\n            } else {\r\n                pnode.insertBefore(node, bnode);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 清空子节点\r\n     * @param el\r\n     */\r\n    public static empty(el: HTMLElement) {\r\n        const me = this;\r\n        if (!me.isEl(el)) {\r\n            throw new NError('invoke', 'this.empty', '0', 'Element');\r\n        }\r\n        let nodes: NodeList = el.childNodes;\r\n        for (let i = nodes.length - 1; i >= 0; i--) {\r\n            el.removeChild(nodes[i]);\r\n        }\r\n    }\r\n    /**\r\n     * 删除节点\r\n     * @param node html node\r\n     */\r\n    public static remove(node: Node) {\r\n        const me = this;\r\n        if (!me.isNode(node)) {\r\n            throw new NError('invoke', 'this.remove', '0', 'Node');\r\n        }\r\n        if (node.parentNode !== null) {\r\n            node.parentNode.removeChild(node);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 获取／设置属性\r\n     * @param el    element\r\n     * @param param 属性名，设置多个属性时用对象\r\n     * @param value 属性值，获取属性时不需要设置\r\n     * @returns     属性值\r\n     */\r\n    public static attr(el: Element, param: string | Object, value?: any): any {\r\n        const me = this;\r\n        if (!me.isEl(el)) {\r\n            throw new NError('invoke', 'this.attr', '0', 'Element');\r\n        }\r\n        if (this.isEmpty(param)) {\r\n            throw new NError('invoke', 'this.attr', '1', 'string', 'object');\r\n        }\r\n        if (value === undefined || value === null) {\r\n            if (this.isObject(param)) { //设置多个属性\r\n                this.getOwnProps(param).forEach(function (k) {\r\n                    if (k === 'value') {\r\n                        el[k] = param[k];\r\n                    } else {\r\n                        el.setAttribute(k, param[k]);\r\n                    }\r\n                });\r\n            } else if (this.isString(param)) { //获取属性\r\n                if (param === 'value') {\r\n                    return param[value];\r\n                }\r\n                return el.getAttribute(<string>param);\r\n            }\r\n        } else { //设置属性\r\n            if (param === 'value') {\r\n                el[<string>param] = value;\r\n            } else {\r\n                el.setAttribute(<string>param, value);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /******日期相关******/\r\n    /**\r\n     * 日期格式化\r\n     * @param srcDate   时间戳串\r\n     * @param format    日期格式\r\n     * @returns          日期串\r\n     */\r\n    public static formatDate(srcDate: string | number, format: string): string {\r\n        //时间戳\r\n        let timeStamp: number;\r\n        if (this.isString(srcDate)) {\r\n            //排除日期格式串,只处理时间戳\r\n            let reg = /^\\d+$/;\r\n            if (reg.test(<string>srcDate) === true) {\r\n                timeStamp = parseInt(<string>srcDate);\r\n            }\r\n        } else if (this.isNumber(srcDate)) {\r\n            timeStamp = <number>srcDate;\r\n        } else {\r\n            throw new NError('invoke', 'this.formatDate', '0', 'date string', 'date');\r\n        }\r\n        //得到日期\r\n        let date: Date = new Date(timeStamp);\r\n        // invalid date\r\n        if (isNaN(date.getDay())) {\r\n            return '';\r\n        }\r\n\r\n        let o = {\r\n            \"M+\": date.getMonth() + 1, //月份\r\n            \"d+\": date.getDate(), //日\r\n            \"h+\": date.getHours() % 12 === 0 ? 12 : date.getHours() % 12, //小时\r\n            \"H+\": date.getHours(), //小时\r\n            \"m+\": date.getMinutes(), //分\r\n            \"s+\": date.getSeconds(), //秒\r\n            \"q+\": Math.floor((date.getMonth() + 3) / 3), //季度\r\n            \"S\": date.getMilliseconds() //毫秒\r\n        };\r\n\r\n        //年\r\n        if (/(y+)/.test(format)) {\r\n            format = format.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\r\n        }\r\n        //月日\r\n        this.getOwnProps(o).forEach(function (k) {\r\n            if (new RegExp(\"(\" + k + \")\").test(format)) {\r\n                format = format.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\r\n            }\r\n        });\r\n\r\n        //星期\r\n        if (/(E+)/.test(format)) {\r\n            format = format.replace(RegExp.$1, ((RegExp.$1.length > 1) ? (RegExp.$1.length > 2 ? \"/u661f/u671f\" : \"/u5468\") : \"\") + NodomMessage.WeekDays[date.getDay() + \"\"]);\r\n        }\r\n        return format;\r\n    }\r\n\r\n    /******字符串相关*****/\r\n    /**\r\n     * 编译字符串，把{n}替换成带入值\r\n     * @param str 待编译的字符串\r\n     * @param args1,args2,args3,... 待替换的参数\r\n     * @returns 转换后的消息\r\n     */\r\n    public static compileStr(src: string, p1?: any, p2?: any, p3?: any, p4?: any, p5?: any): string {\r\n        let reg: RegExp;\r\n        let args = arguments;\r\n        let index = 0;\r\n        for (; ;) {\r\n            if (src.indexOf('\\{' + index + '\\}') !== -1) {\r\n                reg = new RegExp('\\\\{' + index + '\\\\}', 'g');\r\n                src = src.replace(reg, args[index + 1]);\r\n                index++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        return src;\r\n    }\r\n\r\n    /**\r\n     * 函数调用\r\n     * @param foo   函数\r\n     * @param obj   this指向\r\n     * @param args  参数数组\r\n     */\r\n    public static apply(foo: Function, obj: any, args?: Array<any>): any {\r\n        if (!foo) {\r\n            return;\r\n        }\r\n        return Reflect.apply(foo, obj || null, args);\r\n    }\r\n\r\n    /**\r\n     * 合并并修正路径，即路径中出现'//','///','\\/'的情况，统一置换为'/'\r\n     * @param paths 待合并路径数组\r\n     * @returns     返回路径\r\n     */\r\n    public static mergePath(paths: string[]): string {\r\n        return paths.join('/').replace(/(\\/{2,})|\\\\\\//g, '\\/');\r\n    }\r\n}\r\n","import {Module} from \"./module\";\r\nimport {Element} from \"./element\";\r\nimport { Directive } from \"./directive\";\r\nimport { DirectiveType } from \"./directivetype\";\r\nimport { Util } from \"./util\";\r\n\r\n/**\r\n * 指令管理器\r\n */\r\nexport  class DirectiveManager {\r\n    /**\r\n     * 指令类型集合\r\n     */\r\n    private static directiveTypes:Map<string,DirectiveType> = new Map();\r\n    \r\n    /**\r\n     * 创建指令类型\r\n     * @param name \t\t    指令类型名\r\n     * @param config \t    配置对象{order:优先级,init:初始化函数,handler:渲染处理函数}\r\n     */\r\n    public static addType(name:string, prio?:number,init?:Function,handle?:Function) {\r\n        this.directiveTypes.set(name, new DirectiveType(name,prio,init,handle));\r\n    }\r\n\r\n    /**\r\n     * 移除过滤器类型\r\n     * @param name  过滤器类型名\r\n     */\r\n    public static removeType(name:string) {\r\n        this.directiveTypes.delete(name);\r\n    }\r\n\r\n    /**\r\n     * 获取类型\r\n     * @param name  指令类型名\r\n     * @returns     指令或undefined\r\n     */\r\n    public static getType(name:string) {\r\n        return this.directiveTypes.get(name);\r\n    }\r\n\r\n    /**\r\n     * 是否有某个过滤器类型\r\n     * @param type \t\t过滤器类型名\r\n     * @returns \t\ttrue/false\r\n     */\r\n    public static hasType(name:string) {\r\n        return this.directiveTypes.has(name);\r\n    }\r\n\r\n    /**\r\n     * 指令初始化\r\n     * @param directive     指令\r\n     * @param dom           虚拟dom\r\n     * @param parent        父虚拟dom\r\n     */\r\n        \r\n    public static init(directive:Directive,dom:Element,parent?:Element) {\r\n        let dt = directive.type;\r\n        if (dt) {\r\n            return dt.init(directive,dom,parent);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 执行指令\r\n     * @param directive     指令\r\n     * @param dom           虚拟dom\r\n     * @param module        模块\r\n     * @param parent        父dom\r\n     * @returns             指令执行结果\r\n     */\r\n    public static exec(directive:Directive, dom:Element, module:Module, parent:Element) {\r\n        //调用\r\n        return Util.apply(directive.type.handle, null, [directive,dom,module,parent]);\r\n    }\r\n}\r\n","import {Module} from \"./module\"\r\nimport { NError } from \"./error\";\r\nimport { Util } from \"./util\";\r\nimport { NodomMessage } from \"./nodom\";\r\n\r\n/**\r\n * filter类型命名规则：以小写字母a-z命名，其它字母不允许\r\n */\r\nexport class FilterManager{\r\n    /**\r\n     * 过滤类型\r\n     */\r\n    private static filterTypes:Map<string,Function> = new Map();\r\n    \r\n    /**\r\n     * 创建过滤器类型\r\n     * @param name \t\t过滤器类型名\r\n     * @param handler \t过滤器类型处理函数{init:foo1,handler:foo2}\r\n     */\r\n    public static addType(name, handler) {\r\n        if (!/^[a-zA-Z]+$/.test(name)) {\r\n            throw new NError('namedinvalid', NodomMessage.TipWords['filterType'], name);\r\n        }\r\n        if (this.filterTypes.has(name)) {\r\n            throw new NError('exist1', NodomMessage.TipWords['filterType'], name);\r\n        }\r\n        if (!Util.isFunction(handler)) {\r\n            throw new NError('invoke', 'FilterManager.addType', '1', 'Function');\r\n        }\r\n        this.filterTypes.set(name, handler);\r\n    }\r\n\r\n    /**\r\n     * 移除过滤器类型\r\n     * @param name  过滤器类型名\r\n     */\r\n    public static removeType(name:string) {\r\n        if (!this.filterTypes.has(name)) {\r\n            throw new NError('notexist1', NodomMessage.TipWords['filterType'], name);\r\n        }\r\n        this.filterTypes.delete(name);\r\n    }\r\n\r\n    /**\r\n     * 是否有某个过滤器类型\r\n     * @param type \t\t过滤器类型名\r\n     * @return \t\t\ttrue/false\r\n     */\r\n    public static hasType(name:string):boolean {\r\n        return this.filterTypes.has(name);\r\n    }\r\n\r\n    /**\r\n     * 执行过滤器\r\n     * @param module \t模块\r\n     * @param type \t\t类型\r\n     * @param arguments 参数数组  0模块 1过滤器类型名 2待处理值 3-n处理参数\r\n     * @returns \t\t过滤器执行结果\r\n     */\r\n    public static exec(module:Module, type:string):string {\r\n        let params = new Array();\r\n        for (let i = 2; i < arguments.length; i++) {\r\n            params.push(arguments[i]);\r\n        }\r\n        if (!FilterManager.filterTypes.has(type)) {\r\n            throw new NError('notexist1', NodomMessage.TipWords['filterType'], type);\r\n        }\r\n        //调用\r\n        return Util.apply(FilterManager.filterTypes.get(type), module, params);\r\n    }\r\n\r\n    /**\r\n     * 解析过滤器串为数组\r\n     * @param src \t源字符串，格式为filtertype:param1:param2:... \t\r\n     * @returns \t解析后的过滤器数组参数\r\n     */\r\n    public static explain(src: string): Array < string > {\r\n        let startStr: string\r\n        let startObj: boolean = false;\r\n        let strings:string = \"\\\"'`\"; //字符串开始和结束标志\r\n        let splitCh:string = ':'; //分隔符\r\n        let retArr = new Array();\r\n        let tmp = ''; //临时串\r\n        for (let i = 0; i < src.length; i++) {\r\n            let ch = src[i];\r\n            //字符串开始或结束\r\n            if (strings.indexOf(ch) !== -1) {\r\n                if (ch === startStr) { //字符串结束\r\n                    startStr = undefined;\r\n                } else { //字符串开始\r\n                    startStr = ch;\r\n                }\r\n            } else if (startStr === undefined) { //非字符串开始情况检查对象\r\n                if (ch === '}' && startObj) { //对象结束\r\n                    startObj = false;\r\n                } else if (ch === '{') { //对象开始\r\n                    startObj = true;\r\n                }\r\n            }\r\n\r\n            //分割开始\r\n            if (ch === splitCh && startStr === undefined && !startObj && tmp !== '') {\r\n                retArr.push(handleObj(tmp));\r\n                tmp = '';\r\n                continue;\r\n            }\r\n            tmp += ch;\r\n        }\r\n\r\n        //最后一个\r\n        if (tmp !== '') {\r\n            retArr.push(handleObj(tmp));\r\n        }\r\n        return retArr;\r\n        /**\r\n         * 转化字符串为对象\r\n         */\r\n        function handleObj(s:string) {\r\n            s = s.trim();\r\n            if (s.charAt(0) === '{') { //转换为对象\r\n                // s = eval('(' + s + ')');\r\n                s = new Function('return ' + s)();\r\n            }\r\n            return s;\r\n        }\r\n    }\r\n}\r\n","import { FilterManager } from \"./filtermanager\";\r\nimport { Util } from \"./util\";\r\nimport { Module } from \"./module\";\r\n\r\n/**\r\n * 过滤器类\r\n */\r\nexport class Filter {\r\n    /**\r\n     * 过滤器类型\r\n     */\r\n    type:string;\r\n    /**\r\n     * 过滤器参数数组\r\n     */\r\n    params:Array<string>;\r\n    /**\r\n     * 构造方法\r\n     * @param src \t\t源串，或explain后的数组\r\n     */\r\n    constructor(src?:string|string[]) {\r\n        if(src){\r\n            let arr:Array<string> = Util.isString(src)?FilterManager.explain(<string>src):<Array<string>>src;\r\n            if (arr) {\r\n                this.type = arr[0];\r\n                this.params = arr.slice(1);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 过滤器执行\r\n     * @param value \t待过滤值\r\n     * @param module \t模块\r\n     * @returns \t\t过滤结果\r\n     */\r\n    public exec(value:string, module:Module):string{\r\n        let args = [module, this.type, value].concat(this.params);\r\n        return Util.apply(FilterManager.exec, module, args);\r\n    }\r\n\r\n    /**\r\n     * 克隆\r\n     */\r\n    public clone():Filter{\r\n        let filter = new Filter();\r\n        filter.type = this.type;\r\n        if(this.params){\r\n            filter.params = Util.clone(this.params);\r\n        }\r\n        return filter;\r\n    }\r\n}\r\n","import { DirectiveManager } from \"./directivemanager\";\r\nimport { DirectiveType } from \"./directivetype\";\r\nimport { Filter } from \"./filter\";\r\nimport { Element } from \"./element\";\r\nimport { Module } from \"./module\";\r\nimport { Util } from \"./util\";\r\n\r\n/**\r\n * 指令类\r\n */\r\nexport  class Directive {\r\n    /**\r\n     * 指令id\r\n     */\r\n    public id:number;\r\n\r\n    /**\r\n     * 指令类型，指令管理器中定义\r\n     */\r\n    public type:DirectiveType;\r\n    \r\n    /**\r\n     * 指令值\r\n     */\r\n    public value:any;\r\n    \r\n    \r\n    /**\r\n     * 过滤器组\r\n     */\r\n    public filters:Filter[];\r\n    /**\r\n     * 附加参数\r\n     */\r\n    public params:any;\r\n\r\n    /**\r\n     * 附加操作\r\n     */\r\n    public extra:any;\r\n\r\n    /**\r\n     * 构造方法\r\n     * @param type  \t类型名\r\n     * @param value \t指令值\r\n     * @param dom       指令对应的dom\r\n     * @param filters   过滤器字符串或过滤器对象,如果为过滤器串，则以｜分割\r\n     * @param notSort   不排序\r\n     */\r\n    constructor(type:string, value:string,dom?:Element, parent?:Element, filters?:string|Filter[],notSort?:boolean) {\r\n        this.id = Util.genId();\r\n        this.type = DirectiveManager.getType(type);\r\n        if (Util.isString(value)) {\r\n            value = value.trim();\r\n        }\r\n        this.value = value;\r\n        \r\n        if(filters){\r\n            this.filters = [];\r\n            if(typeof filters === 'string'){\r\n                let fa:string[] = filters.split('|');\r\n                for(let f of fa){\r\n                    this.filters.push(new Filter(f));\r\n                }\r\n            }else if(Util.isArray(filters)){\r\n                for(let f of filters){\r\n                    if(typeof f === 'string'){\r\n                        this.filters.push(new Filter(<string>f));\r\n                    }else if(f instanceof Filter){\r\n                        this.filters.push(f);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (type !== undefined && dom) {\r\n            DirectiveManager.init(this,dom,parent);\r\n            dom.addDirective(this,!notSort);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 执行指令\r\n     * @param module    模块 \r\n     * @param dom       指令执行时dom\r\n     * @param parent    父虚拟dom\r\n     */\r\n    public async exec(module:Module,dom:Element,parent?:Element) {\r\n        return DirectiveManager.exec(this,dom,module,parent);\r\n    }\r\n\r\n    /**\r\n     * 克隆\r\n     * @param dst   目标dom\r\n     * @returns     新指令\r\n     */\r\n    public clone(dst:Element):Directive{\r\n        let dir = new Directive(this.type.name,this.value);\r\n        if(this.filters){\r\n            dir.filters = [];\r\n            for(let f of this.filters){\r\n                dir.filters.push(f.clone());\r\n            }\r\n        }\r\n        if(this.params){\r\n            dir.params = Util.clone(this.params);\r\n        }\r\n        if(this.extra){\r\n            dir.extra = Util.clone(this.extra);\r\n        }\r\n        DirectiveManager.init(dir,dst);\r\n        return dir;\r\n    }\r\n}\r\n","import { Element } from \"./element\";\r\nimport { Model } from \"./model\";\r\nimport { Module } from \"./module\";\r\nimport { ModuleFactory } from \"./modulefactory\";\r\nimport { Util } from \"./util\";\r\n\r\n/**\r\n * 表达式类\r\n */\r\nexport class Expression {\r\n    /**\r\n      * 表达式id\r\n      */\r\n    id: number;\r\n\r\n    /**\r\n     * 字段数组\r\n     */\r\n    fields: Array<string>;\r\n\r\n    /**\r\n     * 执行函数\r\n     */\r\n    execFunc: Function;\r\n\r\n    /**\r\n     * @param exprStr\t表达式串\r\n     */\r\n    constructor(exprStr?: string) {\r\n        this.fields = []; // 字段数组\r\n        this.id = Util.genId();\r\n        let execStr: string;\r\n        if (exprStr) {\r\n            execStr = this.compile(exprStr);\r\n        }\r\n        if (execStr) {\r\n            let v: string = this.fields.length > 0 ? ',' + this.fields.join(',') : '';\r\n            execStr = 'function($module' + v + '){return ' + execStr + '}';\r\n            this.execFunc=(new Function( 'return '+execStr))();\r\n            // this.execFunc = eval('(' + execStr + ')');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 克隆\r\n     */\r\n    public clone() {\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 初始化，把表达式串转换成堆栈\r\n     * @param exprStr \t表达式串\r\n     */\r\n    public compile(exprStr: string): string {\r\n        //替代字符串的正则数组\r\n        let stringReg = [/\\\\\"/g, /\\\\'/g, /\\\\`/g, /\\\".*?\\\"/g, /'.*?'/g, /`.*?`/g];\r\n        let replaceMap = new Map();\r\n        const TMPStr = '##TMP';\r\n        //替换字符串\r\n        stringReg.forEach(reg => {\r\n            if (reg.test(exprStr)) {\r\n                exprStr.match(reg).forEach((text) => {\r\n                    let index = exprStr.indexOf(text);\r\n                    replaceMap.set(TMPStr + index, text);\r\n                    exprStr = exprStr.substring(0, index) + (TMPStr + index) + exprStr.substring(index + text.length);\r\n                })\r\n            }\r\n        });\r\n        exprStr = exprStr.trim().replace(/([w]\\s)|instanceof|\\s+/g, (w, index) => {\r\n            if (index) return index;\r\n            else {\r\n                if (w === 'instanceof') {\r\n                    return ' ' + w + ' ';\r\n                }\r\n                return '';\r\n            }\r\n        });\r\n        //首尾指针\r\n        let [first, last] = [0, 0];\r\n        let [braces, fields, funArr, filters] = [[], [], [], []];\r\n        //括号数组 字段数组 函数数组 存过滤器需要的值\r\n        let filterString = '';\r\n        //特殊字符\r\n        let special = /[\\?\\:\\!\\|\\*\\/\\+\\-><=&%]/;\r\n        //返回的串\r\n        let express = '';\r\n        //函数名\r\n        let funName;\r\n        let isInBrace = false;\r\n        let isInFun = false;\r\n        while (last < exprStr.length) {\r\n            let lastStr = exprStr[last];\r\n            if (lastStr == '(') {\r\n                if (isInFun) {\r\n                    //函数里存函数名\r\n                    funName = exprStr.substring(funArr.pop(), last);\r\n                    express += funName;\r\n                    first = last;\r\n                } else {\r\n                    if (!isInBrace) {//不在函数里外面也不在括号里\r\n                        //取data内函数\r\n                        let mt = exprStr.substring(first, last).match(/^[\\$\\w]+/);\r\n                        if (mt) {\r\n                            fields.push(mt[0]);\r\n                        }\r\n                        express += exprStr.substring(first, last);\r\n                        first = last;\r\n                    }\r\n                }\r\n                braces.push(last++);\r\n                isInBrace = true;\r\n            } else if (lastStr == ')') {\r\n                let tmpStr = exprStr.substring(braces.pop(), last);\r\n                filters.push(tmpStr);\r\n                if (/[\\,\\!\\|\\*\\/\\+\\-><=&%]/.test(tmpStr)) {//字段截取需要的字母集\r\n                    let fieldItem = tmpStr.match(/[\\w\\$^\\.]+/g);\r\n                    fields = fields.concat(fieldItem);\r\n                } else {\r\n                    if (tmpStr.substr(1).match(/[\\$\\w]+/) && tmpStr.substr(1).match(/[\\$\\w]+/)[0].length == tmpStr.substr(1).length) {//括号里没有特殊符号\r\n                        fields.push(tmpStr.substr(1));\r\n                    } else if (tmpStr.substr(1).startsWith('...')) {//拓展运算符\r\n                        fields.push(tmpStr.substr(4));\r\n                    }\r\n                }\r\n                //外面没有括号\r\n                if (braces.length == 0) {\r\n                    isInBrace = false;\r\n                    express += tmpStr;\r\n                }\r\n                //处理函数串\r\n                if (isInFun) {\r\n                    replaceMethod();\r\n                    isInFun = false;\r\n                }\r\n                first = last++;\r\n            } else if (lastStr == '$') {\r\n                isInFun = true;\r\n                funArr.push(last++);\r\n            } else if (special.test(lastStr) && !isInBrace) {\r\n                express += exprStr.substring(first, last) + lastStr;\r\n                //特殊字符处理\r\n                fields = fields.concat(exprStr.substring(first, last).match(/[\\$\\#\\w^\\.]+/g));\r\n                if (lastStr == '=' || lastStr == '|' || lastStr == '&') {//处理重复字符，和表达式\r\n                    if (lastStr == '|' && exprStr[last + 1] != '|') {//表达式处理\r\n                        let str = filters[filters.length - 1] ? filters[filters.length - 1] : exprStr.substring(first, last);\r\n                        if (!filters.length) {\r\n                            filterString = str;\r\n                        }\r\n                        let res = handFilter();\r\n                        let index = express.indexOf(str);\r\n                        //')'和'|'\r\n                        express = express.substring(0, index) + res.str + express.substring(index + str.length + 2);\r\n                        first = last += res.length + 1;\r\n                        continue;\r\n                    }\r\n                    while (exprStr[last + 1] == lastStr) {//处理重复字符\r\n                        express += exprStr[++last];\r\n                    };\r\n                }\r\n                first = ++last;\r\n            } else {\r\n                last++;\r\n            }\r\n        }\r\n        let endStr = exprStr.substring(first);\r\n        if (endStr.indexOf(' ') === -1 && !endStr.startsWith('##TMP') && !endStr.startsWith(')')) {\r\n            let str = endStr.indexOf('.') != -1 ? endStr.substring(0, endStr.indexOf('.')) : endStr;\r\n            fields.push(str);\r\n        }\r\n        express += endStr;\r\n\r\n        function replaceMethod() {\r\n            express = express.replace(/\\$[^(]+?\\(/, () => {\r\n                return '$module.methodFactory.get(\"' + funName.substr(1) + '\").call($module,';\r\n            });\r\n        }\r\n        /**\r\n         * @returns {\r\n         * str:过滤器串\r\n         * length:编译跳过的长度\r\n         */\r\n        function handFilter() {\r\n            if (/\\d+/.test(exprStr[last + 1])) {\r\n                return;\r\n            }\r\n            last++;\r\n            let tmpStr: string = exprStr.substr(last).split(/[\\)\\(\\+\\-\\*><=&%]/)[0];\r\n            let args = [];\r\n            let value = filters.length > 0 ? filters.pop() + ')' : filterString;\r\n            let num = 0;\r\n            tmpStr.replace(/\\:/g, function (m, i) {\r\n                num++;\r\n                return m;\r\n            });\r\n            if (tmpStr.indexOf(':') != -1) {//有过滤器格式\r\n                args = tmpStr.split(/[\\:\\+\\-\\*><=&%]/);\r\n            };\r\n            if (args.length == 0) {//如果没有过滤器参数\r\n                let filterName = tmpStr.match(/^\\w+/)[0];\r\n                return {\r\n                    str: 'nodom.FilterManager.exec($module,\"' + filterName + '\",' + value + ')',\r\n                    length: filterName.length - 1,\r\n                }\r\n            }\r\n            let length = args[0].length + args[1].length;\r\n            if (args[1].startsWith('##TMP')) {//字符串还原\r\n                let deleteKey = args[1];\r\n                args[1] = replaceMap.get(args[1]);\r\n                replaceMap.delete(deleteKey);\r\n            }\r\n            let params = '';\r\n            for (let i = 1; i < num; i++) {//多个过滤器参数\r\n                params += /[\\'\\\"\\`]/.test(args[i]) ? args[i] : '\\'' + args[i] + '\\'' + ',';\r\n            }\r\n            params = /[\\'\\\"\\`]/.test(args[num]) ? args[num] : '\\'' + args[num] + '\\'';\r\n            return {\r\n                str: 'nodom.FilterManager.exec($module,\"' + args[0] + '\",' + value + ',' + params + ')',\r\n                length,\r\n            }\r\n        }\r\n        if (express.indexOf('instanceof') !== -1) {\r\n            fields.push(express.split(' ')[0]);\r\n        }\r\n        let exclude = ['.', '$module', '##TMP', 'TMP','this'];\r\n        fields = [...(new Set(fields))].filter((v) => {\r\n            return v != null && exclude.reduce((sum, value) => {\r\n                return sum === 0 ? 0 : (!v.startsWith(value) ? 1 : 0);\r\n            }, 1) === 1 && isNaN(parseInt(v, 10));\r\n        });\r\n        if (replaceMap.size) {\r\n            replaceMap.forEach((value, key) => {\r\n                express = express.substring(0, express.indexOf(key)) + value + express.substring(express.indexOf(key) + key.length);\r\n            });\r\n        };\r\n        fields.forEach(field => {\r\n            this.addField(field);\r\n        });\r\n        return express;\r\n    }\r\n\r\n    /**\r\n     * 表达式计算\r\n     * @param model \t模型 或 fieldObj对象 \r\n     * @returns \t\t计算结果\r\n     */\r\n    public val(model: Model, dom: Element) {\r\n        let module: Module = ModuleFactory.get(model.$moduleId);\r\n        if (!model) {\r\n            model = module.model;\r\n        }\r\n        let valueArr = [];\r\n        this.fields.forEach((field) => {\r\n            valueArr.push(getFieldValue(module, model, field));\r\n        });\r\n        //module作为第一个参数\r\n        valueArr.unshift(module);\r\n        let v;\r\n        try {\r\n             v = this.execFunc.apply(module, valueArr);\r\n             // v = this.execFunc.apply(null, valueArr);\r\n        } catch (e) {\r\n        }\r\n        return v === undefined || v === null ? '' : v;\r\n        /**\r\n         * 获取字段值\r\n         * @param module    模块\r\n         * @param dataObj   数据对象 \r\n         * @param field     字段名\r\n         * @return          字段值\r\n         */\r\n        function getFieldValue(module: Module, dataObj: Object, field: string) {\r\n            if (dataObj.hasOwnProperty(field)) {\r\n                return dataObj[field];\r\n            }\r\n            //从根查找\r\n            return module.model.$query(field);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 添加字段到fields\r\n    * @param field \t字段\r\n    * @returns         true/false\r\n    */\r\n    private addField(field: string): boolean {\r\n        //js 保留字\r\n        const jsKeyWords = ['true', 'false', 'undefined', 'null', 'typeof',\r\n            'Object', 'Function', 'Array', 'Number', 'Date',\r\n            'instanceof', 'NaN', 'new'];\r\n        if (field === '' || jsKeyWords.includes(field) || Util.isNumberString(field) || field.startsWith('Math') || field.startsWith('Object')) {\r\n            return false;\r\n        }\r\n        //多级字段只保留第一级，如 x.y只保留x\r\n        let ind: number;\r\n        if ((ind = field.indexOf('.')) !== -1) {\r\n            if (ind == 0) {\r\n                field = field.substr(1);\r\n            }\r\n            else {\r\n                field = field.substr(0, ind);\r\n            }\r\n        }\r\n        if (!this.fields.includes(field)) {\r\n            this.fields.push(field);\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","import { ClassDeclaration, ClassElement, ClassExpression } from \"../node_modules/typescript/lib/typescript\";\r\nimport { DefineElement } from \"./defineelement\";\r\nimport { Element } from \"./element\";\r\nimport { Module } from \"./module\";\r\nimport { Route } from \"./router\";\r\n\r\n/**\r\n * module class obj\r\n */\r\nexport interface IMdlClassObj {\r\n\r\n    /**\r\n     * class名或class\r\n     */\r\n    class: any;\r\n\r\n    /**\r\n     * 模块名\r\n     */\r\n    name?: string;\r\n\r\n    /**\r\n     * class文件路径\r\n     */\r\n    path: string;\r\n    /**\r\n     * 实例\r\n     */\r\n    instance?: Module;\r\n    /**\r\n     * 数据\r\n     */\r\n    data?: string | Object;\r\n    /**\r\n     * 是否单例\r\n     */\r\n    singleton?: boolean;\r\n    /**\r\n     * 懒加载\r\n     */\r\n    lazy?: boolean;\r\n\r\n    /**\r\n     * 是否正在初始化\r\n     */\r\n    initing: boolean;\r\n\r\n    /**\r\n     * 等待模块初始化的id列表\r\n     */\r\n    waitList: number[];\r\n    className?: string;\r\n}\r\n\r\nexport interface RegisterOps {\r\n    /**\r\n     * 模块名\r\n     */\r\n    name: string,\r\n    /**\r\n     * 模块类名\r\n     */\r\n    class: string\r\n}\r\n/**\r\n * 应用初始化配置类型\r\n */\r\nexport interface IAppCfg {\r\n    /**\r\n     * 路径参数，请参阅NApplication path属性\r\n     */\r\n    path?: any;\r\n\r\n    /**\r\n     * 语言，默认 zh\r\n     */\r\n    language: string;\r\n\r\n    /**\r\n     * 调度器间隔时间(ms)，如果支持requestAnimationFrame，则不需要\r\n     */\r\n    scheduleCircle?: number;\r\n\r\n    /**\r\n     * 主模块配置\r\n     */\r\n    module: IModuleCfg;\r\n\r\n    /**\r\n     * 模块配置数组，数组元素包括\r\n     *      class:模块类名,\r\n     *      path:模块路径(相对于app module路径),\r\n     *      data:数据路径(字符串)或数据(object),\r\n     *      singleton:单例(全应用公用同一个实例，默认true),\r\n     *      lazy:懒加载(默认false)\r\n     */\r\n    modules: IMdlClassObj[];\r\n\r\n    /**\r\n     * 路由配置\r\n     * class:模块类名,\r\n     * moduleName:模块名\r\n     * data:数据url\r\n     * routes:子路由\r\n     * onEnter:路由进入事件\r\n     * onLeave:路由离开事件\r\n     */\r\n    routes: IRouteCfg[];\r\n\r\n    /**\r\n     * 状态管理对象，实例化后引入\r\n     */\r\n    store:Object;\r\n}\r\n\r\n\r\n/**\r\n * 路由配置\r\n */\r\nexport interface IRouteCfg {\r\n    /**\r\n     * 路由路径，可以带通配符*，可以带参数 /:\r\n     */\r\n    path: string;\r\n    /**\r\n     * 路由模块id或模块类名，id为数字，类名为string\r\n     */\r\n    module?: number | string;\r\n\r\n    /**\r\n     * 模块名\r\n     */\r\n    moduleName?: string;\r\n\r\n    /**\r\n     * 数据url\r\n     */\r\n    dataUrl?: string;\r\n    /**\r\n     * 子路由数组\r\n     */\r\n    routes?: Array<IRouteCfg>;\r\n\r\n    /**\r\n     * 进入路由事件方法\r\n     */\r\n    onEnter?: Function;\r\n    /**\r\n     * 离开路由方法\r\n     */\r\n    onLeave?: Function;\r\n    /**\r\n     * 是否使用父路由路径\r\n     */\r\n    useParentPath?: boolean;\r\n    /**\r\n     * 不添加到路由树\r\n     */\r\n    notAdd?: boolean;\r\n    /**\r\n     * 父路由\r\n     */\r\n    parent?: Route;\r\n}\r\n\r\n/**\r\n * 模块配置对象\r\n */\r\nexport interface IModuleCfg {\r\n    /**\r\n     * 模块名(模块内(父模块的子模块之间)唯一)，如果不设置，则系统会自动生成Module+id\r\n     */\r\n    name?: string;\r\n\r\n    /**\r\n     * 容器选择器\r\n     */\r\n    el?: string;\r\n    /**\r\n     * 是否单例，如果为true，则整个应用中共享一个模块实例，默认false\r\n     */\r\n    singleton?: boolean;\r\n\r\n    /**\r\n     * 模块类名\r\n     */\r\n    class?: string;\r\n\r\n    /**\r\n     * 模块路径(相对于app module路径)\r\n     */\r\n    path?: string;\r\n\r\n    /**\r\n     * 模版字符串，如果以“<”开头，则表示模版字符串，否则表示模版url\r\n     */\r\n    template?: string;\r\n    /**\r\n     * 数据，如果为json object，直接作为模型数据，如果为字符串，则表示数据url，需要请求得到数据\r\n     */\r\n    data?: Object | string;\r\n    /**\r\n     * 模块方法集合\r\n     * 不要用箭头\"=>\" 操作符定义\r\n     * ```\r\n     * \t{\r\n     * \t\tmethod1:function1(){},\r\n     * \t\tmethod2:function2(){},\r\n     * \t\t...\r\n     * \t}\r\n     * ```\r\n     */\r\n    methods?: Object;\r\n\r\n    /**\r\n     * 子模块配置\r\n     */\r\n    modules?: IModuleCfg[];\r\n\r\n    /**\r\n     * 先于模块初始化加载的文件集合\r\n     * 如果为string，则表示资源路径，type为js\r\n     * 如果为object，则格式为{type:'js'/'css',url:路径}\r\n     */\r\n    requires?: Array<string | Object>;\r\n\r\n    /**\r\n     * 实例化后的状态管理对象，配置后，所有模块可见\r\n     */\r\n    store?:object\r\n}\r\n\r\n/**\r\n * 资源对象\r\n */\r\nexport interface IResourceObj {\r\n    /**\r\n     * 资源内容 字符串或数据对象或element\r\n     */\r\n    content?: any;\r\n\r\n    /**\r\n     * 类型js、template(html,htm), nd(编译后的模版文件)，data(不保存资源)\r\n     */\r\n    type?: string;\r\n\r\n    /**\r\n     * 需要加载\r\n     */\r\n    needLoad?: boolean;\r\n}\r\n\r\n/**\r\n * 提示消息接口\r\n */\r\nexport interface ITipMessage {\r\n    TipWords: Object;\r\n    ErrorMsgs: Object;\r\n    FormMsgs: Object;\r\n    WeekDays: Object;\r\n}\r\n\r\n/**\r\n * 改变的dom类型\r\n * 用于比较需要修改渲染的节点属性存储\r\n */\r\nexport class ChangedDom {\r\n    /**\r\n     * 改变方式\r\n     */\r\n    public type: string;\r\n    /**\r\n     * 改变的节点\r\n     */\r\n    public node: Element;\r\n    /**\r\n     * 父虚拟dom\r\n     */\r\n    public parent: Element;\r\n    /**\r\n     * 在父节点中的位置\r\n     */\r\n    public index: number;\r\n\r\n    /**\r\n     * 改变的属性数组\r\n     * [{prop1:value1},...]\r\n     */\r\n    public changeProps: Array<Object>;\r\n\r\n    /**\r\n     * 改变的asset\r\n     */\r\n    public changeAssets: Array<Object>;\r\n\r\n    /**\r\n     * 移除的属性名数组\r\n     */\r\n    public removeProps: Array<string>;\r\n\r\n    /**\r\n     * \r\n     * @param node      虚拟节点\r\n     * @param type      修改类型  add(添加节点),del(删除节点),upd(更新节点),rep(替换节点),text(修改文本内容)\r\n     * @param parent    父虚拟dom\r\n     * @param index     在父节点中的位置索引\r\n     */\r\n    constructor(node?: Element, type?: string, parent?: Element, index?: number) {\r\n        this.node = node;\r\n        this.type = type;\r\n        this.parent = parent;\r\n        this.index = index;\r\n    }\r\n}\r\n\r\n/**\r\n * 自定义标签配置\r\n */\r\nexport interface IDefineElementCfg {\r\n    /**\r\n     * 初始化方法\r\n     */\r\n    init: Function,\r\n\r\n    /**\r\n     * 渲染时方法\r\n     */\r\n    handler?: Function\r\n}\r\n\r\n/**\r\n *  AST对象约束\r\n */\r\nexport interface ASTObj extends Object {\r\n    /**\r\n     * 节点类型，如果是原生节点，如div则是div，如果是文本节点则是text。如果是注释则为comment\r\n     */\r\n    tagName: string;\r\n\r\n    /**\r\n     * 属性数组，里面为属性对象如{propName:'class',value:'myclass'}\r\n     */\r\n    attrs?: Array<{ propName: string, value: any }>;\r\n\r\n    /**\r\n     * 事件数组，里面为事件对象{eventName:'click',eventHandler:'change'}\r\n     */\r\n    events?: Array<{ eventName: string, exec: any }>;\r\n\r\n    /**\r\n     * 子节点数组，与textContent互斥\r\n     */\r\n    children?: Array<ASTObj>;\r\n\r\n    /**\r\n     * 表达式数组\r\n     */\r\n    expressions?: any[]\r\n\r\n    /**\r\n     * textContent 节点为text的时候才有的属性，与children属性互斥\r\n     */\r\n    textContent?: string;\r\n}\r\n\r\n\r\nexport const selfClosingTag = [\r\n    \"area\",\r\n    \"base\",\r\n    \"basefont\",\r\n    \"br\",\r\n    \"col\",\r\n    \"embed\",\r\n    \"frame\",\r\n    \"hr\",\r\n    \"img\",\r\n    \"input\",\r\n    \"keygen\",\r\n    \"link\",\r\n    \"meta\",\r\n    \"param\",\r\n    \"source\",\r\n    \"track\",\r\n];\r\n","import { DefineElement } from \"./defineelement\";\r\nimport { Directive } from \"./directive\";\r\nimport { NError } from \"./error\";\r\nimport { NEvent } from \"./event\";\r\nimport { Expression } from \"./expression\";\r\nimport { Model } from \"./model\";\r\nimport { Module } from \"./module\";\r\nimport { ModuleFactory } from \"./modulefactory\";\r\nimport { ChangedDom } from \"./types\";\r\nimport { Util } from \"./util\";\r\n\r\n/**\r\n * 虚拟dom\r\n */\r\nexport class Element {\r\n    /**\r\n     * key，整颗虚拟dom树唯一\r\n     */\r\n    public key: string;\r\n\r\n    /**\r\n     * 绑定模型\r\n     */\r\n    public model: Model;\r\n\r\n    /**\r\n     * element为textnode时有效\r\n     */\r\n    public textContent: string | HTMLElement;\r\n\r\n    /**\r\n     * 类型，包括: html fragment 或 html element \r\n     */\r\n    public type: string;\r\n\r\n    /**\r\n     * 指令集\r\n     */\r\n    public directives: Array<Directive> = [];\r\n\r\n    /**\r\n     * 直接属性 不是来自于attribute，而是直接作用于html element，如el.checked,el.value等\r\n     */\r\n    public assets: Map<string, any> = new Map();\r\n\r\n    /**\r\n     * 静态属性(attribute)集合\r\n     * {prop1:value1,...}\r\n     */\r\n    public props: Object = {};\r\n\r\n    /**\r\n     * 含表达式的属性集合\r\n     * {prop1:value1,...}\r\n     */\r\n    public exprProps: Object = {};\r\n\r\n    /**\r\n     * 事件集合,{eventName1:nodomNEvent1,...}\r\n     * 一个事件名，可以绑定多个事件方法对象\r\n     */\r\n    public events: Map<string, NEvent | NEvent[]> = new Map();\r\n\r\n    /**\r\n     * 表达式+字符串数组，用于textnode\r\n     */\r\n    public expressions: Array<Expression | string> = [];\r\n\r\n    /**\r\n     * 子element\r\n     */\r\n    public children: Array<Element> = [];\r\n\r\n    /**\r\n     * 父element key\r\n     */\r\n    public parentKey: string;\r\n\r\n    /**\r\n     * 父虚拟dom\r\n     */\r\n    public parent: Element;\r\n\r\n    /**\r\n     * 元素名，如div\r\n     */\r\n    public tagName: string;\r\n\r\n    /**\r\n     * 不渲染标志，单次渲染有效\r\n     */\r\n    public dontRender: boolean = false;\r\n\r\n    /**\r\n     * 是否为自定义节点\r\n     */\r\n    public defineEl: DefineElement;\r\n\r\n    /**\r\n     * 渲染前（获取model后）执行方法集合,可以是方法名（在module的methods中定义），也可以是函数\r\n     * 函数的this指向element的model，参数为(element,module)\r\n     */\r\n    private beforeRenderOps: any[] = [];\r\n\r\n    /**\r\n     * 渲染后（renderToHtml前）执行方法集合，可以是方法名（在module的methods中定义），也可以是函数\r\n     * 函数的this指向element的model，参数为(element,module)\r\n     */\r\n    private afterRenderOps: any[] = [];\r\n\r\n    /**\r\n     * 临时参数 map\r\n     */\r\n    private tmpParamMap: Map<string, any> = new Map();\r\n\r\n    /**\r\n     * @param tag 标签名\r\n     */\r\n    constructor(tag?: string) {\r\n        this.tagName = tag; //标签\r\n        //检查是否为svg\r\n        if (tag && tag.toLowerCase() === 'svg') {\r\n            this.setTmpParam('isSvgNode', true);\r\n            // this.isSvgNode = true;\r\n        }\r\n        //key\r\n        this.key = Util.genId() + '';\r\n    }\r\n\r\n    /**\r\n     * 渲染到virtualdom树\r\n     * @param module \t模块\r\n     * @param parent \t父节点\r\n     * @returns         渲染成功（dontRender=false） true,否则false\r\n     */\r\n    public render(module: Module, parent?: Element): Boolean {\r\n        if (this.dontRender) {\r\n            this.doDontRender();\r\n            return false;\r\n        }\r\n\r\n        // 设置父对象\r\n        if (parent) {\r\n            // 设置modelId\r\n            if (!this.model) {\r\n                this.model = parent.model;\r\n            }\r\n            this.parent = parent;\r\n            this.parentKey = parent.key;\r\n        }\r\n        //设置model为模块model\r\n        if (!this.model) {\r\n            this.model = module.model;\r\n        }\r\n        //前置方法集合执行\r\n        this.doRenderOp(module, 'before');\r\n\r\n        if (this.tagName !== undefined) { //element\r\n            if (!this.handleDirectives(module)) {\r\n                this.doDontRender();\r\n                return false;\r\n            }\r\n\r\n\r\n            this.handleProps(module);\r\n        } else { //textContent\r\n            this.handleTextContent(module);\r\n        }\r\n\r\n        //子模块渲染\r\n        if (!this.hasDirective('module')) {\r\n            for (let i = 0; i < this.children.length; i++) {\r\n                let item = this.children[i];\r\n                if (!item.render(module, this)) {\r\n                    item.doDontRender();\r\n                    this.children.splice(i--, 1);\r\n                }\r\n            }\r\n        }\r\n        //后置方法集执行\r\n        this.doRenderOp(module, 'after');\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 恢复到渲染前\r\n     */\r\n    private recover() {\r\n        //删除parent\r\n        delete this.parent;\r\n        //删除model\r\n        delete this.model;\r\n        //删除dontRender\r\n        delete this.dontRender;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 渲染到html element\r\n     * @param module \t模块\r\n     * @param params \t配置对象{}\r\n     *          type \t\t类型\r\n     *          parent \t父虚拟dom\r\n     */\r\n    public renderToHtml(module: Module, params: ChangedDom) {\r\n        let el: HTMLElement;\r\n        let el1: Node;\r\n        let type = params.type;\r\n        let parent = params.parent;\r\n        //重置dontRender\r\n        // this.dontRender = false;\r\n        //构建el\r\n        if (type === 'fresh' || type === 'add' || type === 'text') {\r\n            if (parent) {\r\n                el = module.getNode(parent.key);\r\n            } else {\r\n                el = module.getContainer();\r\n            }\r\n        } else if (this.tagName !== undefined) { //element节点才可以查找\r\n            el = module.getNode(this.key);\r\n            this.handleAssets(el);\r\n        }\r\n\r\n        if (!el) {\r\n            return;\r\n        }\r\n\r\n        switch (type) {\r\n            case 'fresh': //首次渲染\r\n                if (this.tagName) {\r\n                    el1 = newEl(this, null, el);\r\n                    //首次渲染需要生成子孙节点\r\n                    genSub(el1, this);\r\n                } else {\r\n                    el1 = newText(<string>this.textContent, this);\r\n                }\r\n                el.appendChild(el1);\r\n\r\n                break;\r\n            case 'text': //文本更改\r\n                if (!parent || !parent.children) {\r\n                    break;\r\n                }\r\n                let indexArr = [];\r\n                parent.children.forEach(v => [\r\n                    indexArr.push(v.key)\r\n                ])\r\n                let ind = indexArr.indexOf(this.key);\r\n                if (ind !== -1) {\r\n                    //element或fragment\r\n                    if (this.type === 'html') {\r\n                        let div: HTMLElement = <HTMLElement>document.querySelector(\"[key='\" + this.key + \"']\");\r\n                        if (div !== null) {\r\n                            div.innerHTML = '';\r\n                            div.appendChild(<HTMLElement>this.textContent);\r\n                        } else {\r\n                            let div: Node = newText(<string>this.textContent);\r\n                            Util.replaceNode(el.childNodes[ind], div);\r\n                        }\r\n                    } else {\r\n                        el.childNodes[ind].textContent = <string>this.textContent;\r\n                    }\r\n                }\r\n                break;\r\n            case 'upd': //修改属性\r\n                //删除属性\r\n                if (params.removeProps) {\r\n                    params.removeProps.forEach((p) => {\r\n                        el.removeAttribute(p);\r\n                    });\r\n                }\r\n                //修改属性\r\n                if (params.changeProps) {\r\n                    params.changeProps.forEach((p) => {\r\n                        el.setAttribute(p['k'], p['v']);\r\n                    });\r\n                }\r\n\r\n                //修改直接绑定el上的属性（不是attribute）\r\n                if (params.changeAssets) {\r\n                    params.changeAssets.forEach((p) => {\r\n                        el[p['k']] = p['v'];\r\n                    });\r\n                }\r\n                break;\r\n            case 'rep': //替换节点\r\n                el1 = newEl(this, parent);\r\n                Util.replaceNode(el, el1);\r\n                break;\r\n            case 'add': //添加\r\n                if (this.tagName) {\r\n                    el1 = newEl(this, parent, el);\r\n                    genSub(el1, this);\r\n                } else {\r\n                    el1 = newText(this.textContent);\r\n                }\r\n                if (params.index === el.childNodes.length) {\r\n                    el.appendChild(el1);\r\n                } else {\r\n                    el.insertBefore(el1, el.childNodes[params.index]);\r\n                }\r\n        }\r\n\r\n        /**\r\n         * 新建element节点\r\n         * @param vdom \t\t虚拟dom\r\n         * @param parent \t父虚拟dom\r\n         * @param parentEl \t父element\r\n         * @returns \t\t新的html element\r\n         */\r\n        function newEl(vdom: Element, parent: Element, parentEl?: Node): any {\r\n            //创建element\r\n            let el;\r\n            if (vdom.getTmpParam('isSvgNode')) {  //如果为svg node，则创建svg element\r\n                el = Util.newSvgEl(vdom.tagName);\r\n            } else {\r\n                el = Util.newEl(vdom.tagName);\r\n            }\r\n            //设置属性\r\n            Util.getOwnProps(vdom.props).forEach((k) => {\r\n                if (typeof vdom.props[k] != 'function')\r\n                    el.setAttribute(k, vdom.props[k]);\r\n            });\r\n\r\n            el.setAttribute('key', vdom.key);\r\n            vdom.handleNEvents(module, el, parent, parentEl);\r\n            vdom.handleAssets(el);\r\n            return el;\r\n        }\r\n\r\n        /**\r\n         * 新建文本节点\r\n         */\r\n        function newText(text: string | HTMLElement | DocumentFragment, dom?: Element): any {\r\n            if (!text) {\r\n                text = '';\r\n                dom = null;\r\n            }\r\n            if (dom && 'html' === dom.type) { //html fragment 或 element\r\n                let div = Util.newEl('div');\r\n                div.setAttribute('key', dom.key);\r\n                div.appendChild(<HTMLElement>text);\r\n                return div;\r\n            } else {\r\n                return document.createTextNode(<string>text);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 生成子节点\r\n         * @param pEl \t父节点\r\n         * @param vNode 虚拟dom父节点\t\r\n         */\r\n        function genSub(pEl: Node, vNode: Element) {\r\n            if (vNode.children && vNode.children.length > 0) {\r\n                vNode.children.forEach((item) => {\r\n                    let el1;\r\n                    if (item.tagName) {\r\n                        el1 = newEl(item, vNode, pEl);\r\n                        genSub(el1, item);\r\n                    } else {\r\n                        el1 = newText(item.textContent, item);\r\n                    }\r\n                    pEl.appendChild(el1);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 克隆\r\n     * changeKey    是否更改key，主要用于创建时克隆，渲染时克隆不允许修改key\r\n     */\r\n    public clone(changeKey?: boolean): Element {\r\n        let dst: Element = new Element();\r\n        //不直接拷贝的属性\r\n        let notCopyProps: string[] = ['parent', 'directives', 'defineEl', 'children', 'model'];\r\n        //简单属性\r\n        Util.getOwnProps(this).forEach((p) => {\r\n            if (notCopyProps.includes(p)) {\r\n                return;\r\n            }\r\n            if (typeof this[p] === 'object') {\r\n                dst[p] = Util.clone(this[p]);\r\n            } else {\r\n                dst[p] = this[p];\r\n            }\r\n        });\r\n\r\n        //表示clone后进行新建节点\r\n        if (changeKey) {\r\n            dst.key = Util.genId() + '';\r\n        }\r\n\r\n        //define element复制\r\n        if (this.defineEl) {\r\n            if (changeKey) {\r\n                dst.defineEl = this.defineEl.clone(dst);\r\n            } else {\r\n                dst.defineEl = this.defineEl;\r\n            }\r\n        }\r\n\r\n\r\n        //指令复制\r\n        for (let d of this.directives) {\r\n            if (changeKey) {\r\n                d = d.clone(dst);\r\n            }\r\n            dst.directives.push(d);\r\n        }\r\n        //孩子节点\r\n        for (let c of this.children) {\r\n            dst.add(c.clone(changeKey));\r\n        }\r\n\r\n        return dst;\r\n    }\r\n\r\n    /**\r\n     * 处理指令\r\n     * @param module    模块\r\n     */\r\n    public handleDirectives(module: Module) {\r\n        for (let d of this.directives.values()) {\r\n            d.exec(module, this, this.parent);\r\n            //指令可能改变render标志\r\n            if (this.dontRender) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 表达式处理，添加到expression计算队列\r\n     * @param exprArr   表达式或字符串数组\r\n     * @param module    模块\r\n     */\r\n    public handleExpression(exprArr: Array<Expression | string>, module: Module) {\r\n        let model: Model = this.model;\r\n        let value = '';\r\n        if (exprArr.length === 1 && typeof exprArr[0] !== 'string') {\r\n            let v1 = exprArr[0].val(model, this);\r\n            return v1 !== undefined ? v1 : '';\r\n        }\r\n        exprArr.forEach((v) => {\r\n            if (v instanceof Expression) { //处理表达式\r\n                let v1 = v.val(model, this);\r\n                value += v1 !== undefined ? v1 : '';\r\n            } else {\r\n                value += v;\r\n            }\r\n        });\r\n        return value;\r\n    }\r\n\r\n    /**\r\n      * 处理属性（带表达式）\r\n      * @param module    模块\r\n      */\r\n    public handleProps(module: Module) {\r\n        for (let k of Util.getOwnProps(this.exprProps)) {\r\n\r\n            //属性值为数组，则为表达式\r\n            if (Util.isArray(this.exprProps[k])) {\r\n                let pv = this.handleExpression(this.exprProps[k], module);\r\n                //class可叠加\r\n                if (k === 'class') {\r\n                    this.addClass(pv);\r\n                } else if (k === 'style') {\r\n                    this.addStyle(pv);\r\n                } else {\r\n                    this.props[k] = pv;\r\n                }\r\n            } else if (this.exprProps[k] instanceof Expression) { //单个表达式\r\n                if (k === 'class') {\r\n                    this.addClass(this.exprProps[k].val(this.model))\r\n                }\r\n                else if (k === 'style') {\r\n                    this.addStyle(this.exprProps[k].val(this.model))\r\n                } else {\r\n                    this.props[k] = this.exprProps[k].val(this.model);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 处理asset，在渲染到html时执行\r\n     * @param el    dom对应的html element\r\n     */\r\n    public handleAssets(el: HTMLElement | SVGElement) {\r\n        if (!this.tagName || !el) {\r\n            return;\r\n        }\r\n\r\n        for (let key of this.assets) {\r\n            el[key[0]] = key[1];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 处理文本（表达式）\r\n     * @param module    模块\r\n     */\r\n    public handleTextContent(module) {\r\n        if (this.expressions !== undefined && this.expressions.length > 0) {\r\n            this.textContent = this.handleExpression(this.expressions, module) || '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 处理事件\r\n     * @param module    模块\r\n     * @param el        html element\r\n     * @param parent    父virtual dom\r\n     * @param parentEl  父html element\r\n     */\r\n    public handleNEvents(module: Module, el: Node, parent: Element, parentEl?: Node) {\r\n        if (this.events.size === 0) {\r\n            return;\r\n        }\r\n        for (let evt of this.events.values()) {\r\n            if (Util.isArray(evt)) {\r\n                for (let evo of <NEvent[]>evt) {\r\n                    evo.bind(module, this, <HTMLElement>el, parent, parentEl);\r\n                }\r\n            } else {\r\n                (<NEvent>evt).bind(module, this, <HTMLElement>el, parent, parentEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移除指令\r\n     * @param directives \t待删除的指令类型数组或指令类型\r\n     */\r\n    public removeDirectives(directives: string | string[]) {\r\n        if (typeof directives === 'string') {\r\n            let ind;\r\n            if ((ind = this.directives.findIndex(item => item.type.name === directives)) !== -1) {\r\n                this.directives.splice(ind, 1);\r\n            }\r\n            return;\r\n        }\r\n        for (let d of directives) {\r\n            let ind;\r\n            if ((ind = this.directives.findIndex(item => item.type.name === d)) !== -1) {\r\n                this.directives.splice(ind, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加指令\r\n     * @param directive     指令对象\r\n     * @param sort          是否排序\r\n     */\r\n    public addDirective(directive: Directive, sort?: boolean) {\r\n        let finded: boolean = false;\r\n        for (let i = 0; i < this.directives.length; i++) {\r\n            //如果存在相同类型，则直接替换\r\n            if (this.directives[i].type === directive.type) {\r\n                this.directives[i] = directive;\r\n                finded = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!finded) {\r\n            this.directives.push(directive);\r\n        }\r\n\r\n        //指令按优先级排序\r\n        if (sort) {\r\n            if (this.directives.length > 1) {\r\n                this.directives.sort((a, b) => {\r\n                    return a.type.prio - b.type.prio;\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 是否有某个类型的指令\r\n     * @param directiveType \t指令类型名\r\n     * @return true/false\r\n     */\r\n    public hasDirective(directiveType): boolean {\r\n\r\n        return this.directives.findIndex(item => item.type.name === directiveType) !== -1;\r\n    }\r\n\r\n    /**\r\n     * 获取某个类型的指令\r\n     * @param directiveType \t指令类型名\r\n     * @return directive\r\n     */\r\n    public getDirective(directiveType): Directive {\r\n        return this.directives.find(item => item.type.name === directiveType);\r\n    }\r\n\r\n    /**\r\n     * 添加子节点\r\n     * @param dom \t子节点\r\n     */\r\n    public add(dom: Element | Array<Element>) {\r\n        if (Array.isArray(dom)) {\r\n            dom.forEach(v => {\r\n                v.parentKey = this.key;\r\n                //将parent也附加上，增量渲染需要\r\n                v.parent = this;\r\n            });\r\n            this.children.push(...dom);\r\n        } else {\r\n            dom.parentKey = this.key;\r\n            this.children.push(dom);\r\n            dom.parent = this;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 从虚拟dom树和html dom树删除自己\r\n     * @param module \t模块\r\n     * @param delHtml \t是否删除html element\r\n     */\r\n    public remove(module: Module, delHtml?: boolean) {\r\n        // 从父树中移除\r\n        let parent: Element = this.getParent(module);\r\n        if (parent) {\r\n            parent.removeChild(this);\r\n        }\r\n        // 删除html dom节点\r\n        if (delHtml && module) {\r\n            let el = module.getNode(this.key);\r\n            if (el !== null) {\r\n                Util.remove(el);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从html删除\r\n     */\r\n    public removeFromHtml(module: Module, textNode?: boolean) {\r\n        // if (textNode) {\r\n        //     let parent = module.getNode(this.parentKey);\r\n        //     if (parent !== null) {\r\n        //         let content = Array.prototype.findIndex.call(parent.childNodes, (v) => {\r\n        //             if (v.nodeType == 3) {\r\n        //                 return this.textContent == v.textContent;\r\n        //             } else {\r\n        //                 return false;\r\n        //             }\r\n        //         });\r\n        //         if(content!=-1)\r\n        //         parent.removeChild(parent.childNodes[content]);\r\n        //     }\r\n        // }\r\n        let el = module.getNode(this.key);\r\n        if (el !== null) {\r\n            Util.remove(el);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移除子节点\r\n     * @param dom   子dom\r\n     */\r\n    public removeChild(dom: Element) {\r\n        let ind: number;\r\n        // 移除\r\n        if (Util.isArray(this.children) && (ind = this.children.indexOf(dom)) !== -1) {\r\n            this.children.splice(ind, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取parent\r\n     * @param module 模块 \r\n     * @returns      父element\r\n     */\r\n    public getParent(module: Module): Element {\r\n        if (!module) {\r\n            throw new NError('invoke', 'Element.getParent', '0', 'Module');\r\n        }\r\n        if (this.parent) {\r\n            return this.parent;\r\n        }\r\n        if (this.parentKey) {\r\n            return module.getElement(this.parentKey);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 替换目标节点\r\n     * @param dst \t目标节点　\r\n     */\r\n    public replace(dst: Element) {\r\n        if (!dst.parent) {\r\n            return false;\r\n        }\r\n        let ind = dst.parent.children.indexOf(dst);\r\n        if (ind === -1) {\r\n            return false;\r\n        }\r\n        //替换\r\n        dst.parent.children.splice(ind, 1, this);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 是否包含节点\r\n     * @param dom \t包含的节点 \r\n     */\r\n    public contains(dom: Element) {\r\n        for (; dom !== undefined && dom !== this; dom = dom.parent);\r\n        return dom !== undefined;\r\n    }\r\n\r\n    /**\r\n     * 是否存在某个class\r\n     * @param cls   classname\r\n     * @return      true/false\r\n     */\r\n    public hasClass(cls: string): boolean {\r\n        let clazz = this.props['class'];\r\n        if (!clazz) {\r\n            return false;\r\n        } else {\r\n            return clazz.trim().split(/\\s+/).includes(cls);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加css class\r\n     * @param cls class名\r\n     */\r\n    public addClass(cls: string) {\r\n        let clazz = this.props['class'];\r\n        if (!clazz) {\r\n            this.props['class'] = cls;\r\n        } else {\r\n            let sa: any[] = clazz.trim().split(/\\s+/);\r\n            if (!sa.includes(cls)) {\r\n                sa.push(cls);\r\n                clazz = sa.join(' ');\r\n                this.props['class'] = clazz;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 删除css class\r\n     * @param cls class名\r\n     */\r\n    public removeClass(cls: string) {\r\n        let clazz = this.props['class'];\r\n        if (!clazz) {\r\n            return;\r\n        } else {\r\n            let sa: string[] = clazz.trim().split(/\\s+/);\r\n            let index;\r\n            if ((index = sa.indexOf(cls)) !== -1) {\r\n                sa.splice(index, 1);\r\n                clazz = sa.join(' ');\r\n            }\r\n        }\r\n        this.props['class'] = clazz;\r\n    }\r\n    /**\r\n         * 查询style\r\n         * @param styStr style字符串\r\n         */\r\n    public hasStyle(styStr: string) {\r\n        let styleStr = this.props['style'];\r\n        if (!styleStr) {\r\n            return false;\r\n        } else {\r\n            return styleStr.trim().split(/;\\s+/).includes(styStr);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加style\r\n     *  @param styStr style字符串\r\n     */\r\n    public addStyle(styStr: string) {\r\n        let styleStr = this.props['style'];\r\n        if (!styleStr) {\r\n            this.props['style'] = styStr;\r\n        } else {\r\n            let sa: any[] = styleStr.trim().split(/;\\s+/);\r\n            if (!sa.includes(styStr)) {\r\n                sa.push(styStr);\r\n                styleStr = sa.join(';');\r\n                this.props['style'] = styleStr;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 删除style\r\n     * @param styStr style字符串\r\n     */\r\n    public removeStyle(styStr: string) {\r\n        let styleStr = this.props['style'];\r\n        if (!styleStr) {\r\n            return;\r\n        } else {\r\n            let sa: string[] = styleStr.trim().split(/;\\s+/);\r\n            let index;\r\n            if ((index = sa.indexOf(styStr)) !== -1) {\r\n                sa.splice(index, 1);\r\n                styleStr = sa.join(';');\r\n            }\r\n        }\r\n        this.props['style'] = styleStr;\r\n    }\r\n    /**\r\n     * 是否拥有属性\r\n     * @param propName  属性名\r\n     */\r\n    public hasProp(propName: string) {\r\n        return this.props.hasOwnProperty(propName) || this.exprProps.hasOwnProperty(propName);\r\n    }\r\n\r\n    /**\r\n     * 获取属性值\r\n     * @param propName  属性名\r\n     */\r\n    public getProp(propName: string, isExpr?: boolean) {\r\n        if (isExpr) {\r\n            return this.exprProps[propName];\r\n        } else {\r\n            return this.props[propName];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置属性值\r\n     * @param propName  属性名\r\n     * @param v         属性值\r\n     * @param isExpr    是否是表达式属性 默认false  \r\n     */\r\n    public setProp(propName: string, v: any, isExpr?: boolean) {\r\n        if (isExpr) {\r\n            this.exprProps[propName] = v;\r\n        } else {\r\n            this.props[propName] = v;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 删除属性\r\n     * @param props     属性名或属性名数组 \r\n     */\r\n    public delProp(props: string | string[]) {\r\n        if (Util.isArray(props)) {\r\n            for (let p of <string[]>props) {\r\n                delete this.exprProps[p];\r\n            }\r\n            for (let p of <string[]>props) {\r\n                delete this.props[p];\r\n            }\r\n        } else {\r\n            delete this.exprProps[<string>props];\r\n            delete this.props[<string>props];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置asset\r\n     * @param assetName     asset name\r\n     * @param value         asset value\r\n     */\r\n    public setAsset(assetName: string, value: any) {\r\n        this.assets.set(assetName, value);\r\n    }\r\n\r\n    /**\r\n     * 删除asset\r\n     * @param assetName     asset name\r\n     */\r\n    public delAsset(assetName: string) {\r\n        this.assets.delete(assetName);\r\n    }\r\n\r\n    /**\r\n     * 查找子孙节点\r\n     * @param key \telement key\r\n     * @returns\t\t虚拟dom/undefined\r\n     */\r\n    public query(key: string | Object) {\r\n        //defineEl\r\n        if (typeof key === 'object' && key != null) {\r\n            let res: boolean = true;\r\n            for (const [attr, value] of Object.entries(key)) {\r\n                if (attr !== 'type' && (this.getProp(attr.toLocaleLowerCase()) || this[attr]) != value) {\r\n                    res = false;\r\n                    break;\r\n                }\r\n            };\r\n            if (res) {\r\n                return key.hasOwnProperty('type') && key['type'] !== 'element' ? this.defineEl : this;\r\n            }\r\n        } else {\r\n            if (this.key === key) return this;\r\n        }\r\n\r\n        for (let i = 0; i < this.children.length; i++) {\r\n            let dom = this.children[i].query(key);\r\n            if (dom) {\r\n                return dom;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 比较节点\r\n     * @param dst \t待比较节点\r\n     * @returns\t{type:类型 text/rep/add/upd,node:节点,parent:父节点, \r\n     * \t\t\tchangeProps:改变属性,[{k:prop1,v:value1},...],removeProps:删除属性,[prop1,prop2,...],changeAssets:改变的asset}\r\n     */\r\n    public compare(dst: Element, retArr: Array<ChangedDom>, deleteMap?: Map<string, Array<any>>, parentNode?: Element) {\r\n        if (!dst) {\r\n            return;\r\n        }\r\n        let re: ChangedDom = new ChangedDom();\r\n        let change: boolean = false;\r\n        if (this.tagName === undefined) { //文本节点\r\n            if (dst.tagName === undefined) {\r\n                if (this.textContent !== dst.textContent) {\r\n                    re.type = 'text';\r\n                    change = true;\r\n                }\r\n            } else { //节点类型不同\r\n                addDelKey(this, 'rep',);\r\n            }\r\n        } else { //element节点\r\n            if (this.tagName !== dst.tagName) { //节点类型不同\r\n                addDelKey(this, 'rep');\r\n            } else { //节点类型相同，可能属性不同\r\n                //检查属性，如果不同则放到changeProps\r\n                re.changeProps = [];\r\n                re.changeAssets = [];\r\n                //待删除属性\r\n                re.removeProps = [];\r\n\r\n                //删除或增加的属性\r\n                Util.getOwnProps(dst.props).forEach((k) => {\r\n                    if (!this.hasProp(k)) {\r\n                        re.removeProps.push(k);\r\n                    }\r\n                });\r\n\r\n                //修改后的属性\r\n                Util.getOwnProps(this.props).forEach((k) => {\r\n                    let v1 = dst.props[k];\r\n                    if (this.props[k] !== v1) {\r\n                        re.changeProps.push({ k: k, v: this.props[k] });\r\n                    }\r\n                });\r\n                //修改后的asset\r\n                for (let kv of this.assets) {\r\n                    let v1 = dst.assets.get(kv[0]);\r\n                    if (kv[0] !== v1) {\r\n                        re.changeAssets.push({ k: kv[0], v: kv[1] });\r\n                    }\r\n                }\r\n\r\n                // props assets 改变或删除，加入渲染\r\n                if (re.changeProps.length > 0 || re.changeAssets.length > 0 || re.removeProps.length > 0) {\r\n                    change = true;\r\n                    re.type = 'upd';\r\n                }\r\n            }\r\n        }\r\n        //改变则加入数据\r\n        if (change) {\r\n            re.node = this;\r\n            if (parentNode) {\r\n                re.parent = parentNode;\r\n            }\r\n            retArr.push(re);\r\n        }\r\n\r\n        //子节点处理\r\n        if (!this.children || this.children.length === 0) {\r\n            // 旧节点的子节点全部删除\r\n            if (dst.children && dst.children.length > 0) {\r\n                dst.children.forEach(item => addDelKey(item));\r\n            }\r\n        } else {\r\n            //全部新加节点\r\n            if (!dst.children || dst.children.length === 0) {\r\n                this.children.forEach(item => retArr.push(new ChangedDom(item, 'add', this)));\r\n            } else { //都有子节点\r\n                //子节点对比策略\r\n                let [oldStartIdx, oldStartNode, oldEndIdx, oldEndNode] = [0, dst.children[0], dst.children.length - 1, dst.children[dst.children.length - 1]];\r\n                let [newStartIdx, newStartNode, newEndIdx, newEndNode] = [0, this.children[0], this.children.length - 1, this.children[this.children.length - 1]];\r\n                let [newMap, newKeyMap] = [new Map(), new Map()];\r\n                while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\r\n                    if (sameKey(oldStartNode, newStartNode)) {\r\n                        newStartNode.compare(oldStartNode, retArr, deleteMap, this);\r\n                        newStartNode = this.children[++newStartIdx];\r\n                        oldStartNode = dst.children[++oldStartIdx];\r\n                    } else if (sameKey(oldEndNode, newEndNode)) {\r\n                        newEndNode.compare(oldEndNode, retArr, deleteMap, this);\r\n                        newEndNode = this.children[--newEndIdx];\r\n                        oldEndNode = dst.children[--oldEndIdx];\r\n                    } else if (sameKey(newStartNode, oldEndNode)) {\r\n                        newStartNode.compare(oldEndNode, retArr, deleteMap, this);\r\n                        newStartNode = this.children[++newStartIdx];\r\n                        oldEndNode = dst.children[--oldEndIdx];\r\n                    } else if (sameKey(newEndNode, oldStartNode)) {\r\n                        newEndNode.compare(oldStartNode, retArr, deleteMap, this);\r\n                        newEndNode = this.children[--newEndIdx];\r\n                        oldStartNode = dst.children[++oldStartIdx];\r\n                    } else {\r\n                        newMap.set(newStartIdx, newStartNode);\r\n                        newKeyMap.set(newStartNode.key, newStartIdx);\r\n                        newStartNode = this.children[++newStartIdx];\r\n                    }\r\n                }\r\n                if (oldStartIdx <= oldEndIdx || newStartIdx <= newEndIdx) {\r\n                    if (newStartIdx <= newEndIdx) {//新增节点\r\n                        for (let i = newStartIdx; i <= newEndIdx; i++)  retArr.push(new ChangedDom(this.children[i], 'add', this, i));\r\n                    } else {//有老节点\r\n                        for (let i = oldStartIdx; i <= oldEndIdx; i++) {\r\n                            let oldKey = dst.children[i].key;\r\n                            if (newKeyMap.has(oldKey)) {\r\n                                newMap.get(newKeyMap.get(oldKey)).compare(dst.children[i], retArr, deleteMap, this);\r\n                                newMap.delete(newKeyMap.get(oldKey));\r\n                                newKeyMap.delete(oldKey);\r\n                            }\r\n                            else {\r\n                                addDelKey(dst.children[i]);\r\n                            }\r\n                        };\r\n                    }\r\n                }\r\n                if (newMap.size) {\r\n                    newMap.forEach((v, k) => {\r\n                        retArr.push(new ChangedDom(v, 'add', this, k));\r\n                    })\r\n                };\r\n            }\r\n        }\r\n        function sameKey(newElement, oldElement) {\r\n            return newElement.key === oldElement.key;\r\n        }\r\n        //添加刪除替換的key\r\n        function addDelKey(element: Element, type?: string) {\r\n            let pKey: string = element.parentKey;\r\n            if (!deleteMap.has(pKey)) {\r\n                deleteMap.set(pKey, new Array());\r\n            }\r\n            deleteMap.get(pKey).push(type == 'rep' ? element.parent.children.indexOf(element) + '|' + this.key : element.parent.children.indexOf(element));\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 添加事件\r\n     * @param event         事件对象\r\n     */\r\n    public addEvent(event: NEvent) {\r\n        //如果已经存在，则改为event数组，即同名event可以多个执行方法\r\n        if (this.events.has(event.name)) {\r\n            let ev = this.events.get(event.name);\r\n            let evs: NEvent[];\r\n            if (Util.isArray(ev)) {\r\n                evs = <NEvent[]>ev;\r\n            } else {\r\n                evs = [<NEvent>ev];\r\n            }\r\n            evs.push(event);\r\n            this.events.set(event.name, evs);\r\n        } else {\r\n            this.events.set(event.name, event);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 执行不渲染关联操作\r\n     * 关联操作，包括:\r\n     *  1 节点(子节点)含有module指令，需要unactive\r\n     */\r\n    public doDontRender() {\r\n        if (this.hasDirective('module')) {\r\n            let d: Directive = this.getDirective('module');\r\n            if (d.extra && d.extra.moduleId) {\r\n                let mdl: Module = ModuleFactory.get(d.extra.moduleId);\r\n                if (mdl) {\r\n                    mdl.unactive();\r\n                }\r\n            }\r\n        }\r\n        //子节点递归\r\n        for (let c of this.children) {\r\n            c.doDontRender();\r\n        }\r\n        this.recover();\r\n    }\r\n\r\n    /**\r\n     * 设置临时参数\r\n     * @param key       参数名\r\n     * @param value     参数值\r\n     */\r\n    setTmpParam(key: string, value: any) {\r\n        this.tmpParamMap.set(key, value);\r\n    }\r\n\r\n    /**\r\n     * 获取临时参数\r\n     * @param key       参数名\r\n     * @returns         参数值\r\n     */\r\n    getTmpParam(key: string): any {\r\n        return this.tmpParamMap.get(key);\r\n    }\r\n\r\n    /**\r\n     * 删除临时参数\r\n     * @param key       参数名\r\n     */\r\n    removeTmpParam(key: string) {\r\n        this.tmpParamMap.delete(key);\r\n    }\r\n\r\n\r\n    /**\r\n     * 是否有临时参数\r\n     * @param key       参数名\r\n     */\r\n    hasTmpParam(key: string) {\r\n        return this.tmpParamMap.has(key);\r\n    }\r\n\r\n    /**\r\n     * 添加渲染附加操作\r\n     * @param method    方法名 \r\n     * @param type      类型 before,after\r\n     */\r\n    addRenderOp(method: any, type: string) {\r\n        if (type === 'before') {\r\n            this.beforeRenderOps.push(method);\r\n        } else {\r\n            this.afterRenderOps.push(method);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 执行渲染附加操作\r\n     * @param module    模块\r\n     * @param type      类型 before,after\r\n     */\r\n    doRenderOp(module: Module, type: string) {\r\n        // 否则执行注册在element上的前置渲染方法\r\n        let arr = type === 'before' ? this.beforeRenderOps : this.afterRenderOps;\r\n        for (let m of arr) {\r\n            //可能是字符串\r\n            if (typeof m === 'string') {\r\n                m = module.getMethod(m);\r\n            }\r\n            if (m) {\r\n                m.apply(this.model, [this, module]);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","import { Element } from \"./element\";\r\nimport { Model } from \"./model\";\r\nimport { Module } from \"./module\";\r\nimport { ModuleFactory } from \"./modulefactory\";\r\nimport { Util } from \"./util\";\r\n\r\n/**\r\n * 事件类\r\n * @remarks\r\n * 事件分为自有事件和代理事件\r\n * 自有事件绑定在view上\r\n * 代理事件绑定在父view上，存储于事件对象的events数组中\r\n * 如果所绑定对象已存在该事件名对应的事件，如果是代理事件，则添加到子事件队列，否则替换view自有事件\r\n * 事件执行顺序，先执行代理事件，再执行自有事件\r\n * \r\n * @author      yanglei\r\n * @since       1.0\r\n */\r\nexport class NEvent {\r\n    public id: number;\r\n    /**\r\n     * 事件名\r\n     */\r\n    public name: string;\r\n    /**\r\n     * 子事件数组\r\n     */\r\n    private events: Map<string, Array<NEvent>>;\r\n    /**\r\n     * 事件处理函数名(需要在模块methods中定义)\r\n     */\r\n    private handler: string | Function;\r\n    /**\r\n     * 代理到父对象\r\n     */\r\n    private delg: boolean;\r\n    /**\r\n     * 禁止冒泡\r\n     */\r\n    private nopopo: boolean;\r\n    /**\r\n     * 只执行一次\r\n     */\r\n    private once: boolean;\r\n\r\n    /**\r\n     * 使用 capture\r\n     */\r\n    public capture: boolean;\r\n\r\n    /**\r\n     * 模块id\r\n     */\r\n    public moduleId: number;\r\n\r\n    /**\r\n     * 事件所属虚拟dom的key\r\n     */\r\n    private domKey: string;\r\n\r\n    /**\r\n     * 事件监听器\r\n     */\r\n    private handleListener: any;\r\n    /**\r\n     * 触屏监听器\r\n     */\r\n    public touchListeners: Map<string, NEvent>;\r\n\r\n    /**\r\n     * 附加参数map\r\n     */\r\n    private extraParamMap: Map<string, any>;\r\n\r\n    /**\r\n     * @param eventName     事件名\r\n     * @param eventStr      事件串或事件处理函数,以“:”分割,中间不能有空格,结构为: 方法名[:delg(代理到父对象):nopopo(禁止冒泡):once(只执行一次):capture(useCapture)]\r\n     *                      如果为函数，则替代第三个参数\r\n     * @param handler       事件执行函数，如果方法不在module methods中定义，则可以直接申明，eventStr第一个参数失效，即eventStr可以是\":delg:nopopo...\"\r\n     */\r\n    constructor(eventName: string, eventStr?: string | Function, handler?: Function) {\r\n        this.id = Util.genId();\r\n        this.name = eventName;\r\n        //如果事件串不为空，则不需要处理\r\n        if (eventStr) {\r\n            let tp = typeof eventStr;\r\n            if (tp === 'string') {\r\n                let eStr: string = (<string>eventStr).trim();\r\n                eStr.split(':').forEach((item, i) => {\r\n                    item = item.trim();\r\n                    if (i === 0) { //事件方法\r\n                        this.handler = item;\r\n                    } else { //事件附加参数\r\n                        switch (item) {\r\n                            case 'delg':\r\n                                this.delg = true;\r\n                                break;\r\n                            case 'nopopo':\r\n                                this.nopopo = true;\r\n                                break;\r\n                            case 'once':\r\n                                this.once = true;\r\n                                break;\r\n                            case 'capture':\r\n                                this.capture = true;\r\n                                break;\r\n                        }\r\n                    }\r\n                });\r\n\r\n            } else if (tp === 'function') {\r\n                handler = <Function>eventStr;\r\n            }\r\n        }\r\n        //新增事件方法（不在methods中定义）\r\n        if (handler) {\r\n            this.handler = handler;\r\n        }\r\n\r\n        //设备类型  1:触屏，2:非触屏\t\r\n        let dtype: number = 'ontouchend' in document ? 1 : 2\r\n        //触屏事件根据设备类型进行处理\r\n        if (dtype === 1) { //触屏设备\r\n            switch (this.name) {\r\n                case 'click':\r\n                    this.name = 'tap';\r\n                    break;\r\n                case 'mousedown':\r\n                    this.name = 'touchstart';\r\n                    break;\r\n                case 'mouseup':\r\n                    this.name = 'touchend';\r\n                    break;\r\n                case 'mousemove':\r\n                    this.name = 'touchmove';\r\n                    break;\r\n            }\r\n        } else { //转非触屏\r\n            switch (this.name) {\r\n                case 'tap':\r\n                    this.name = 'click';\r\n                    break;\r\n                case 'touchstart':\r\n                    this.name = 'mousedown';\r\n                    break;\r\n                case 'touchend':\r\n                    this.name = 'mouseup';\r\n                    break;\r\n                case 'touchmove':\r\n                    this.name = 'mousemove';\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 事件触发\r\n     * @param e     事件\r\n     * @param el    html element\r\n     */\r\n    public fire(e: Event, el?: HTMLElement) {\r\n        const module: Module = ModuleFactory.get(this.moduleId);\r\n        if (!module.getContainer()) {\r\n            return;\r\n        }\r\n        let dom: Element = module.getElement(this.domKey);\r\n        const model = dom.model;\r\n        //如果capture为true，则先执行自有事件，再执行代理事件，否则反之\r\n        if (this.capture) {\r\n            handleSelf(this, e, model, module, dom, el);\r\n            handleDelg(this, e, dom);\r\n        } else {\r\n            if (handleDelg(this, e, dom)) {\r\n                handleSelf(this, e, model, module, dom, el);\r\n            }\r\n        }\r\n        //判断是否清除事件\r\n        if (this.events !== undefined &&\r\n            this.events.has(this.name) &&\r\n            this.events.get(this.name).length === 0 &&\r\n            this.handler === undefined) {\r\n            if (!el) {\r\n                el = module.getNode(this.domKey);\r\n            }\r\n\r\n            if (ExternalNEvent.touches[this.name]) {\r\n                ExternalNEvent.unregist(this, el);\r\n            } else {\r\n                if (el !== null) {\r\n                    el.removeEventListener(this.name, this.handleListener);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 处理自有事件\r\n         * @param eObj      nodom event对象\r\n         * @param e         事件\r\n         * @param dom       虚拟dom\r\n         * @returns         true 允许冒泡 false 禁止冒泡\r\n         */\r\n        function handleDelg(eObj: NEvent, e: Event, dom: Element) {\r\n            //代理事件执行\r\n            if (eObj.events === undefined) {\r\n                return true;\r\n            }\r\n            //事件target对应的key\r\n            let eKey: string = (<HTMLElement>e.target).getAttribute('key');\r\n            let arr: NEvent[] = eObj.events.get(eObj.name);\r\n            if (Util.isArray(arr)) {\r\n                if (arr.length > 0) {\r\n                    for (let i = 0; i < arr.length; i++) {\r\n                        let sdom: Element = dom.query(arr[i].domKey);\r\n                        if (!sdom) {\r\n                            continue;\r\n                        }\r\n                        // 找到对应的子事件执行\r\n                        if (eKey === sdom.key || sdom.query(eKey)) {\r\n                            //执行\r\n                            arr[i].fire(e);\r\n                            //执行一次，需要移除\r\n                            if (arr[i].once) {\r\n                                eObj.removeChild(arr[i]);\r\n                            }\r\n                            //禁止冒泡\r\n                            if (arr[i].nopopo) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                } else { //删除该事件\r\n                    eObj.events.delete(eObj.name);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n\r\n        /**\r\n         * 处理自有事件\r\n         * @param eObj      NEvent对象\r\n         * @param e         事件\r\n         * @param model     模型\r\n         * @param module    模块\r\n         * @param dom       虚拟dom\r\n         */\r\n        function handleSelf(eObj: NEvent, e: Event, model: Model, module: Module, dom: Element, el?: HTMLElement) {\r\n            if (typeof eObj.handler === 'string') {\r\n                eObj.handler = module.getMethod(<string>eObj.handler);\r\n            }\r\n            if (!eObj.handler) {\r\n                return;\r\n            }\r\n            //禁止冒泡\r\n            if (eObj.nopopo) {\r\n                e.stopPropagation();\r\n            }\r\n            Util.apply(<Function>eObj.handler, dom.model, [dom, module, e, el]);\r\n            //事件只执行一次，则删除handler\r\n            if (eObj.once) {\r\n                delete eObj.handler;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 绑定事件\r\n     * @param module    模块\r\n     * @param dom       虚拟dom\r\n     * @param el        html element\r\n     * @param parent    父dom\r\n     * @param parentEl  对应htmlelement的父html element\r\n     */\r\n    public bind(module: Module, dom: Element, el: HTMLElement, parent: Element, parentEl?: Node) {\r\n        this.moduleId = module.id;\r\n        this.domKey = dom.key;\r\n        if (this.delg && parent) { //代理到父对象\r\n            this.delegateTo(module, dom, <HTMLElement>el, parent, <HTMLElement>parentEl);\r\n        } else {\r\n            this.bindTo(el);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 绑定到el\r\n     * @param el    目标html element \r\n     */\r\n    private bindTo(el: HTMLElement) {\r\n        //触屏事件\r\n        if (ExternalNEvent.touches[this.name]) {\r\n            ExternalNEvent.regist(this, el);\r\n        } else {\r\n            this.handleListener = (e) => {\r\n                this.fire(e, el);\r\n            };\r\n            el.addEventListener(this.name, this.handleListener, this.capture);\r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * 事件代理到父对象\r\n     * @param module    模块\r\n     * @param vdom      虚拟dom\r\n     * @param el        事件作用的html element \r\n     * @param parent    父虚拟dom\r\n     * @param parentEl  父element\r\n     */\r\n    private delegateTo(module: Module, vdom: Element, el: HTMLElement, parent?: Element, parentEl?: HTMLElement) {\r\n        this.domKey = vdom.key;\r\n        this.moduleId = module.id;\r\n\r\n        //如果不存在父对象，则用body\r\n        if (!parentEl) {\r\n            parentEl = document.body;\r\n        }\r\n\r\n        //父节点如果没有这个事件，则新建，否则直接指向父节点相应事件\r\n        if (!parent.events.has(this.name)) {\r\n            let ev = new NEvent(this.name);\r\n            ev.bindTo(parentEl);\r\n            parent.events.set(this.name, ev);\r\n        }\r\n\r\n        //为父对象事件添加子事件\r\n        let evt = parent.events.get(this.name);\r\n        let ev: NEvent;\r\n        if (Util.isArray(evt) && (<NEvent[]>evt).length > 0) {\r\n            ev = evt[0];\r\n        } else {\r\n            ev = <NEvent>evt;\r\n        }\r\n        if (ev) {\r\n            ev.addChild(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加子事件\r\n     * @param ev    事件\r\n     */\r\n    private addChild(ev) {\r\n        if (!this.events) {\r\n            this.events = new Map();\r\n        }\r\n\r\n        //事件类型对应的数组\r\n        if (!this.events.has(this.name)) {\r\n            this.events.set(this.name, new Array());\r\n        }\r\n        this.events.get(this.name).push(ev);\r\n    }\r\n\r\n    /**\r\n     * 移除子事件\r\n     * @param ev    子事件\r\n     */\r\n    private removeChild(ev) {\r\n        if (this.events === undefined || this.events[ev.name] === undefined) {\r\n            return;\r\n        }\r\n        let ind = this.events[ev.name].indexOf(ev);\r\n        if (ind !== -1) {\r\n            this.events[ev.name].splice(ind, 1);\r\n            if (this.events[ev.name].length === 0) {\r\n                this.events.delete(ev.name);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 克隆\r\n     */\r\n    public clone() {\r\n        let evt = new NEvent(this.name);\r\n        let arr = ['delg', 'once', 'nopopo', 'capture', 'handler'];\r\n        arr.forEach((item) => {\r\n            evt[item] = this[item];\r\n        });\r\n        return evt;\r\n    }\r\n\r\n    /**\r\n     * 获取event 的domkey\r\n     */\r\n    public getDomKey() {\r\n        return this.domKey;\r\n    }\r\n\r\n    /**\r\n     * 设置附加参数值\r\n     * @param key       参数名\r\n     * @param value     参数值\r\n     */\r\n    public setExtraParam(key: string, value: any) {\r\n        if (!this.extraParamMap) {\r\n            this.extraParamMap = new Map();\r\n        }\r\n        this.extraParamMap.set(key, value);\r\n    }\r\n\r\n    /**\r\n     * 获取附加参数值\r\n     * @param key   参数名\r\n     * @returns     参数值\r\n     */\r\n    public getExtraParam(key: string) {\r\n        return this.extraParamMap.get(key);\r\n    }\r\n}\r\n\r\n/**\r\n * 扩展事件\r\n */\r\nexport class ExternalNEvent {\r\n    /**\r\n     * 触屏事件\r\n     */\r\n    static touches: any = {};\r\n    /**\r\n     * 注册事件\r\n     * @param evtObj    event对象\r\n     */\r\n    static regist(evtObj: NEvent, el: HTMLElement) {\r\n        //触屏事件组\r\n        let touchEvts: any = ExternalNEvent.touches[evtObj.name];\r\n        //如果绑定了，需要解绑\r\n        if (!Util.isEmpty(evtObj.touchListeners)) {\r\n            this.unregist(evtObj);\r\n        }\r\n\r\n        // el不存在\r\n        if (!el) {\r\n            const module = ModuleFactory.get(evtObj.moduleId);\r\n            el = module.getNode(evtObj.getDomKey());\r\n        }\r\n\r\n        evtObj.touchListeners = new Map();\r\n        if (touchEvts && el !== null) {\r\n            // 绑定事件组\r\n            Util.getOwnProps(touchEvts).forEach(function (ev) {\r\n                //先记录下事件，为之后释放\r\n                evtObj.touchListeners[ev] = function (e) {\r\n                    touchEvts[ev](e, evtObj);\r\n                }\r\n                el.addEventListener(ev, evtObj.touchListeners[ev], evtObj.capture);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 取消已注册事件\r\n     * @param evtObj    event对象\r\n     * @param el        事件绑定的html element\r\n     */\r\n    static unregist(evtObj: NEvent, el?: HTMLElement) {\r\n        const evt = ExternalNEvent.touches[evtObj.name];\r\n        if (!el) {\r\n            const module = ModuleFactory.get(evtObj.moduleId);\r\n            el = module.getNode(evtObj.getDomKey());\r\n        }\r\n        if (evt) {\r\n            // 解绑事件\r\n            if (el !== null) {\r\n                Util.getOwnProps(evtObj.touchListeners).forEach(function (ev) {\r\n                    el.removeEventListener(ev, evtObj.touchListeners[ev]);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * 触屏事件\r\n */\r\nExternalNEvent.touches = {\r\n    tap: {\r\n        touchstart: function (e: TouchEvent, evtObj: NEvent) {\r\n            let tch = e.touches[0];\r\n            evtObj.setExtraParam('pos', { sx: tch.pageX, sy: tch.pageY, t: Date.now() });\r\n        },\r\n        touchmove: function (e: TouchEvent, evtObj: NEvent) {\r\n            let pos = evtObj.getExtraParam('pos');\r\n            let tch = e.touches[0];\r\n            let dx = tch.pageX - pos.sx;\r\n            let dy = tch.pageY - pos.sy;\r\n            //判断是否移动\r\n            if (Math.abs(dx) > 5 || Math.abs(dy) > 5) {\r\n                pos.move = true;\r\n            }\r\n        },\r\n        touchend: function (e: TouchEvent, evtObj: NEvent) {\r\n            let pos = evtObj.getExtraParam('pos');\r\n            let dt = Date.now() - pos.t;\r\n            //点下时间不超过200ms\r\n            if (pos.move === true || dt > 200) {\r\n                return;\r\n            }\r\n            evtObj.fire(e);\r\n        }\r\n    },\r\n    swipe: {\r\n        touchstart: function (e: TouchEvent, evtObj: NEvent) {\r\n            let tch = e.touches[0];\r\n            let t = Date.now();\r\n            evtObj.setExtraParam('swipe', {\r\n                oldTime: [t, t],\r\n                speedLoc: [{ x: tch.pageX, y: tch.pageY }, { x: tch.pageX, y: tch.pageY }],\r\n                oldLoc: { x: tch.pageX, y: tch.pageY }\r\n            });\r\n        },\r\n        touchmove: function (e: TouchEvent, evtObj: NEvent) {\r\n            let nt = Date.now();\r\n            let tch = e.touches[0];\r\n            let mv = evtObj.getExtraParam('swipe');\r\n            //50ms记录一次\r\n            if (nt - mv.oldTime > 50) {\r\n                mv.speedLoc[0] = { x: mv.speedLoc[1].x, y: mv.speedLoc[1].y };\r\n                mv.speedLoc[1] = { x: tch.pageX, y: tch.pageY };\r\n                mv.oldTime[0] = mv.oldTime[1];\r\n                mv.oldTime[1] = nt;\r\n            }\r\n            mv.oldLoc = { x: tch.pageX, y: tch.pageY };\r\n        },\r\n        touchend: function (e: any, evtObj: NEvent) {\r\n            let mv = evtObj.getExtraParam('swipe');\r\n            let nt = Date.now();\r\n\r\n            //取值序号 0 或 1，默认1，如果释放时间与上次事件太短，则取0\r\n            let ind = (nt - mv.oldTime[1] < 30) ? 0 : 1;\r\n            let dx = mv.oldLoc.x - mv.speedLoc[ind].x;\r\n            let dy = mv.oldLoc.y - mv.speedLoc[ind].y;\r\n            let s = Math.sqrt(dx * dx + dy * dy);\r\n            let dt = nt - mv.oldTime[ind];\r\n            //超过300ms 不执行事件\r\n            if (dt > 300 || s < 10) {\r\n                return;\r\n            }\r\n            let v0 = s / dt;\r\n            //速度>0.1,触发swipe事件\r\n            if (v0 > 0.05) {\r\n                let sname = '';\r\n                if (dx < 0 && Math.abs(dy / dx) < 1) {\r\n                    e.v0 = v0; //添加附加参数到e\r\n                    sname = 'swipeleft';\r\n                }\r\n                if (dx > 0 && Math.abs(dy / dx) < 1) {\r\n                    e.v0 = v0;\r\n                    sname = 'swiperight';\r\n                }\r\n                if (dy > 0 && Math.abs(dx / dy) < 1) {\r\n                    e.v0 = v0;\r\n                    sname = 'swipedown';\r\n                }\r\n                if (dy < 0 && Math.abs(dx / dy) < 1) {\r\n                    e.v0 = v0;\r\n                    sname = 'swipeup';\r\n                }\r\n                if (evtObj.name === sname) {\r\n                    evtObj.fire(e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//swipe事件\r\nExternalNEvent.touches['swipeleft'] = ExternalNEvent.touches['swipe'];\r\nExternalNEvent.touches['swiperight'] = ExternalNEvent.touches['swipe'];\r\nExternalNEvent.touches['swipeup'] = ExternalNEvent.touches['swipe'];\r\nExternalNEvent.touches['swipedown'] = ExternalNEvent.touches['swipe'];\r\n","import { DefineElementManager } from \"./defineelementmanager\";\r\nimport { Directive } from \"./directive\";\r\nimport { Element } from \"./element\";\r\nimport { NEvent } from \"./event\";\r\nimport { Expression } from \"./expression\";\r\nimport { ASTObj, selfClosingTag } from \"./types\";\r\nimport { Util } from \"./util\";\r\n\r\n\r\nexport class Compiler {\r\n\r\n    /**\r\n    * 编译\r\n    * @param elementStr    待编译html串\r\n    * @returns             虚拟dom\r\n    */\r\n    public static compile(elementStr: string): Element {\r\n\r\n        // 这里是把模板串通过正则表达式匹配 生成AST\r\n        let ast = this.compileTemplateToAst(elementStr);\r\n\r\n        let oe = new Element('div');\r\n        // 将AST编译成抽象语法树\r\n        this.compileAST(oe, ast);\r\n\r\n        return oe;\r\n    }\r\n\r\n    /**\r\n     * 把AST编译成虚拟dom\r\n     * @param oe 虚拟dom的根容器\r\n     * @param ast 抽象语法树也就是JSON对象\r\n     * @returns oe 虚拟dom的根容器\r\n     */\r\n    public static compileAST(oe: Element, ast: Array<ASTObj>): Element {\r\n        if (!ast) return;\r\n        for (const a of ast) {\r\n            switch (a.tagName) {\r\n                case 'text': //文本节点\r\n                    this.handleAstText(oe, a);\r\n                    break;\r\n                case 'comment':// 注释不处理\r\n                    break;\r\n                default:\r\n\r\n                    if (a.tagName !== 'svg') {\r\n                        // let chlid = new Element(a.tagName);\r\n                        this.handleAstNode(oe, a);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return oe;\r\n    }\r\n    /**\r\n     * 编译text类型的ast到虚拟dom\r\n     * @param parent 父虚拟dom节点\r\n     * @param ast 虚拟dom树\r\n     */\r\n    private static handleAstText(parent: Element, astObj: ASTObj) {\r\n        let text = new Element();\r\n        parent.children.push(text);\r\n        // 处理属性\r\n        this.handleAstAttrs(text, astObj.attrs, parent);\r\n        // text 类型的节点不需要处理子节点。\r\n        text.expressions = astObj.expressions;\r\n        text.textContent = astObj.textContent;\r\n    }\r\n    /**\r\n     * \r\n     * @param oe 虚拟dom   \r\n     * @param astObj \r\n     */\r\n    public static handleAstNode(parent: Element, astObj: ASTObj) {\r\n        // let de = PluginManager.get(astObj.tagName.toUpperCase());\r\n        let de = DefineElementManager.get(astObj.tagName.toUpperCase());\r\n\r\n        let child = new Element(astObj.tagName);\r\n        parent.add(child);\r\n        this.handleAstAttrs(child, astObj.attrs, parent);\r\n        this.compileAST(child, astObj.children);\r\n        if (de) {\r\n            de.init(child, parent);\r\n        }\r\n    }\r\n    /**\r\n     * 编译ast 到虚拟dom\r\n     * @param oe        虚拟dom\r\n     * @param attrs     需要编译成虚拟dom的attrs\r\n     * @param parent    父虚拟dom节点\r\n     */\r\n    public static handleAstAttrs(oe: Element, attrs: Array<{ propName: string, value: any }>, parent: Element) {\r\n        //指令数组 先处理普通属性在处理指令\r\n        let directives = [];\r\n        if (!attrs) { return }\r\n        for (const attr of attrs) {\r\n            // 统一吧属性名转换成小写\r\n            attr.propName = attr.propName.toLocaleLowerCase()\r\n            if (attr.propName.startsWith(\"x-\")) {\r\n                //指令\r\n                directives.push(attr);\r\n            } else if (attr.propName.startsWith(\"e-\")) {\r\n                // 事件\r\n                let e = attr.propName.substr(2);\r\n                oe.addEvent(new NEvent(e, attr.value.trim()));\r\n            } else {\r\n                // 普通属性 如class 等\r\n                let isExpr: boolean = false;\r\n                let v = attr.value.trim();\r\n                if (v !== '') {\r\n                    let ra = this.compileExpression(v);\r\n                    if (Util.isArray(ra)) {\r\n                        oe.setProp(attr.propName, ra, true);\r\n                        isExpr = true;\r\n                    }\r\n                }\r\n                if (!isExpr) {\r\n                    oe.setProp(attr.propName, v);\r\n                }\r\n            }\r\n        }\r\n        //处理属性\r\n        for (let attr of directives) {\r\n            new Directive(attr.propName.substr(2), attr.value.trim(), oe, parent, null, true);\r\n        }\r\n        if (directives.length > 1) {\r\n            //指令排序\r\n            oe.directives.sort((a, b) => {\r\n                return a.type.prio - b.type.prio;\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 处理属性字符串\r\n     * @param attrString 属性字符串\r\n     * @returns attrs数组 \r\n     */\r\n    private static parseAttrString(attrString: string | undefined): Array<any> {\r\n        if (attrString == undefined || attrString.length === 0) return [];\r\n        attrString = attrString.trim();\r\n        // 引号栈处理引号嵌套\r\n        let yinghaoStack: string[] = [];\r\n        //引号flag 当前是否在引号内\r\n        let yinhaoFlag = false;\r\n        // 断点\r\n        let point = 0;\r\n\r\n        let result = [];\r\n        for (let i = 0; i < attrString.length; i++) {\r\n            let s = attrString[i];\r\n            if (/[\\\"\\']/.test(s)) {\r\n                // 遇到引号\r\n                if (yinghaoStack.length != 0) {\r\n                    // 引号栈不空\r\n                    if (s === yinghaoStack[yinghaoStack.length - 1]) {\r\n                        // 判断是不是匹配栈顶\r\n                        yinghaoStack.pop();\r\n                        if (yinghaoStack.length == 0) yinhaoFlag = false;\r\n                    } else {\r\n                        // 不匹配栈顶直接入栈\r\n                        yinghaoStack.push(s);\r\n                    }\r\n                } else {\r\n                    // 引号栈空 入栈\r\n                    yinghaoStack.push(s);\r\n                    yinhaoFlag = true;\r\n                }\r\n\r\n                // yinhaoFlag = !yinhaoFlag;\r\n            } else if (/\\s/.test(s) && !yinhaoFlag) {\r\n                //遇到空格并且不在引号中\r\n                if (!/^\\s*?$/.test(attrString.substring(point, i))) {\r\n                    result.push(attrString.substring(point, i).trim());\r\n                    point = i;\r\n                }\r\n            }\r\n        }\r\n        let lastAttr = attrString.substring(point).trim();\r\n        // 判断最后一个属性是不是自定义标签的'/' 如果是则不把他当作标签。\r\n        if (lastAttr !== '/') {\r\n            //循环结束之后还剩一个属性没加进去，因为可能最后一个属性后面没有空格\r\n            result.push(attrString.substring(point).trim());\r\n        }\r\n        result = result.map((item) => {\r\n            // 如果match为空说明属性串里面没有“”也就是自定义的只有属性名没有属性值得属性，这种直接给他的value字段设置为空就行了\r\n\r\n            const o = item.match(/^(.+)=[\\'|\\\"]([\\s\\S]*)[\\'|\\\"]$/) || [, item];\r\n            const e = item.match(/^(.+)=(\\{\\{[\\s\\S]*\\}\\})$/);\r\n            if (e) {\r\n                return {\r\n                    propName: e[1],\r\n                    value: e[2] ? e[2] : '',\r\n                }\r\n            } else {\r\n                return {\r\n                    propName: o[1],\r\n                    value: o[2] ? o[2] : '',\r\n                };\r\n            }\r\n\r\n        });\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 将模板字符串转换成AST抽象语法树结构\r\n     * @param elementStr 模板字符串\r\n     * @returns AST对象数组\r\n     */\r\n    private static compileTemplateToAst(elementStr: string): Array<ASTObj> {\r\n        let templateStr = elementStr.trim();\r\n        // 准备栈空间\r\n        let stack1 = [];\r\n        let stack2 = [{ tagName: undefined, children: [], attrs: [] }]\r\n\r\n        let index = 0;\r\n\r\n        // 开始标签的正则表达式 \r\n        let startRegExp = /^\\<(\\s*)([a-z\\-]*[0-9]?)((?:\\s+\\w+\\-?\\w+(?:\\=[\\\"\\']?[\\s\\S]*?[\\\"\\']?)?)*)*(\\s*\\/)?(\\s*)\\>/\r\n        // /^\\<(\\s*)([a-z]+[1-6]?|ui\\-[a-z]+[1-6]?)((?:\\s+.+?[\\\"\\'](?:[\\s\\S]*?)[\\\"\\']|(?:\\s+\\w+\\-?\\w+)*))?(\\s*\\/)?(\\s*)\\>/\r\n        // 匹配结束标签的正则表达式\r\n        let endRegExp = /^\\<(\\s*)\\/(\\s*)([a-z\\-]*[0-9]?)(\\s*)\\>/\r\n        // /^\\<(\\s*)\\/(\\s*)([a-z]+[1-6]?|ui\\-[a-z]+[1-6]?)(\\s*)\\>/;\r\n        // 匹配开始标签和结束标签之间的文字的正则表达式 \r\n        let wordRegExp = /^([\\s\\S]+?)(?=\\<(?:!--)?(?:\\s*\\/?\\s*(?:[a-z\\-]*[0-9]?)(?:(?:\\s+\\w+\\-?\\w+\\=?[\\\"\\']?[\\s\\S]*?[\\\"\\']?)*)*|(?:[\\s\\S]+?))(?:--)?\\>)/\r\n        // /^([\\s\\S]+?)(?=\\<(!--)?(?:(\\s*)\\/?(\\s*)(?:[a-z]+[1-6]?|ui\\-[a-z]+[1-6]?)(?:(?:\\s+.+?[\\\"\\'](?:[\\s\\S]*?)[\\\"\\']|.*))?(\\s*)|(?:[\\s\\S]+?))(--)?\\>)/\r\n        // 匹配裸字符串，全字符匹配配合wordRegExp标签判断是不是裸字符串\r\n        let onlyWordRegExp = /^([\\s\\S]+)/;\r\n        // 匹配注释\r\n        let commentRegExp = /^\\s*\\<!--[\\s\\S]+?--\\>/;\r\n        // pre结束标签。\r\n        let preEndTagRegExp = /^([\\s\\S]+)(?=\\<(\\s*)\\/(\\s*)pre(?:\\s.+?)?(\\s*)\\>)/;\r\n        // pre标签标志，遇到pre标签要把标签里面的内容当成文本节点。\r\n        let preFlag = false;\r\n        // 匹配到字符串末尾\r\n        while (index < templateStr.length - 1) {\r\n            let rest = templateStr.substring(index);\r\n\r\n            if (preFlag) {\r\n                // 现在进入到pre标签里面了 直接搜索</pre>结束标签\r\n                let text = rest.match(preEndTagRegExp) ? rest.match(preEndTagRegExp)[1] : null;\r\n                if (text) {\r\n                    stack2[stack2.length - 1].children.push({ textContent: text, tagName: 'text' })\r\n                    index += text.length;\r\n                    preFlag = false;\r\n                } else {\r\n                    throw new Error(\"pre标签未闭合\");\r\n\r\n                }\r\n            } else if (startRegExp.test(rest)) {\r\n\r\n                // 识别遍历到的字符是不是一个开始标签\r\n\r\n                // beforeSpaceString:左尖括号与标签名之间的空格\r\n                // tagName:标签名  \r\n                // attrString:标签里的属性字符串 \r\n                // selfCloseStr: 自闭合标签的反斜杠\r\n                // afterSpaceString:属性与右尖括号之间的空格\r\n                let [, beforeSpaceString, tagName, attrString, selfCloseStr, afterSpaceString] = rest.match(startRegExp);\r\n                const beforeSpaceLenght = beforeSpaceString ? beforeSpaceString.length : 0;\r\n                const tagNameLenght = tagName ? tagName.length : 0;\r\n                const atttLenght = attrString ? attrString.length : 0;\r\n                const selfCloseLenght = selfCloseStr ? selfCloseStr.length : 0;\r\n                const afterSpaceLenght = afterSpaceString ? afterSpaceString.length : 0;\r\n                if (tagName === 'pre') {\r\n                    // pre标签\r\n                    preFlag = true;\r\n                }\r\n                if (selfClosingTag.indexOf(tagName) !== -1) {\r\n                    // 这个标签是自闭合标签\r\n                    stack2[stack2.length - 1].children.push({\r\n                        tagName,\r\n                        children: [],\r\n                        attrs: this.parseAttrString(attrString)\r\n                    })\r\n\r\n\r\n                } else {\r\n                    // 这个标签是普通的标签\r\n                    // 开始标签入栈\r\n                    stack1.push(tagName);\r\n                    // AST入栈\r\n                    stack2.push({\r\n                        tagName,\r\n                        children: [],\r\n                        attrs: this.parseAttrString(attrString)\r\n                    });\r\n                    // 需要跳过的长度 = 2个尖括号 + 左尖括号与标签名之间的空格长度 + 标签名长度 + 属性长度 + 属性与右尖括号之间的空格长度\r\n\r\n                }\r\n                index += 2 + beforeSpaceLenght + tagNameLenght + atttLenght + selfCloseLenght + afterSpaceLenght;\r\n            } else if (endRegExp.test(rest)) {\r\n                // 识别结束标记\r\n                // let tagName = rest.match(endRegExp)[1];\r\n\r\n                // beforeSpaceString: / 之前的空格\r\n                // afterSpaceString: / 之后的空格\r\n                // tagName: 标签名字\r\n                // endSpaceString: 标签之后的空格\r\n                let [, beforeSpaceString, afterSpaceString, tagName, endSpaceString] = rest.match(endRegExp)\r\n                const beforeSpaceLenght = beforeSpaceString ? beforeSpaceString.length : 0;\r\n                const afterSpaceLenght = afterSpaceString ? afterSpaceString.length : 0;\r\n                const tagNameLenght = tagName ? tagName.length : 0;\r\n                const endSpaceLenght = endSpaceString ? endSpaceString.length : 0;\r\n                // 这时候tag一定和栈顶是相同的，因为html需要闭合，如果不相同哪么说明有标签没闭合\r\n                if (tagName != stack1[stack1.length - 1]) {\r\n                    throw new Error(stack1[stack1.length - 1] + \"标签没有封闭\");\r\n                } else {\r\n                    stack1.pop();\r\n                    let pop_arr = stack2.pop();\r\n                    if (stack2.length > 0) {\r\n                        stack2[stack2.length - 1].children.push(pop_arr);\r\n                    }\r\n                }\r\n                index += beforeSpaceLenght + afterSpaceLenght + tagNameLenght + endSpaceLenght + 3;\r\n            } else if (commentRegExp.test(rest)) {\r\n                // 识别注释\r\n                index += rest.match(commentRegExp)[0].length;\r\n            }\r\n            //wordRegExp.test(rest)   rest.match(wordRegExp) || rest.match(onlyWordRegExp)\r\n            else if (rest.match(wordRegExp) || rest.match(onlyWordRegExp)) {\r\n                //识别为文本节点 \r\n                // wordRegExp 匹配标签前面的字符，如果字符后面没有标签，匹配结果是null\r\n                //当wordRegExp匹配结果是null的时候说明再节点之后有一个裸文本标签（由onlyWordRegExp匹配）\r\n                //再处理之前我们要判断一下当前栈1是否为空，防止有标签没闭合的情况。\r\n                if (!rest.match(wordRegExp) && rest.match(onlyWordRegExp)) {\r\n                    //这里要处理一下可能标签没闭合 如:<div>123\r\n                    if (stack1.length !== 0) {\r\n                        let a = 111;\r\n                        throw new Error(stack1[stack1.length - 1] + '标签没闭合');\r\n                    }\r\n                }\r\n                // 这里要把裸字符串的情况与后面有标签的字符串（标签之间的字符串）分开处理\r\n                let word = rest.match(wordRegExp) ? rest.match(wordRegExp)[1] : rest.match(onlyWordRegExp)[1];\r\n\r\n                // 看word是不是全是空\r\n                if (!/^\\s+$/.test(word)) {\r\n                    // 不全是空\r\n                    // 改变栈顶元素\r\n                    // 编译一下看是否有双大括号表达式\r\n                    let expr = this.compileExpression(word);\r\n                    if (typeof expr === 'string') {\r\n                        // 返回的是字符串说明没有双大括号表达式，把属性放进textContent\r\n                        stack2[stack2.length - 1].children.push({ textContent: expr, tagName: 'text' });\r\n                    } else {\r\n                        // 返回的是数组说明是有双大括号表达式的，编译了之后放进expressions属性\r\n                        stack2[stack2.length - 1].children.push({ expressions: expr, tagName: 'text' });\r\n                    }\r\n                }\r\n                index += word.length;\r\n            } else {\r\n                // 这里处理一下只有纯文本的形式\r\n                index++;\r\n            }\r\n        }\r\n\r\n        return stack2[0].children;\r\n\r\n    }\r\n\r\n    /**\r\n     * 处理表达式串\r\n     * @param exprStr   含表达式的串\r\n     * @return          处理后的字符串和表达式数组\r\n     */\r\n    public static compileExpression(exprStr: string) {\r\n        if (/\\{\\{.+?\\}\\}/.test(exprStr) === false) {\r\n            return exprStr;\r\n        }\r\n        // \\}?\\s*\r\n        let reg: RegExp = /\\{\\{.+?\\}?\\s*\\}\\}/g;\r\n        let retA = new Array();\r\n        let re: RegExpExecArray;\r\n        let oIndex: number = 0;\r\n        while ((re = reg.exec(exprStr)) !== null) {\r\n            let ind = re.index;\r\n            //字符串\r\n            if (ind > oIndex) {\r\n                let s = exprStr.substring(oIndex, ind);\r\n                retA.push(s);\r\n            }\r\n            //实例化表达式对象\r\n            let exp = new Expression(re[0].substring(2, re[0].length - 2));\r\n            //加入工厂\r\n            retA.push(exp);\r\n            oIndex = ind + re[0].length;\r\n        }\r\n        //最后的字符串\r\n        if (oIndex < exprStr.length - 1) {\r\n            retA.push(exprStr.substr(oIndex));\r\n        }\r\n        return retA;\r\n    }\r\n\r\n\r\n}\r\n","import { Element } from \"./element\";\r\nimport { Model } from \"./model\";\r\nimport { Module } from \"./module\";\r\nimport { ModuleFactory } from \"./modulefactory\";\r\nimport { Util } from \"./util\";\r\n\r\n/**\r\n * 插件，插件为自定义元素方式实现\r\n */\r\nexport class DefineElement {\r\n    /**\r\n     * tag name\r\n     */\r\n    tagName: string;\r\n\r\n    /**\r\n     * 绑定的element\r\n     */\r\n    element: Element;\r\n\r\n    /**\r\n     * module id\r\n     */\r\n    moduleId: number;\r\n\r\n    /**\r\n     * model\r\n     */\r\n    model: Model;\r\n\r\n    /**\r\n     * 绑定的dom key\r\n     */\r\n    key: string;\r\n\r\n    /**\r\n     * 插件名，在module中唯一\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * 是否需要前置渲染\r\n     */\r\n    needPreRender: boolean;\r\n\r\n    /**\r\n     * 附加数据项名\r\n     */\r\n    extraDataName: string;\r\n\r\n    /**\r\n     * 需要改绑的model名\r\n     */\r\n    parentDataName: string;\r\n\r\n    constructor(params: HTMLElement | Object | Element) {\r\n        if (params instanceof Element) {\r\n            this.element = params;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 初始化 子类必须实现init方法\r\n     * @param dom       dom插件所属节点\r\n     * @param parent    父节点\r\n     */\r\n    public init(dom: Element, parent?: Element) { }\r\n\r\n    /**\r\n     * 前置渲染方法(dom render方法中获取modelId和parentKey后执行)\r\n     * @param uidom     虚拟dom\r\n     * @param  module    模块\r\n     */\r\n    public beforeRender(uidom: Element, module: Module) {\r\n        let me = uidom.defineEl;\r\n        me.element = uidom;\r\n        me.moduleId = module.id;\r\n        // 如果需要改绑model，则改绑model\r\n        if (me.parentDataName && me.parentDataName != '') {\r\n            uidom.model = uidom.model[me.parentDataName];\r\n        }\r\n        if (!me.model || uidom.key !== me.key) {\r\n            me.key = uidom.key;\r\n            // 插件默认把model绑定在根model上\r\n            me.model = uidom.model;\r\n            //添加到模块\r\n            if (uidom.hasProp('name')) {\r\n                // module.addNPlugin(uidom.getProp('name'),this);       \r\n                me.name = uidom.getProp('name');\r\n            }\r\n            me.needPreRender = true;\r\n        } else {\r\n            me.needPreRender = false;\r\n        }\r\n    }\r\n    /**\r\n     * 后置渲染方法(dom render结束后，渲染到html之前)\r\n     * @param module    模块\r\n     * @param uidom     虚拟dom\r\n     */\r\n    // public afterRender(uidom: Element, module: Module) { }\r\n\r\n    /**\r\n     * 克隆\r\n     */\r\n    public clone(dst?: Element) {\r\n        // return Reflect.construct(this.constructor, [dst]);\r\n        let plugin = Reflect.construct(this.constructor, []);\r\n        // // 不拷贝属性\r\n        let excludeProps: string[] = ['key', 'element', 'modelId', 'moduleId'];\r\n        Util.getOwnProps(this).forEach((prop) => {\r\n            if (excludeProps.includes(prop)) {\r\n                return;\r\n            }\r\n            plugin[prop] = Util.clone(this[prop]);\r\n        });\r\n        if (dst) {\r\n            plugin.element = dst;\r\n        }\r\n        return plugin;\r\n    }\r\n\r\n    /**\r\n     * 获取model\r\n     */\r\n    public getModel(): Model {\r\n        let module: Module = ModuleFactory.get(this.moduleId);\r\n        if (!module) {\r\n            return null;\r\n        }\r\n        return this.model || null;\r\n    }\r\n}\r\n","import { DefineElementManager } from \"../defineelementmanager\";\r\nimport { Directive } from \"../directive\";\r\nimport { Element } from \"../element\";\r\nimport { NError } from \"../error\";\r\nimport { NodomMessage } from \"../nodom\";\r\n\r\n/**\r\n * module 元素\r\n */\r\nDefineElementManager.add('NMODULE', {\r\n    init: function (element: Element, parent?: Element) {\r\n        //tagname 默认div\r\n        if (element.hasProp('tag')) {\r\n            element.tagName = element.getProp('tag');\r\n            element.delProp('tag');\r\n        } else {\r\n            element.tagName = 'div';\r\n        }\r\n        //类名\r\n        let clazz = element.getProp('classname');\r\n        if (!clazz) {\r\n            throw new NError('itemnotempty', NodomMessage.TipWords['element'], 'NMODULE', 'classname');\r\n        }\r\n        //模块名\r\n        let moduleName = element.getProp('name');\r\n        if (moduleName) {\r\n            clazz += '|' + moduleName;\r\n        }\r\n        new Directive('module', clazz, element, parent);\r\n\r\n    }\r\n});\r\n\r\n/**\r\n * for 元素\r\n */\r\nDefineElementManager.add('NFOR', {\r\n    init: function (element: Element, parent?: Element) {\r\n        //tagname 默认div\r\n        if (element.hasProp('tag')) {\r\n            element.tagName = element.getProp('tag');\r\n            element.delProp('tag');\r\n        } else {\r\n            element.tagName = 'div';\r\n        }\r\n        //条件\r\n        let cond = element.getProp('condition');\r\n        if (!cond) {\r\n            throw new NError('itemnotempty', NodomMessage.TipWords['element'], 'NFOR', 'condition');\r\n        }\r\n        new Directive('repeat', cond, element, parent);\r\n    }\r\n});\r\n\r\n/**\r\n * recur 元素\r\n */\r\nDefineElementManager.add('NRECUR', {\r\n    init: function (element: Element, parent?: Element) {\r\n        //tagname 默认div\r\n        if (element.hasProp('tag')) {\r\n            element.tagName = element.getProp('tag');\r\n            element.delProp('tag');\r\n        } else {\r\n            element.tagName = 'div';\r\n        }\r\n        //条件\r\n        let cond = element.getProp('condition');\r\n        if (!cond) {\r\n            throw new NError('itemnotempty', NodomMessage.TipWords['element'], 'NRECUR', 'condition');\r\n        }\r\n        new Directive('recur', cond, element, parent);\r\n    }\r\n});\r\n\r\n/**\r\n * if 元素\r\n */\r\nDefineElementManager.add('NIF', {\r\n    init: function (element: Element, parent?: Element) {\r\n        //tagname 默认div\r\n        if (element.hasProp('tag')) {\r\n            element.tagName = element.getProp('tag');\r\n            element.delProp('tag');\r\n        } else {\r\n            element.tagName = 'div';\r\n        }\r\n        //条件\r\n        let cond = element.getProp('condition');\r\n        if (!cond) {\r\n            throw new NError('itemnotempty', NodomMessage.TipWords['element'], 'NIF', 'condition');\r\n        }\r\n        new Directive('if', cond, element, parent);\r\n    }\r\n});\r\n\r\n/**\r\n * else 元素\r\n */\r\nDefineElementManager.add('NELSE', {\r\n    init: function (element: Element, parent?: Element) {\r\n        //tagname 默认div\r\n        if (element.hasProp('tag')) {\r\n            element.tagName = element.getProp('tag');\r\n            element.delProp('tag');\r\n        } else {\r\n            element.tagName = 'div';\r\n        }\r\n        new Directive('else', null, element, parent);\r\n    }\r\n});\r\n\r\n/**\r\n * elseif 元素\r\n */\r\nDefineElementManager.add('NELSEIF', {\r\n    init: function (element: Element, parent?: Element) {\r\n        //tagname 默认div\r\n        if (element.hasProp('tag')) {\r\n            element.tagName = element.getProp('tag');\r\n            element.delProp('tag');\r\n        } else {\r\n            element.tagName = 'div';\r\n        }\r\n        //条件\r\n        let cond = element.getProp('condition');\r\n        if (!cond) {\r\n            throw new NError('itemnotempty', NodomMessage.TipWords['element'], 'NELSEIF', 'condition');\r\n        }\r\n        new Directive('elseif', cond, element, parent);\r\n    }\r\n});\r\n\r\n/**\r\n * endif 元素\r\n */\r\nDefineElementManager.add('NENDIF', {\r\n    init: function (element: Element, parent?: Element) {\r\n        //tagname 默认div\r\n        if (element.hasProp('tag')) {\r\n            element.tagName = element.getProp('tag');\r\n            element.delProp('tag');\r\n        } else {\r\n            element.tagName = 'div';\r\n        }\r\n        new Directive('endif', null, element, parent);\r\n    }\r\n});\r\n\r\n/**\r\n * switch 元素\r\n */\r\nDefineElementManager.add('NSWITCH', {\r\n    init: function (element: Element, parent?: Element) {\r\n        //tagname 默认div\r\n        if (element.hasProp('tag')) {\r\n            element.tagName = element.getProp('tag');\r\n            element.delProp('tag');\r\n        } else {\r\n            element.tagName = 'div';\r\n        }\r\n        //条件\r\n        let cond = element.getProp('condition');\r\n        if (!cond) {\r\n            throw new NError('itemnotempty', NodomMessage.TipWords['element'], 'NSWITCH', 'condition');\r\n        }\r\n        new Directive('switch', cond, element, parent);\r\n    }\r\n});\r\n\r\n/**\r\n * case 元素\r\n */\r\nDefineElementManager.add('NCASE', {\r\n    init: function (element: Element, parent?: Element) {\r\n        //tagname 默认div\r\n        if (element.hasProp('tag')) {\r\n            element.tagName = element.getProp('tag');\r\n            element.delProp('tag');\r\n        } else {\r\n            element.tagName = 'div';\r\n        }\r\n        //条件\r\n        let cond = element.getProp('condition');\r\n        if (!cond) {\r\n            throw new NError('itemnotempty', NodomMessage.TipWords['element'], 'NCASE', 'condition');\r\n        }\r\n        new Directive('case', cond, element, parent);\r\n    }\r\n});\r\n\r\nDefineElementManager.add('SLOT', {\r\n    init: function (element: Element, parent?: Element) {\r\n        element.tagName = 'div';\r\n        if(element.hasProp('name'))\r\n        element.setTmpParam('slotName',element.getProp('name'));\r\n    }\r\n});\r\n","import { Directive } from \"../directive\";\r\nimport { DirectiveManager } from \"../directivemanager\";\r\nimport { Element } from \"../element\";\r\nimport { NError } from \"../error\";\r\nimport { NEvent } from \"../event\";\r\nimport { Expression } from \"../expression\";\r\nimport { Filter } from \"../filter\";\r\nimport { Model } from \"../model\";\r\nimport { Module } from \"../module\";\r\nimport { ModuleFactory } from \"../modulefactory\";\r\nimport { NodomMessage } from \"../nodom\";\r\nimport { Renderer } from \"../renderer\";\r\nimport { Router } from \"../router\";\r\nimport { Util } from \"../util\";\r\n\r\nexport default (function () {\r\n\r\n    /**\r\n     *  指令类型初始化\r\n     *  每个指令类型都有一个init和handle方法，init和handle都可选\r\n     *  init 方法在编译时执行，包含两个参数 directive(指令)、dom(虚拟dom)，无返回\r\n     *  handle方法在渲染时执行，包含四个参数 directive(指令)、dom(虚拟dom)、module(模块)、parent(父虚拟dom)\r\n     */\r\n\r\n    /**\r\n     * module 指令\r\n     * 用于指定该元素为模块容器，表示该模块的子模块\r\n     * 用法\r\n     *   x-module='moduleclass|modulename|dataurl'\r\n     *   moduleclass 为模块类名\r\n     *   modulename  为模块对象名，可选\r\n     * 可增加 data 属性，用于指定数据url\r\n     * 可增加 name 属性，用于设置模块name，如果x-module已设置，则无效\r\n     */\r\n    DirectiveManager.addType('module', 0,\r\n        (directive: Directive, dom: Element) => {\r\n            let value: string = <string>directive.value;\r\n            let valueArr: string[] = value.split('|');\r\n            directive.value = valueArr[0];\r\n            //设置dom role\r\n            dom.setProp('role', 'module');\r\n            //设置module name\r\n            if (valueArr.length > 1) {\r\n                dom.setProp('modulename', valueArr[1]);\r\n            }\r\n            directive.extra = {};\r\n        },\r\n\r\n        async (directive: Directive, dom: Element, module: Module, parent: Element) => {\r\n            const ext = directive.extra;\r\n            let needNew: boolean = ext.moduleId === undefined;\r\n            let subMdl: Module;\r\n            //没有moduleId或与容器key不一致，需要初始化模块\r\n            if (ext && ext.moduleId) {\r\n                subMdl = ModuleFactory.get(ext.moduleId);\r\n                needNew = subMdl.getContainerKey() !== dom.key;\r\n            }\r\n            if (needNew) {\r\n                let m: Module = await ModuleFactory.getInstance(directive.value, dom.getProp('modulename'), dom.getProp('data'));\r\n\r\n                if (m) {\r\n                    //保存绑定moduleid\r\n                    m.setContainerKey(dom.key);\r\n                    //修改virtualdom的module指令附加参数moduleId\r\n                    let dom1: Element = module.getElement(dom.key, true);\r\n                    if (dom1) {\r\n                        let dir: Directive = dom1.getDirective('module');\r\n                        dir.extra.moduleId = m.id;\r\n                    }\r\n                    module.addChild(m.id);\r\n                    //传props值\r\n                    m.props = Util.clone(dom.props);\r\n\r\n\r\n                    //插槽\r\n                    if (dom.children.length > 0) {\r\n                        let slotMap: Map<string, Element> = new Map();\r\n                        dom.children.forEach((v) => {\r\n                            if (v.hasProp('slotName')) {\r\n                                slotMap.set(v.getProp('slotName'), v.clone(true));\r\n                            }\r\n                        });\r\n                        //有指令\r\n                        if (slotMap.size > 0) {\r\n                            let oldMap = findSlot(m.virtualDom);\r\n                            //原模块\r\n                            oldMap.forEach(obj => {\r\n                                const { index, slotName, pd } = obj;\r\n\r\n                                if (slotMap.has(slotName)) {\r\n                                    pd.children.splice(index, 1, slotMap.get(slotName));\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n\r\n                    await m.active();\r\n                }\r\n            } else if (subMdl && subMdl.state !== 3) {\r\n                await subMdl.active();\r\n            }\r\n            function findSlot(dom: Element, res = new Array()) {\r\n                if (dom.hasTmpParam('slotName')) {\r\n                    res.push({\r\n                        index: dom.parent.children.indexOf(dom),\r\n                        slotName: dom.getTmpParam('slotName'),\r\n                        pd: dom.parent\r\n                    });\r\n                    return;\r\n                }\r\n                dom.children.forEach(v => {\r\n                    findSlot(v, res);\r\n                })\r\n                return res;\r\n            }\r\n        }\r\n    );\r\n\r\n\r\n    /**\r\n     *  model指令\r\n     */\r\n    DirectiveManager.addType('model',\r\n        1,\r\n        (directive: Directive, dom: Element) => {\r\n            let value: string = <string>directive.value;\r\n            //处理以.分割的字段，没有就是一个\r\n            if (Util.isString(value)) {\r\n                // //从根数据获取\r\n                // if(value.startsWith('$$')){\r\n                //     directive.extra = 1;\r\n                //     value = value.substr(2);\r\n                // }\r\n                directive.value = value;\r\n            }\r\n        },\r\n\r\n        (directive: Directive, dom: Element, module: Module, parent: Element) => {\r\n            let model: Model = dom.model;\r\n            if (directive.value == '$$') {\r\n                model = module.model;\r\n            } else {\r\n                model = model.$query(directive.value);\r\n            }\r\n            if (!model) {\r\n                model = module.model.$query(directive.value);\r\n            }\r\n            if (model) {\r\n                dom.model = model;\r\n            }\r\n        }\r\n    );\r\n\r\n    /**\r\n     * 指令名 repeat\r\n     * 描述：重复指令\r\n     */\r\n    DirectiveManager.addType('repeat',\r\n        2,\r\n        (directive: Directive, dom: Element) => {\r\n            let value = directive.value;\r\n            if (!value) {\r\n                throw new NError(\"paramException\", \"x-repeat\");\r\n            }\r\n\r\n            let modelName: string;\r\n            let fa: string[] = value.split('|');\r\n            modelName = fa[0];\r\n            //有过滤器\r\n            if (fa.length > 1) {\r\n                directive.filters = [];\r\n                for (let i = 1; i < fa.length; i++) {\r\n                    directive.filters.push(new Filter(fa[i]));\r\n                }\r\n            }\r\n            // //模块全局数据\r\n            // if(modelName.startsWith('$$')){\r\n            //     modelName = modelName.substr(2);\r\n            // }\r\n            directive.value = modelName;\r\n        },\r\n        (directive: Directive, dom: Element, module: Module, parent: Element) => {\r\n            let model = dom.model;\r\n\r\n            //可能数据不存在，先设置dontrender\r\n            dom.dontRender = true;\r\n            if (!model) {\r\n                return;\r\n            }\r\n            //得到rows数组的model\r\n            let rows = model.$query(directive.value);\r\n\r\n            // 无数据，不渲染\r\n            if (!Util.isArray(rows) || rows.length === 0) {\r\n                return;\r\n            }\r\n            dom.dontRender = false;\r\n            //有过滤器，处理数据集合\r\n            if (directive.filters && directive.filters.length > 0) {\r\n                for (let f of directive.filters) {\r\n                    rows = f.exec(rows, module);\r\n                }\r\n            }\r\n            let chds = [];\r\n            let key = dom.key;\r\n\r\n            // 移除指令\r\n            dom.removeDirectives(['repeat']);\r\n            for (let i = 0; i < rows.length; i++) {\r\n                let node = dom.clone();\r\n                //设置modelId\r\n                node.model = rows[i];\r\n                //设置key\r\n                if (rows[i].$key) {\r\n                    setKey(node, key, rows[i].$key);\r\n                }\r\n                else {\r\n                    setKey(node, key, Util.genId());\r\n                }\r\n                rows[i].$index = i;\r\n                chds.push(node);\r\n            }\r\n\r\n            //找到并追加到dom后\r\n            if (chds.length > 0) {\r\n                for (let i = 0, len = parent.children.length; i < len; i++) {\r\n                    if (parent.children[i] === dom) {\r\n                        chds = [i + 1, 0].concat(chds);\r\n                        Array.prototype.splice.apply(parent.children, chds);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            // 不渲染该节点\r\n            dom.dontRender = true;\r\n\r\n            function setKey(node, key, id) {\r\n                node.key = key + '_' + id;\r\n                node.children.forEach((dom) => {\r\n                    setKey(dom, dom.key, id);\r\n                });\r\n            }\r\n        }\r\n    );\r\n\r\n    /**\r\n     * 递归指令\r\n     * 作用：在dom内部递归，即根据数据层复制节点作为前一层的子节点\r\n     * 数据格式：\r\n     * data:{\r\n     *     recurItem:{\r\n    *          title:'第一层',\r\n    *          recurItem:{\r\n    *              title:'第二层',\r\n    *              recurItem:{...}\r\n    *          }\r\n    *      }\r\n     * }\r\n     * 模版格式：\r\n     * <div x-recursion='items'><span>{{title}}</span></div>\r\n     */\r\n    DirectiveManager.addType('recur',\r\n        3,\r\n        (directive: Directive, dom: Element, parent: Element) => {\r\n        },\r\n        (directive: Directive, dom: Element, module: Module, parent: Element) => {\r\n            let model = dom.model;\r\n            if (!model) {\r\n                return;\r\n            }\r\n            let data = model[directive.value];\r\n            // 渲染时，去掉model指令，避免被递归节点使用\r\n            dom.removeDirectives('model');\r\n\r\n            //处理内部递归节点\r\n            if (data) {\r\n                if (Array.isArray(data)) { //为数组，则遍历生成多个节点\r\n                    // 先克隆一个用作基本节点，避免在循环中为基本节点增加子节点\r\n                    let node: Element = dom.clone(true);\r\n                    for (let d of data) {\r\n                        let nod: Element = node.clone(true);\r\n                        nod.model = d;\r\n                        //作为当前节点子节点\r\n                        dom.add(nod);\r\n                    }\r\n                } else {\r\n                    let node: Element = dom.clone(true);\r\n                    node.model = data;\r\n                    //作为当前节点子节点\r\n                    dom.add(node);\r\n                }\r\n            }\r\n        }\r\n    );\r\n\r\n    /**\r\n     * 指令名 if\r\n     * 描述：条件指令\r\n     */\r\n    DirectiveManager.addType('if',\r\n        10,\r\n        (directive: Directive, dom: Element, parent: Element) => {\r\n            let value = directive.value;\r\n            if (!value) {\r\n                throw new NError(\"paramException\", \"x-if\");\r\n            }\r\n            //value为一个表达式\r\n            let expr = new Expression(value);\r\n            directive.value = expr;\r\n            //设置if组\r\n            directive.extra = {\r\n                groups: [dom]\r\n            }\r\n            if (!parent) {\r\n                return;\r\n            }\r\n            parent.setTmpParam('ifnode', dom);\r\n        },\r\n        (directive: Directive, dom: Element, module: Module, parent: Element) => {\r\n            dom.dontRender = true;\r\n            let target: number = -1;\r\n\r\n            for (let i = 0; i < directive.extra.groups.length; i++) {\r\n                let node = directive.extra.groups[i];\r\n                let dir = node.getDirective('if') || node.getDirective('elseif') || node.getDirective('else');\r\n                if (dir.value) { //if elseif指令\r\n                    let v = dir.value.val(dom.model, dom);\r\n\r\n                    if (v && v !== 'false') {\r\n                        target = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            let tNode;\r\n            if (target === 0) { //if 节点\r\n                dom.dontRender = false;\r\n            } else if (target > 0) { //elseif 节点\r\n                tNode = directive.extra.groups[target];\r\n            } else if (directive.extra.groups.length > 1) {  //else 节点\r\n                tNode = directive.extra.groups[directive.extra.groups.length - 1];\r\n            }\r\n            if (tNode) {\r\n                //添加到指定位置\r\n                let index = parent.children.indexOf(dom);\r\n                if (index !== -1) {\r\n                    parent.children.splice(index + 1, 0, tNode);\r\n                }\r\n            }\r\n\r\n        }\r\n    );\r\n\r\n    /**\r\n     * 指令名 else\r\n     * 描述：else指令\r\n     */\r\n    DirectiveManager.addType('else',\r\n        10,\r\n        (directive: Directive, dom: Element, parent: Element) => {\r\n            if (!parent) {\r\n                return;\r\n            }\r\n            let ifNode = parent.getTmpParam('ifnode');\r\n            if (ifNode) {\r\n                let dir = ifNode.getDirective('if');\r\n                dir.extra.groups.push(dom);\r\n                parent.removeChild(dom);\r\n            }\r\n        },\r\n        (directive: Directive, dom: Element, module: Module, parent: Element) => {\r\n            return;\r\n        }\r\n    );\r\n\r\n    /**\r\n     * elseif 指令\r\n     */\r\n    DirectiveManager.addType('elseif', 10,\r\n        (directive: Directive, dom: Element, parent: Element) => {\r\n            let value = directive.value;\r\n            if (!value) {\r\n                throw new NError(\"paramException\", \"x-elseif\");\r\n            }\r\n            //value为一个表达式\r\n            let expr = new Expression(value);\r\n            directive.value = expr;\r\n            if (!parent) {\r\n                return;\r\n            }\r\n            let ifNode = parent.getTmpParam('ifnode');\r\n            if (ifNode) {\r\n                let dir = ifNode.getDirective('if');\r\n                dir.extra.groups.push(dom);\r\n                parent.removeChild(dom);\r\n            }\r\n        },\r\n        (directive: Directive, dom: Element, module: Module, parent: Element) => {\r\n\r\n        }\r\n    );\r\n\r\n    /**\r\n     * endif 指令\r\n     */\r\n    DirectiveManager.addType('endif', 10,\r\n        (directive: Directive, dom: Element, parent: Element) => {\r\n            if (!parent) {\r\n                return;\r\n            }\r\n            let ifNode = parent.getTmpParam('ifnode');\r\n            if (ifNode) {\r\n                parent.removeChild(dom);\r\n                //移除ifnode临时参数\r\n                parent.removeTmpParam('ifnode');\r\n            }\r\n        },\r\n        (directive: Directive, dom: Element, module: Module, parent: Element) => {\r\n\r\n        }\r\n    );\r\n    /**\r\n     * switch指令\r\n     */\r\n    DirectiveManager.addType('switch',\r\n        10,\r\n        (directive: Directive, dom: Element) => {\r\n            let value = directive.value;\r\n            if (!value) {\r\n                throw new NError(\"paramException\", \"x-switch\");\r\n            }\r\n        },\r\n        (directive: Directive, dom: Element, module: Module, parent: Element) => {\r\n            let hasTrue: boolean = false;\r\n            for (let node of dom.children) {\r\n                node.dontRender = true;\r\n                let dir = node.getDirective('case');\r\n                //已经出现为true的node，不用再计算条件值\r\n                if (hasTrue) {\r\n                    node.dontRender = true;\r\n                    continue;\r\n                }\r\n                let v = dir.value.val(dom.model, dom);\r\n                hasTrue = v && v !== 'false';\r\n                node.dontRender = !hasTrue;\r\n            }\r\n        }\r\n    );\r\n\r\n\r\n    /**\r\n     *  case 指令\r\n     */\r\n    DirectiveManager.addType('case',\r\n        10,\r\n        (directive: Directive, dom: Element, parent: Element) => {\r\n            if (!directive.value) {\r\n                throw new NError(\"paramException\", \"x-case\");\r\n            }\r\n            if (!parent) {\r\n                return;\r\n            }\r\n            let dir = parent.getDirective('switch');\r\n\r\n            //组合 switch 变量=case值\r\n            let value = dir.value + ' == \"' + directive.value + '\"';\r\n            let expr = new Expression(value);\r\n            directive.value = expr;\r\n        },\r\n        (directive: Directive, dom: Element, module: Module, parent: Element) => {\r\n            return;\r\n        }\r\n    );\r\n    /**\r\n     * 指令名 show\r\n     * 描述：显示指令\r\n     */\r\n    DirectiveManager.addType('show',\r\n        10,\r\n        (directive: Directive, dom: Element) => {\r\n            if (typeof directive.value === 'string') {\r\n                let value = directive.value;\r\n                if (!value) {\r\n                    throw new NError(\"paramException\", \"x-show\");\r\n                }\r\n                let expr = new Expression(value);\r\n                directive.value = expr;\r\n            }\r\n        },\r\n        (directive: Directive, dom: Element, module: Module, parent: Element) => {\r\n            let model = dom.model;\r\n            let v = directive.value.val(model, dom);\r\n            //渲染\r\n            if (v && v !== 'false') {\r\n                dom.dontRender = false;\r\n            } else { //不渲染\r\n                dom.dontRender = true;\r\n            }\r\n        }\r\n    );\r\n    /**\r\n     * 指令名 \r\n     * 描述：显示指令\r\n     */\r\n    DirectiveManager.addType('animation',\r\n        9,\r\n        (directive: Directive, dom: Element) => {\r\n            let arr = directive.value.trim().split('|');\r\n            let privateName = ['fade', 'scale-fixtop', 'scale-fixleft', 'scale-fixbottom', 'scale-fixright', 'scale-fixcenterX', 'scale-fixcenterY']\r\n            if (privateName.includes(arr[0].trim())) {\r\n                arr[0] = arr[0].trim();\r\n            } else {\r\n                arr[0] = new Expression(arr[0].trim());\r\n            }\r\n            // 渲染标志\r\n            if (arr[1]) {\r\n                arr[1] = new Expression(arr[1].trim());\r\n            } else {\r\n                // 如果没有传入渲染标志，则说明只需要在元素渲染的时候启用动画。直接吧渲染标志设置成true\r\n                arr[1] = true;\r\n            }\r\n            directive.value = arr;\r\n        },\r\n        (directive: Directive, dom: Element, module: Module, parent: Element) => {\r\n            let arr = directive.value;\r\n            let clsArr: Array<string> = [];\r\n            let cls: string = dom.getProp('class');\r\n            let model = dom.model;\r\n            if (Util.isString(cls) && !Util.isEmpty(cls)) {\r\n                clsArr = cls.trim().split(/\\s+/);\r\n            }\r\n\r\n            let confObj = arr[0];\r\n            if (arr[0] instanceof Expression) {\r\n                confObj = confObj.val(model, dom);\r\n            } else {\r\n                confObj = {\r\n                    name: confObj\r\n                }\r\n            }\r\n\r\n            if (!Util.isObject(confObj)) {\r\n                return new NError('未找到animation配置对象');\r\n            }\r\n            let renderFlag = arr[1];\r\n            let nameEnter = confObj.name?.enter || confObj.name;\r\n            let nameLeave = confObj.name?.leave || confObj.name;\r\n            let hiddenMode = confObj.hiddenMode || 'visibility';\r\n            let durationEnter = confObj.duration?.enter || '0.3s';\r\n            let durationLeave = confObj.duration?.leave || '0.3s';\r\n            let delayEnter = confObj.delay?.enter || '0s'; // 如果不配置则默认不延迟\r\n            let delayLeave = confObj.delay?.leave || '0s';// 如果不配置则默认不延迟\r\n            if (renderFlag instanceof Expression) {\r\n                renderFlag = renderFlag.val(model, dom);\r\n            }\r\n            let el: HTMLElement = document.querySelector(`[key='${dom.key}']`)\r\n            // 定义动画结束回调。\r\n            let handler = () => {\r\n                // 离开动画结束之后隐藏元素\r\n                if (!renderFlag || renderFlag === 'false') {\r\n                    if (hiddenMode && hiddenMode == 'visibility') {\r\n                        el.style.visibility = 'hidden';\r\n                    } else {\r\n                        el.style.display = 'none';\r\n                    }\r\n                }\r\n                el.classList.remove(\"nd-animation-\" + nameEnter + \"-enter\");\r\n                el.classList.remove(\"nd-animation-\" + nameLeave + \"-leave\");\r\n                el.removeEventListener('animationend', handler);\r\n            }\r\n            if (!renderFlag || renderFlag === 'false') {\r\n                // 从显示切换到隐藏。\r\n                if (el) {\r\n                    if (el.style.visibility == 'hidden' || el.style.display == 'none') {\r\n                        // 当前处于隐藏，没有必要播放动画\r\n                        if (hiddenMode && hiddenMode == 'visibility') {\r\n                            el.style.visibility = 'hidden';\r\n                            dom.addStyle('visibility:hidden');\r\n                        } else {\r\n                            el.style.display = 'none';\r\n                            dom.addStyle('display:none');\r\n                        }\r\n                        return;\r\n                    }\r\n                    // 为了触发动画\r\n                    //  1. 删除原来的动画属性\r\n                    el.classList.remove(\"nd-animation-\" + nameEnter + \"-enter\");\r\n                    // 操作了真实dom，虚拟dom也要做相应的变化，否则可能导致第二次渲染属性不一致\r\n                    dom.removeClass(\"nd-animation-\" + nameEnter + \"-enter\");\r\n                    //  2.重新定位一次元素。 本来是el.offsetWidth=el.offsetWidth的\r\n                    //    下面是严格模式下的替代方案\r\n                    void el.offsetWidth\r\n                    // 控制播放时间\r\n                    el.style.animationDuration = durationLeave;\r\n                    el.style.animationDelay = delayLeave;\r\n                    dom.addStyle(`animation-duration:${durationEnter};animation-delay:${delayEnter}`);\r\n                    //  3.添加新的动画\r\n                    el.classList.add(\"nd-animation-\" + nameLeave + \"-leave\");\r\n                    // 操作了真实dom，虚拟dom也要做相应的变化，否则可能导致第二次渲染属性不一致\r\n                    dom.addClass(\"nd-animation-\" + nameLeave + \"-leave\");\r\n                    // 添加动画结束监听\r\n                    el.addEventListener('animationend', handler);\r\n                } else {\r\n                    // 不显示，并且也没有el 比如poptip\r\n                    if (hiddenMode && hiddenMode == 'visibility') {\r\n                        dom.addStyle(\"visibility:hidden\");\r\n                    } else {\r\n                        dom.addStyle(\"display:none\");\r\n                    }\r\n                    dom.dontRender = false;\r\n                }\r\n            } else {\r\n                // 从隐藏切换到显示\r\n                if (el) {\r\n                    if (el.style.visibility == 'hidden' || el.style.display == 'none') {\r\n                        // 当前处于隐藏\r\n                        // 手动设置延时\r\n                        let delay = parseFloat(delayEnter) * 1000;\r\n                        // 因为下面是异步执行,所有这一次不能让元素先展示出来\r\n                        if (hiddenMode && hiddenMode == 'visibility') {\r\n                            el.style.visibility = 'hidden';\r\n                            dom.addStyle('visibility:hidden');\r\n                        } else {\r\n                            el.style.display = 'none';\r\n                            dom.addStyle('display:none');\r\n                        }\r\n                        // 进入动画要手动设置延时.否则通过animation-delay属性会先显示元素,然后计算延时,然后再播放动画.\r\n                        setTimeout(() => {\r\n                            // 先切换成显示状态,再触发动画\r\n                            if (hiddenMode && hiddenMode == 'visibility') {\r\n                                el.style.visibility = 'visible';\r\n                            } else {\r\n                                el.style.display = '';\r\n                            }\r\n                            //  1. 删除原来的动画属性\r\n                            el.classList.remove(\"nd-animation-\" + nameLeave + \"-leave\");\r\n                            // 操作了真实dom，虚拟dom也要做相应的变化，否则可能导致第二次渲染属性不一致\r\n                            dom.removeClass(\"nd-animation-\" + nameLeave + \"-leave\");\r\n                            //  2.重新定位一次元素。 本来是el.offsetWidth=el.offsetWidth的\r\n                            //    下面是严格模式下的替代方案\r\n                            void el.offsetWidth\r\n                            // 控制播放时间\r\n                            el.style.animationDuration = durationEnter;\r\n                            // 动画延时播放时间\r\n                            el.style.animationDelay = \"0s\";\r\n                            dom.addStyle(`animation-duration:${durationEnter};animation-delay:0s`);//\r\n                            //  3.添加新的动画\r\n                            el.classList.add(\"nd-animation-\" + nameEnter + \"-enter\");\r\n                            // 操作了真实dom，虚拟dom也要做相应的变化，否则可能导致第二次渲染属性不一致\r\n                            dom.addClass('nd-animation-' + nameEnter + '-enter');\r\n                            // 添加动画结束监听\r\n                            el.addEventListener('animationend', handler);\r\n                        }, delay);\r\n\r\n                    } else {\r\n                        // 当前处于显示状态 \r\n                        // 为了不重复播放显示动画，这里直接返回\r\n                        dom.addClass('nd-animation-' + nameEnter + '-enter');\r\n                        return;\r\n                    }\r\n                } else {\r\n                    dom.addClass('nd-animation-' + nameEnter + '-enter');\r\n                    dom.dontRender = false;\r\n                }\r\n            }\r\n        }\r\n    );\r\n\r\n    /**\r\n     * 指令名 class\r\n     * 描述：class指令\r\n     */\r\n    DirectiveManager.addType('class',\r\n        10,\r\n        (directive: Directive, dom: Element) => {\r\n            if (typeof directive.value === 'string') {\r\n                //转换为json数据\r\n                // let obj = eval('(' + directive.value + ')');\r\n                let obj = new Function('return ' + directive.value)();\r\n                if (!Util.isObject(obj)) {\r\n                    return;\r\n                }\r\n                let robj = {};\r\n                Util.getOwnProps(obj).forEach(function (key) {\r\n                    if (Util.isString(obj[key])) {\r\n                        //如果是字符串，转换为表达式\r\n                        robj[key] = new Expression(obj[key]);\r\n                    } else {\r\n                        robj[key] = obj[key];\r\n                    }\r\n                });\r\n                directive.value = robj;\r\n            }\r\n        },\r\n        (directive: Directive, dom: Element, module: Module, parent: Element) => {\r\n            let obj = directive.value;\r\n            let clsArr: Array<string> = [];\r\n            let cls: string = dom.getProp('class');\r\n            let model = dom.model;\r\n\r\n            if (Util.isString(cls) && !Util.isEmpty(cls)) {\r\n                clsArr = cls.trim().split(/\\s+/);\r\n            }\r\n\r\n            Util.getOwnProps(obj).forEach(function (key) {\r\n                let r = obj[key];\r\n                if (r instanceof Expression) {\r\n                    r = r.val(model, dom);\r\n                }\r\n                let ind = clsArr.indexOf(key);\r\n                if (!r || r === 'false') {\r\n                    //移除class\r\n                    if (ind !== -1) {\r\n                        clsArr.splice(ind, 1);\r\n                    }\r\n                } else if (ind === -1) { //添加class\r\n                    clsArr.push(key);\r\n                }\r\n            });\r\n            //刷新dom的class\r\n            dom.setProp('class', clsArr.join(' '));\r\n        }\r\n    );\r\n\r\n    /**\r\n     * 指令名 field\r\n     * 描述：字段指令\r\n     */\r\n    DirectiveManager.addType('field',\r\n        10,\r\n        (directive: Directive, dom: Element) => {\r\n            dom.setProp('name', directive.value);\r\n            //默认text\r\n            let type = dom.getProp('type') || 'text';\r\n            let eventName = dom.tagName === 'input' && ['text', 'checkbox', 'radio'].includes(type) ? 'input' : 'change';\r\n            //增加value表达式\r\n            if (!dom.hasProp('value') && ['text', 'number', 'date', 'datetime', 'datetime-local', 'month', 'week', 'time', 'email', 'password', 'search', 'tel', 'url', 'color', 'radio'].includes(type)\r\n                || dom.tagName === 'TEXTAREA') {\r\n                dom.setProp('value', new Expression(directive.value), true);\r\n            }\r\n\r\n            dom.addEvent(new NEvent(eventName,\r\n                function (dom, module, e, el) {\r\n                    if (!el) {\r\n                        return;\r\n                    }\r\n                    let type = dom.getProp('type');\r\n                    let field = dom.getDirective('field').value;\r\n                    let v = el.value;\r\n                    //根据选中状态设置checkbox的value\r\n                    if (type === 'checkbox') {\r\n                        if (dom.getProp('yes-value') == v) {\r\n                            v = dom.getProp('no-value');\r\n                        } else {\r\n                            v = dom.getProp('yes-value');\r\n                        }\r\n                    } else if (type === 'radio') {\r\n                        if (!el.checked) {\r\n                            v = undefined;\r\n                        }\r\n                    }\r\n                    //修改字段值,需要处理.运算符\r\n                    let temp = this;\r\n                    let arr = field.split('.')\r\n                    if (arr.length === 1) {\r\n                        this[field] = v;\r\n                    } else {\r\n                        for (let i = 0; i < arr.length - 1; i++) {\r\n                            temp = temp[arr[i]];\r\n                        }\r\n                        temp[arr[arr.length - 1]] = v;\r\n                    }\r\n                    //修改value值，该节点不重新渲染\r\n                    if (type !== 'radio') {\r\n                        dom.setProp('value', v);\r\n                        el.value = v;\r\n                    }\r\n                }\r\n            ));\r\n        },\r\n\r\n        (directive: Directive, dom: Element, module: Module, parent: Element) => {\r\n            const type: string = dom.getProp('type');\r\n            const tgname = dom.tagName.toLowerCase();\r\n            const model = dom.model;\r\n            if (!model) {\r\n                return;\r\n            }\r\n\r\n            let dataValue = model.$query(directive.value);\r\n            //变为字符串\r\n            if (dataValue !== undefined && dataValue !== null) {\r\n                dataValue += '';\r\n            }\r\n            //无法获取虚拟dom的value，只能从对应的element获取\r\n            let el: any = module.getNode(dom.key);\r\n            let value = el ? el.value : undefined;\r\n\r\n            if (type === 'radio') {\r\n                if (dataValue + '' === value) {\r\n                    dom.assets.set('checked', true);\r\n                    dom.setProp('checked', 'checked');\r\n                } else {\r\n                    dom.assets.set('checked', false);\r\n                    dom.delProp('checked');\r\n                }\r\n            } else if (type === 'checkbox') {\r\n                //设置状态和value\r\n                let yv = dom.getProp('yes-value');\r\n                //当前值为yes-value\r\n                if (dataValue + '' === yv) {\r\n                    dom.setProp('value', yv);\r\n                    dom.assets.set('checked', true);\r\n                } else { //当前值为no-value\r\n                    dom.setProp('value', dom.getProp('no-value'));\r\n                    dom.assets.set('checked', false);\r\n                }\r\n            } else if (tgname === 'select') { //下拉框\r\n                if (!directive.extra || !directive.extra.inited) {\r\n                    setTimeout(() => {\r\n                        directive.extra = { inited: true };\r\n                        dom.setProp('value', dataValue);\r\n                        dom.setAsset('value', dataValue);\r\n                        Renderer.add(module);\r\n                    }, 0);\r\n                } else {\r\n                    if (dataValue !== value) {\r\n                        dom.setProp('value', dataValue);\r\n                        dom.setAsset('value', dataValue);\r\n                    }\r\n                }\r\n            } else {\r\n                dom.assets.set('value', dataValue === undefined || dataValue === null ? '' : dataValue);\r\n            }\r\n        }\r\n    );\r\n\r\n    /**\r\n     * 指令名 validity\r\n     * 描述：字段指令\r\n     */\r\n    DirectiveManager.addType('validity',\r\n        10,\r\n        (directive: Directive, dom: Element) => {\r\n            let ind, fn, method;\r\n            let value = directive.value;\r\n            //处理带自定义校验方法\r\n            if ((ind = value.indexOf('|')) !== -1) {\r\n                fn = value.substr(0, ind);\r\n                method = value.substr(ind + 1);\r\n            } else {\r\n                fn = value;\r\n            }\r\n            directive.extra = { initEvent: false };\r\n            directive.value = fn;\r\n\r\n            directive.params = {\r\n                enabled: false //不可用\r\n            }\r\n            //如果有方法，则需要存储\r\n            if (method) {\r\n                directive.params.method = method;\r\n            }\r\n            //如果没有子节点，添加一个，需要延迟执行\r\n            if (dom.children.length === 0) {\r\n                let vd1 = new Element();\r\n                vd1.textContent = '';\r\n                dom.add(vd1);\r\n            } else { //子节点\r\n                dom.children.forEach((item) => {\r\n                    if (item.children.length === 0) {\r\n                        let vd1 = new Element();\r\n                        vd1.textContent = '   ';\r\n                        item.add(vd1);\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        (directive: Directive, dom: Element, module: Module, parent: Element) => {\r\n            setTimeout(() => {\r\n                const el: HTMLInputElement = <HTMLInputElement>module.getNode({ name: directive.value });\r\n                if (!directive.extra.initEvent) {\r\n                    directive.extra.initEvent = true;\r\n                    //添加focus和blur事件\r\n                    el.addEventListener('focus', function () {\r\n                        setTimeout(() => { directive.params.enabled = true; }, 0);\r\n                    });\r\n                    el.addEventListener('blur', function () {\r\n                        Renderer.add(module);\r\n                    });\r\n                }\r\n            }, 0);\r\n\r\n            //未获取focus，不需要校验\r\n            if (!directive.params.enabled) {\r\n                dom.dontRender = true;\r\n                return;\r\n            }\r\n\r\n            const el: HTMLInputElement = <HTMLInputElement>module.getNode({ name: directive.value });\r\n            if (!el) {\r\n                return;\r\n            }\r\n\r\n            let chds = [];\r\n            //找到带rel的节点\r\n            dom.children.forEach((item) => {\r\n                if (item.tagName !== undefined && item.hasProp('rel')) {\r\n                    chds.push(item);\r\n                }\r\n            });\r\n\r\n            let resultArr = [];\r\n\r\n            //自定义方法校验\r\n            if (directive.params.method) {\r\n                const foo = module.getMethod(directive.params.method);\r\n                if (Util.isFunction(foo)) {\r\n                    let r = foo.call(module.model, el.value);\r\n                    if (!r) {\r\n                        resultArr.push('custom');\r\n                    }\r\n                }\r\n            }\r\n\r\n            let vld = el.validity;\r\n\r\n            if (!vld.valid) {\r\n                // 查找校验异常属性\r\n                for (var o in vld) {\r\n                    if (vld[o] === true) {\r\n                        resultArr.push(o);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (resultArr.length > 0) {\r\n                //转换成ref对应值\r\n                let vn = handle(resultArr);\r\n                //单个校验\r\n                if (chds.length === 0) {\r\n                    setTip(dom, vn, el);\r\n                } else { //多个校验\r\n                    for (let i = 0; i < chds.length; i++) {\r\n                        let rel = chds[i].getProp('rel');\r\n                        if (rel === vn) {\r\n                            setTip(chds[i], vn, el);\r\n                        } else { //隐藏\r\n                            chds[i].dontRender = true;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                dom.dontRender = true;\r\n            }\r\n\r\n            /**\r\n             * 设置提示\r\n             * @param vd    虚拟dom节点\r\n             * @param vn    验证结果名\r\n             * @param el    验证html element\r\n             */\r\n            function setTip(vd: Element, vn: string, el?: HTMLElement) {\r\n                //子节点不存在，添加一个\r\n                let text = (<string>vd.children[0].textContent).trim();\r\n                if (text === '') { //没有提示内容，根据类型提示\r\n                    text = Util.compileStr(NodomMessage.FormMsgs[vn], el.getAttribute(vn));\r\n                }\r\n                vd.children[0].textContent = text;\r\n            }\r\n\r\n            /**\r\n             * 验证名转换\r\n             */\r\n            function handle(arr: Array<string>) {\r\n                for (var i = 0; i < arr.length; i++) {\r\n                    switch (arr[i]) {\r\n                        case 'valueMissing':\r\n                            return 'required';\r\n                        case 'typeMismatch':\r\n                            return 'type';\r\n                        case 'tooLong':\r\n                            return 'maxLength';\r\n                        case 'tooShort':\r\n                            return 'minLength';\r\n                        case 'rangeUnderflow':\r\n                            return 'min';\r\n                        case 'rangeOverflow':\r\n                            return 'max';\r\n                        case 'patternMismatch':\r\n                            return 'pattern';\r\n                        default:\r\n                            return arr[i];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    );\r\n\r\n    /**\r\n     * 增加route指令\r\n     */\r\n    DirectiveManager.addType('route',\r\n        10,\r\n        (directive: Directive, dom: Element) => {\r\n            let value = directive.value;\r\n            if (Util.isEmpty(value)) {\r\n                return;\r\n            }\r\n\r\n            //a标签需要设置href\r\n            if (dom.tagName === 'A') {\r\n                dom.setProp('href', 'javascript:void(0)');\r\n            }\r\n            // 表达式处理\r\n            if (typeof value === 'string' && /^\\{\\{.+\\}\\}$/.test(value)) {\r\n                value = new Expression(value.substring(2, value.length - 2));\r\n            }\r\n\r\n            //表达式，则需要设置为exprProp\r\n            if (value instanceof Expression) {\r\n                dom.setProp('path', value, true);\r\n                directive.value = value;\r\n            } else {\r\n                dom.setProp('path', value);\r\n            }\r\n            //处理active 属性\r\n            if (dom.hasProp('activename')) {\r\n                let an = dom.getProp('activename');\r\n                dom.setProp('active', new Expression(an), true);\r\n                if (dom.hasProp('activeclass')) {\r\n                    new Directive('class', \"{\" + dom.getProp('activeclass') + \":'\" + an + \"'}\", dom);\r\n                }\r\n            }\r\n\r\n            //添加click事件\r\n            dom.addEvent(new NEvent('click',\r\n                (dom, module, e) => {\r\n                    let path: string = dom.getProp('path');\r\n                    if (Util.isEmpty(path)) {\r\n                        return;\r\n                    }\r\n                    Router.go(path);\r\n                }\r\n            ));\r\n        },\r\n\r\n        (directive: Directive, dom: Element, module: Module, parent: Element) => {\r\n            let path: string = dom.getProp('path');\r\n            //添加到router的activeDomMap\r\n            let domArr: string[] = Router.activeDomMap.get(module.id);\r\n            if (!domArr) {\r\n                Router.activeDomMap.set(module.id, [dom.key]);\r\n            } else {\r\n                if (!domArr.includes(dom.key)) {\r\n                    domArr.push(dom.key);\r\n                }\r\n            }\r\n            if (!path || path === Router.currentPath) {\r\n                return;\r\n            }\r\n            //active需要跳转路由（当前路由为该路径对应的父路由）\r\n            if (dom.hasProp('active') && dom.getProp('active') && (!Router.currentPath || path.indexOf(Router.currentPath) === 0)) {\r\n                //可能router尚未渲染出来\r\n                setTimeout(() => { Router.go(path) }, 0);\r\n            }\r\n        }\r\n    );\r\n\r\n    /**\r\n     * 增加router指令\r\n     */\r\n    DirectiveManager.addType('router',\r\n        10,\r\n        (directive, dom) => {\r\n            //修改节点role\r\n            dom.setProp('role', 'module');\r\n        },\r\n        (directive, dom, module, parent) => {\r\n            Router.routerKeyMap.set(module.id, dom.key);\r\n        }\r\n    );\r\n\r\n    /**\r\n     * 增加ignore指令\r\n     * 只渲染子节点到dom树\r\n     */\r\n    DirectiveManager.addType('ignoreself',\r\n        10,\r\n        (directive, dom) => {\r\n            dom.dontRenderSelf = true;\r\n        },\r\n        (directive, dom, module, parent) => {\r\n\r\n        }\r\n    );\r\n\r\n    /**\r\n     * 粘指令，粘在前一个dom节点上，如果前一个节点repeat了多个分身，则每个分身都粘上\r\n     * 如果未指定model，则用被粘节点的model\r\n     */\r\n    DirectiveManager.addType('stick',\r\n        10,\r\n        (directive, dom: Element) => {\r\n        },\r\n        (directive, dom, module, parent) => {\r\n        }\r\n    );\r\n    /**\r\n     * 插槽指令\r\n     * 配合slot标签使用\r\n     */\r\n    DirectiveManager.addType('slot',\r\n        3,\r\n        (directive, dom: Element) => {\r\n            dom.setProp('slotName', directive.value);\r\n        },\r\n        (directive, dom, module, parent) => {\r\n        }\r\n    );\r\n}())\r\n","/// <reference path=\"../nodom.ts\" />\r\n\r\nimport { NError } from \"../error\";\r\nimport { FilterManager } from \"../filtermanager\";\r\nimport { NodomMessage } from \"../nodom\";\r\nimport { Util } from \"../util\";\r\n\r\nexport default (function(){\r\n\r\n    /**\r\n     * 过滤器类型初始化\r\n     */\r\n\r\n    /**\r\n     * 格式化日期\r\n     * @param format    日期格式\r\n     */\r\n    FilterManager.addType('date', (value, param) => {\r\n        if (Util.isEmpty(value)) {\r\n            return '';\r\n        }\r\n        //去掉首尾\" '\r\n        if(/[\\'\\\"\\`]/.test(param)){\r\n            param = param.substr(1, param.length - 2);\r\n        }\r\n        return Util.formatDate(value, param);\r\n    });\r\n\r\n\r\n    /**\r\n     * 转换为货币\r\n     * @param sign  货币符号¥ $ 等，默认 ¥\r\n     */\r\n    FilterManager.addType('currency', (value, sign) => {\r\n        if (isNaN(value)) {\r\n            return '';\r\n        }\r\n\r\n        sign = sign || '¥';\r\n\r\n        if (typeof value === 'string') {\r\n            value = parseFloat(value);\r\n        }\r\n        return sign + ((value * 100 + 0.5 | 0) / 100);\r\n    });\r\n\r\n    /**\r\n     * 格式化，如果为字符串，转换成数字，保留小数点后位数\r\n     * @param digits    小数点后位数\r\n     */\r\n    FilterManager.addType('number', (value, param) => {\r\n        let digits = param || 0;\r\n\r\n        if (isNaN(value) || digits < 0) {\r\n            return '';\r\n        }\r\n        if (typeof value === 'string') {\r\n            value = parseFloat(value);\r\n        }\r\n\r\n        let x = 1;\r\n        for (let i = 0; i < digits; i++) {\r\n            x *= 10;\r\n        }\r\n        \r\n        return ((value * x + 0.5) | 0) / x;\r\n    });\r\n\r\n    /**\r\n     * 转换为小写字母\r\n     */\r\n    FilterManager.addType('tolowercase', (value) => {\r\n        \r\n        if (Util.isEmpty(value)) {\r\n            return '';\r\n        }\r\n        if (!Util.isString(value) || Util.isEmpty(value)) {\r\n            throw new NError('invoke1', NodomMessage.TipWords['filter'] + ' tolowercase', '0', 'string');\r\n        }\r\n        \r\n        return value.toLowerCase();\r\n    });\r\n\r\n    /**\r\n     * 转换为大写字母\r\n     */\r\n    FilterManager.addType('touppercase', (value) => {\r\n        if (Util.isEmpty(value)) {\r\n            return '';\r\n        }\r\n        if (!Util.isString(value) || Util.isEmpty(value)) {\r\n            throw new NError('invoke1', NodomMessage.TipWords['filter'] + ' touppercase', '0', 'string');\r\n        }\r\n        return value.toUpperCase();\r\n    });\r\n\r\n    /**\r\n     * 数组排序\r\n     * @param arr       数组\r\n     * @param param     \r\n     *     用法: orderby:字段:desc/asc\r\n     */\r\n    FilterManager.addType('orderby', function () {\r\n        let args = arguments;\r\n        let arr = args[0]; //数组\r\n        let field = args[1]; //比较字段\r\n        let odr = args[2] || 'asc'; //升序或降序,默认升序\r\n        if (!Util.isArray(arr)) {\r\n            throw new NError('invoke1', NodomMessage.TipWords['filter'] + ' orderby', '0', 'array');\r\n        }\r\n        //复制数组\r\n        let ret = arr.concat([]);\r\n        if (field && Util.isObject(arr[0])) { //对象数组\r\n            if (odr === 'asc') {\r\n                ret.sort((a, b) => a[field] >= b[field] ? 1 : -1);\r\n            } else {\r\n                ret.sort((a, b) => a[field] <= b[field] ? 1 : -1);\r\n            }\r\n        } else { //值数组\r\n            if (odr === 'asc') {\r\n                ret.sort((a, b) => a >= b ? 1 : -1);\r\n            } else {\r\n                ret.sort((a, b) => a <= b ? 1 : -1);\r\n            }\r\n        }\r\n        return ret;\r\n    });\r\n\r\n    /**\r\n     * 数组过滤\r\n     * 用法: 无参数select:odd 带参数 select:range:1:5\r\n     * odd      奇数，返回索引号为奇数的数组元素\r\n     * even     偶数，返回索引号为偶数的数组元素\r\n     * value    返回值中含有指定字符的数组元素\r\n     *          {prop1:v1,prop2:v2,...} 满足所有属性prop的值中含有对应字符或相等值的数组元素\r\n     * func     自定义函数过滤\r\n     * range    数组范围1:5 返回索引1到5的数组元素\r\n     * index    数组索引序列1:2:3 返回索引1，2，3的元素\r\n     */\r\n    FilterManager.addType('select', function () {\r\n        if (!Util.isArray(arguments[0])) {\r\n            throw new NError('invoke1', NodomMessage.TipWords['filter'] + ' filter', '0', 'array');\r\n        }\r\n\r\n        let params = new Array();\r\n        for (let i = 0; i < arguments.length; i++) {\r\n            params.push(arguments[i]);\r\n        }\r\n        //内部处理方法对象\r\n        let handler = {\r\n            //奇数索引过滤\r\n            odd: function () {\r\n                let arr = arguments[0];\r\n                let ret = [];\r\n                for (let i = 0; i < arr.length; i++) {\r\n                    if (i % 2 === 1) {\r\n                        ret.push(arr[i]);\r\n                    }\r\n                }\r\n                return ret;\r\n            },\r\n            //偶数索引过滤\r\n            even: function () {\r\n                let arr = arguments[0];\r\n                let ret = [];\r\n                for (let i = 0; i < arr.length; i++) {\r\n                    if (i % 2 === 0) {\r\n                        ret.push(arr[i]);\r\n                    }\r\n                }\r\n                return ret;\r\n            },\r\n            //索引区域过滤\r\n            range: function () {\r\n                let args = arguments;\r\n                let arr = args[0];\r\n                let ret = [];\r\n                //第一个索引,第二个索引\r\n                let first = args[1];\r\n                let last = args[2];\r\n                if (isNaN(first)) {\r\n                    throw new NError('paramException', NodomMessage.TipWords['filter'], 'filter range');\r\n                }\r\n                if (!Util.isNumber(first)) {\r\n                    first = parseInt(first);\r\n                }\r\n                //判断数字\r\n                if (isNaN(last)) {\r\n                    throw new NError('paramException', NodomMessage.TipWords['filter'], 'filter range');\r\n                }\r\n\r\n                //字符串转数字\r\n                if (!Util.isNumber(last)) {\r\n                    last = parseInt(last);\r\n                }\r\n\r\n                if (first > last) {\r\n                    throw new NError('paramException', NodomMessage.TipWords['filter'], 'filter range');\r\n                }\r\n                return arr.slice(first, last + 1);\r\n            },\r\n            //索引过滤\r\n            index: function () {\r\n                let args = arguments;\r\n                let arr = args[0];\r\n                if (!Util.isArray(args[0])) {\r\n                    throw new NError('paramException', NodomMessage.TipWords['filter'], 'filter index');\r\n                }\r\n                let ret = [];\r\n                //读取所有index\r\n                if (arr.length > 0) {\r\n                    for (let i = 1; i < args.length; i++) {\r\n                        if (isNaN(args[i])) {\r\n                            continue;\r\n                        }\r\n                        let k = parseInt(args[i]);\r\n                        if (k < arr.length) {\r\n                            ret.push(arr[k]);\r\n                        }\r\n                    }\r\n                }\r\n                return ret;\r\n            },\r\n            //函数过滤\r\n            func: function (arr, param) {\r\n                if (!Util.isArray(arr) || Util.isEmpty(param)) {\r\n                    throw new NError('paramException', NodomMessage.TipWords['filter'], 'filter func');\r\n                }\r\n                //自定义函数\r\n                let foo = this.methodFactory.get(param);\r\n                if (Util.isFunction(foo)) {\r\n                    return Util.apply(foo,this,[arr]);\r\n                }\r\n                return arr;\r\n            },\r\n            //值过滤\r\n            value: function (arr, param) {\r\n                if (!Util.isArray(arr) || Util.isEmpty(param)) {\r\n                    throw new NError('paramException', NodomMessage.TipWords['filter'], 'filter value');\r\n                }\r\n                //属性值对象，所有属性值满足才过滤出来\r\n                if (Util.isObject(param)) {\r\n                    let keys = Util.getOwnProps(param);\r\n                    return arr.filter(function (item) {\r\n                        for (let i = 0; i < keys.length; i++) {\r\n                            let v = item[keys[i]];\r\n                            let v1 = param[keys[i]];\r\n                            //找不到属性值，或者不相等并且是字符串且不包含的情况都返回false\r\n                            if (v === undefined || v !== v1 || typeof v === 'string' && v.indexOf(v1) === -1) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                        //都匹配则返回true\r\n                        return true;\r\n                    });\r\n                } else { //字符串\r\n                    return arr.filter(function (item) {\r\n                        let props = Util.getOwnProps(item);\r\n                        for (let i = 0; i < props.length; i++) {\r\n                            let v = item[props[i]];\r\n                            if (Util.isString(v) && v.indexOf(param) !== -1) {\r\n                                return item;\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        let type;\r\n        //类型匹配并处理\r\n        if (Util.isString(params[1])) {\r\n            type = params[1].trim();\r\n            if (handler.hasOwnProperty(type)) {\r\n                //去掉type\r\n                params.splice(1, 1);\r\n            } else { //默认为value\r\n                type = 'value';\r\n            }\r\n        } else { //默认为value，值对象\r\n            type = 'value';\r\n        }\r\n\r\n        //校验输入参数是否为空\r\n        if (type === 'range' || type === 'index' || type === 'func') {\r\n            if (params.length < 2) {\r\n                throw new NError('paramException', NodomMessage.TipWords['filter']);\r\n            }\r\n        }\r\n        //方法调用\r\n        return Util.apply(handler[type], this, params);\r\n    });\r\n}());","/*\r\n * 消息js文件 中文文件\r\n */\r\nexport const NodomMessage_en = {\r\n    /**\r\n     * tip words\r\n     */\r\n    TipWords:{\r\n        application:\"Application\",\r\n        system:\"System\",\r\n        module:\"Module\",\r\n        moduleClass:'ModuleClass',\r\n        model:\"Model\",\r\n        directive:\"Directive\",\r\n        directiveType:\"Directive-type\",\r\n        expression:\"Expression\",\r\n        event:\"Event\",\r\n        method:\"Method\",\r\n        filter:\"Filter\",\r\n        filterType:\"Filter-type\",\r\n        data:\"Data\",\r\n        dataItem:'Data-item',\r\n        route:'Route',\r\n        routeView:'Route-container',\r\n        plugin:'Plugin',\r\n        resource:'Resource',\r\n        root:'Root',\r\n        element:'Element'\r\n    },\r\n    /**\r\n     * error info\r\n     */\r\n    ErrorMsgs:{\r\n        unknown:\"unknown error\",\r\n        paramException:\"{0} '{1}' parameter error，see api\",\r\n        invoke:\"method {0} parameter {1} must be {2}\",\r\n        invoke1:\"method {0} parameter {1} must be {2} or {3}\",\r\n        invoke2:\"method {0} parameter {1} or {2} must be {3}\",\r\n        invoke3:\"method {0} parameter {1} not allowed empty\",\r\n        exist:\"{0} is already exist\",\r\n        exist1:\"{0} '{1}' is already exist\",\r\n        notexist:\"{0} is not exist\",\r\n        notexist1:\"{0} '{1}' is not exist\",\r\n        notupd:\"{0} not allow to change\",\r\n        notremove:\"{0} not allow to delete\",\r\n        notremove1:\"{0} {1} not allow to delete\",\r\n        namedinvalid:\"{0} {1} name error，see name rules\",\r\n        initial:\"{0} init parameter error\",\r\n        jsonparse:\"JSON parse error\",\r\n        timeout:\"request overtime\",\r\n        config:\"{0} config parameter error\",\r\n        config1:\"{0} config parameter '{1}' error\",\r\n        itemnotempty:\"{0} '{1}' config item '{2}' not allow empty\",\r\n\t\titemincorrect:\"{0} '{1}' config item '{2}' error\"\r\n    },\r\n\r\n    /**\r\n     * form info\r\n     */\r\n    FormMsgs:{\r\n        type:\"please input valid {0}\",\r\n        unknown:\"input error\",\r\n        required:\"is required\",\r\n        min:\"min value is {0}\",\r\n        max:\"max value is {0}\"\r\n    },\r\n    WeekDays:{\r\n\t\t\"0\" : \"Sun\",\r\n\t\t\"1\" : \"Mon\",\r\n\t\t\"2\" : \"Tue\",\r\n\t\t\"3\" : \"Wed\",\r\n\t\t\"4\" : \"Thu\",\r\n\t\t\"5\" : \"Fri\",\r\n\t\t\"6\" : \"Sat\"\r\n\t}\r\n}\r\n","/*\r\n * 消息js文件 中文文件\r\n */\r\nexport const NodomMessage_zh = {\r\n\t/**\r\n\t * 提示单词\r\n\t */\r\n\tTipWords:{\r\n\t\tapplication:\"应用\",\r\n\t\tsystem:\"系统\",\r\n\t\tmodule:\"模块\",\r\n\t\tmoduleClass:'模块类',\r\n\t\tmodel:\"模型\",\r\n\t\tdirective:\"指令\",\r\n\t\tdirectiveType:\"指令类型\",\r\n\t\texpression:\"表达式\",\r\n\t\tevent:\"事件\",\r\n\t\tmethod:\"方法\",\r\n\t\tfilter:\"过滤器\",\r\n\t\tfilterType:\"过滤器类型\",\r\n\t\tdata:\"数据\",\r\n\t\tdataItem:'数据项',\r\n\t\troute:'路由',\r\n\t\trouteView:'路由容器',\r\n\t\tplugin:'插件',\r\n\t\tresource:'资源',\r\n\t\troot:'根',\r\n\t\telement:'元素'\r\n\t},\r\n\t/**\r\n\t * 异常信息\r\n\t */\r\n\tErrorMsgs:{\r\n\t\tunknown:\"未知错误\",\r\n\t\tparamException:\"{0}'{1}'方法参数错误，请参考api\",\r\n\t\tinvoke:\"{0}方法调用参数{1}必须为{2}\",\r\n\t\tinvoke1:\"{0}方法调用参数{1}必须为{2}或{3}\",\r\n\t\tinvoke2:\"{0}方法调用参数{1}或{2}必须为{3}\",\r\n\t\tinvoke3:\"{0}方法调用参数{1}不能为空\",\r\n\t\texist:\"{0}已存在\",\r\n\t\texist1:\"{0}'{1}'已存在\",\r\n\t\tnotexist:\"{0}不存在\",\r\n\t\tnotexist1:\"{0}'{1}'不存在\",\r\n\t\tnotupd:\"{0}不可修改\",\r\n\t\tnotremove:\"{0}不可删除\",\r\n\t\tnotremove1:\"{0}{1}不可删除\",\r\n\t\tnamedinvalid:\"{0}{1}命名错误，请参考用户手册对应命名规范\",\r\n\t\tinitial:\"{0}初始化参数错误\",\r\n\t\tjsonparse:\"JSON解析错误\",\r\n\t\ttimeout:\"请求超时\",\r\n\t\tconfig:\"{0}配置参数错误\",\r\n\t\tconfig1:\"{0}配置参数'{1}'错误\",\r\n\t\titemnotempty:\"{0} '{1}' 配置项 '{2}' 不能为空\",\r\n\t\titemincorrect:\"{0} '{1}' 配置项 '{2}' 错误\"\r\n\t},\r\n\r\n\t/**\r\n\t * 表单信息\r\n\t */\r\n\tFormMsgs:{\r\n\t\ttype:\"请输入有效的{0}\",\r\n\t\tunknown:\"输入错误\",\r\n\t\trequired:\"不能为空\",\r\n\t\tmin:\"最小输入值为{0}\",\r\n\t\tmax:\"最大输入值为{0}\"\r\n\t},\r\n\tWeekDays:{\r\n\t\t\"0\" : \"日\",\r\n\t\t\"1\" : \"一\",\r\n\t\t\"2\" : \"二\",\r\n\t\t\"3\" : \"三\",\r\n\t\t\"4\" : \"四\",\r\n\t\t\"5\" : \"五\",\r\n\t\t\"6\" : \"六\"\r\n\t}\r\n}","import { Util } from \"./util\";\r\n\r\nexport  class MessageManager {\r\n    /**\r\n     * all topic  subscribers\r\n     */\r\n    static subscribers: Map<string | symbol, Array<Function>> = new Map();\r\n\r\n\r\n    /**\r\n     * \r\n     * @param type  register a topic\r\n     * @param fn    create a function to subscribe to topics\r\n     * @returns     A function to unsubscribe from this topic\r\n     */\r\n    static subscribe(type: string | symbol, fn: Function): Function {\r\n\r\n        if (!Util.isFunction(fn)) {\r\n            throw new Error(`${fn} should be a function`);\r\n        };\r\n\r\n        const { subscribers } = MessageManager;\r\n        const fnArrays: Array<Function> =\r\n            subscribers.get(type) === undefined ?\r\n                subscribers.set(type, new Array()).get(type) :\r\n                subscribers.get(type);\r\n        fnArrays.push(fn);\r\n        return () => {\r\n            const index = fnArrays.indexOf(fn);\r\n            if (index === -1) {\r\n                return;\r\n            }\r\n            fnArrays.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param type  publish a topic\r\n     * @param data Sent data\r\n     * @returns  Whether topic are  registered subscribers\r\n     */\r\n    static publish(type: string | symbol, data: any): boolean {\r\n        const { subscribers } = MessageManager;\r\n        const fnArrays: Array<Function> =\r\n            subscribers.get(type) === undefined ?\r\n                [] :\r\n                subscribers.get(type);\r\n        if (fnArrays.length > 0) {\r\n            fnArrays.forEach((fn) => {\r\n                try {\r\n                    fn(type, data);\r\n                } catch (e) {\r\n                    throw new Error(`Function:${fn} execution error`);\r\n\r\n                }\r\n            }\r\n            )\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    // static update(fnArrays: Function[]) {\r\n    //     // fnArrays.\r\n    // }\r\n    /**\r\n     * Clean up all message subscribers\r\n     */\r\n    static clearAllSubscriptions() {\r\n        MessageManager.subscribers.clear();\r\n    }\r\n\r\n\r\n}\r\n"],"names":["Model","NodomMessage","store","ModelManager","kayaks"],"mappings":"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"}