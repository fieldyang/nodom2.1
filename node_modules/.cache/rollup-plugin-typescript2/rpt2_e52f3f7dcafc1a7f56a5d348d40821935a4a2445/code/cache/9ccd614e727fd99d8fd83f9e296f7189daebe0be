{"code":"import { ModuleFactory } from \"./modulefactory\";\r\n/**\r\n * 模型类\r\n */\r\nexport class Model {\r\n    /**\r\n     * @param data \t\t数据\r\n     * @param module \t模块对象\r\n     * @returns         模型代理对象\r\n     */\r\n    constructor(data, module) {\r\n        //模型管理器\r\n        let mm = module.modelManager;\r\n        let proxy = new Proxy(data, {\r\n            set: (src, key, value, receiver) => {\r\n                //值未变,proxy 不处理\r\n                if (src[key] === value) {\r\n                    return true;\r\n                }\r\n                //不处理原型属性\r\n                let excludes = ['__proto__', 'constructor'];\r\n                //数组不处理长度\r\n                if (Array.isArray(src)) {\r\n                    excludes.push('length');\r\n                }\r\n                if (excludes.includes(key)) {\r\n                    return true;\r\n                }\r\n                //yi不进行赋值\r\n                if (typeof value !== 'object' || !value.$watch) {\r\n                    //更新渲染\r\n                    mm.update(proxy, key, src[key], value);\r\n                    src[key] = value;\r\n                }\r\n                return true;\r\n            },\r\n            get: (src, key, receiver) => {\r\n                //如果是对象，则返回代理，便于后续激活get set方法\r\n                if (typeof src[key] === 'object') {\r\n                    //判断是否已经代理，如果未代理，则增加代理\r\n                    if (!src[key].$watch) {\r\n                        let p = new Model(src[key], module);\r\n                        receiver[key] = p;\r\n                        return p;\r\n                    }\r\n                    else {\r\n                        return module.modelManager.getFromDataMap(src[key]);\r\n                    }\r\n                }\r\n                return src[key];\r\n            }\r\n        });\r\n        proxy.$watch = this.$watch;\r\n        proxy.$moduleId = module.id;\r\n        proxy.$query = this.$query;\r\n        mm.addToDataMap(data, proxy);\r\n        mm.addModelToModelMap(proxy, data);\r\n        return proxy;\r\n    }\r\n    /**\r\n     * 观察(取消观察)某个数据项\r\n     * @param key       数据项名\r\n     * @param operate   数据项变化时执行方法名(在module的methods中定义)\r\n     * @param cancel    取消观察\r\n     */\r\n    $watch(key, operate, cancel) {\r\n        let model = this.$query(key);\r\n        if (!model) {\r\n            return;\r\n        }\r\n        let mod = ModuleFactory.get(this.$moduleId);\r\n        if (cancel) {\r\n            mod.modelManager.removeWatcherFromModelMap(model, key, operate);\r\n        }\r\n        else {\r\n            mod.modelManager.addWatcherToModelMap(model, key, operate);\r\n        }\r\n    }\r\n    /**\r\n     * 查询子属性\r\n     * @param key   子属性，可以分级，如 name.firstName\r\n     * @returns     属性对应model proxy\r\n     */\r\n    $query(key) {\r\n        let model = this;\r\n        if (key.indexOf('.') !== -1) { //层级字段\r\n            let arr = key.split('.');\r\n            for (let i = 0; i < arr.length - 1; i++) {\r\n                model = model[arr[i]];\r\n                if (!model) {\r\n                    break;\r\n                }\r\n            }\r\n            if (!model) {\r\n                return;\r\n            }\r\n            key = arr[arr.length - 1];\r\n        }\r\n        else {\r\n            return model[key];\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=model.js.map","references":["D:/Git/git_repos/nodom2.1/core/modelmanager.ts","D:/Git/git_repos/nodom2.1/core/module.ts","D:/Git/git_repos/nodom2.1/core/modulefactory.ts"],"map":"{\"version\":3,\"file\":\"model.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../core/model.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"D:/Git/git_repos/nodom2.1/node_modules/.cache/rollup-plugin-typescript2/placeholder/core/model.d.ts","writeByteOrderMark":false,"text":"import { Module } from \"./module\";\r\n/**\r\n * 模型类\r\n */\r\nexport declare class Model {\r\n    /**\r\n     * 模块id\r\n     */\r\n    $moduleId: number;\r\n    /**\r\n     * @param data \t\t数据\r\n     * @param module \t模块对象\r\n     * @returns         模型代理对象\r\n     */\r\n    constructor(data: any, module: Module);\r\n    /**\r\n     * 观察(取消观察)某个数据项\r\n     * @param key       数据项名\r\n     * @param operate   数据项变化时执行方法名(在module的methods中定义)\r\n     * @param cancel    取消观察\r\n     */\r\n    $watch(key: string, operate: string | Function, cancel?: boolean): void;\r\n    /**\r\n     * 查询子属性\r\n     * @param key   子属性，可以分级，如 name.firstName\r\n     * @returns     属性对应model proxy\r\n     */\r\n    $query(key: string): any;\r\n}\r\n"}}
