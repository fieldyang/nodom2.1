{"code":"import { NError } from \"./error\";\r\nimport { Util } from \"./util\";\r\n/**\r\n * 调度器，用于每次空闲的待操作序列调度\r\n */\r\nexport class Scheduler {\r\n    static dispatch() {\r\n        Scheduler.tasks.forEach((item) => {\r\n            if (Util.isFunction(item.func)) {\r\n                if (item.thiser) {\r\n                    item.func.call(item.thiser);\r\n                }\r\n                else {\r\n                    item.func();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 启动调度器\r\n     * @param scheduleTick \t渲染间隔\r\n     */\r\n    static start(scheduleTick) {\r\n        Scheduler.dispatch();\r\n        if (window.requestAnimationFrame) {\r\n            window.requestAnimationFrame(Scheduler.start);\r\n        }\r\n        else {\r\n            window.setTimeout(Scheduler.start, scheduleTick || 50);\r\n        }\r\n    }\r\n    /**\r\n     * 添加任务\r\n     * @param foo \t\t任务和this指向\r\n     * @param thiser \tthis指向\r\n     */\r\n    static addTask(foo, thiser) {\r\n        if (!Util.isFunction(foo)) {\r\n            throw new NError(\"invoke\", \"Scheduler.addTask\", \"0\", \"function\");\r\n        }\r\n        Scheduler.tasks.push({ func: foo, thiser: thiser });\r\n    }\r\n    /**\r\n     * 移除任务\r\n     * @param foo \t任务\r\n     */\r\n    static removeTask(foo) {\r\n        if (!Util.isFunction(foo)) {\r\n            throw new NError(\"invoke\", \"Scheduler.removeTask\", \"0\", \"function\");\r\n        }\r\n        let ind = -1;\r\n        if ((ind = Scheduler.tasks.indexOf(foo)) !== -1) {\r\n            Scheduler.tasks.splice(ind, 1);\r\n        }\r\n    }\r\n}\r\nScheduler.tasks = [];\r\n//# sourceMappingURL=scheduler.js.map","references":["D:/Git/git_repos/nodom2.1/core/error.ts","D:/Git/git_repos/nodom2.1/core/util.ts"],"map":"{\"version\":3,\"file\":\"scheduler.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../core/scheduler.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAC;AACjC,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAE9B;;GAEG;AACH,MAAM,OAAO,SAAS;IAEd,MAAM,CAAC,QAAQ;QACrB,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAC,EAAE;YAC/B,IAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC;gBAC7B,IAAG,IAAI,CAAC,MAAM,EAAC;oBACd,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBAC5B;qBAAI;oBACJ,IAAI,CAAC,IAAI,EAAE,CAAC;iBACZ;aACD;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAED;;;OAGG;IACI,MAAM,CAAC,KAAK,CAAC,YAAoB;QACvC,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,IAAG,MAAM,CAAC,qBAAqB,EAAC;YAC/B,MAAM,CAAC,qBAAqB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SAC9C;aAAI;YACJ,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,EAAC,YAAY,IAAE,EAAE,CAAC,CAAC;SACpD;IACF,CAAC;IAED;;;;OAIG;IACI,MAAM,CAAC,OAAO,CAAC,GAAY,EAAC,MAAW;QAC7C,IAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAC;YACxB,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAC,mBAAmB,EAAC,GAAG,EAAC,UAAU,CAAC,CAAC;SAC9D;QAED,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,IAAI,EAAC,GAAG,EAAC,MAAM,EAAC,MAAM,EAAC,CAAC,CAAC;IAChD,CAAC;IAED;;;OAGG;IACI,MAAM,CAAC,UAAU,CAAC,GAAG;QAC3B,IAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAC;YACxB,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAC,sBAAsB,EAAC,GAAG,EAAC,UAAU,CAAC,CAAC;SACjE;QACD,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;QACb,IAAG,CAAC,GAAG,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAC;YAC9C,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC;SAC9B;IACF,CAAC;;AAnDc,eAAK,GAAc,EAAE,CAAC\"}","dts":{"name":"D:/Git/git_repos/nodom2.1/node_modules/.cache/rollup-plugin-typescript2/placeholder/core/scheduler.d.ts","writeByteOrderMark":false,"text":"/**\r\n * 调度器，用于每次空闲的待操作序列调度\r\n */\r\nexport declare class Scheduler {\r\n    private static tasks;\r\n    static dispatch(): void;\r\n    /**\r\n     * 启动调度器\r\n     * @param scheduleTick \t渲染间隔\r\n     */\r\n    static start(scheduleTick?: number): void;\r\n    /**\r\n     * 添加任务\r\n     * @param foo \t\t任务和this指向\r\n     * @param thiser \tthis指向\r\n     */\r\n    static addTask(foo: Function, thiser?: any): void;\r\n    /**\r\n     * 移除任务\r\n     * @param foo \t任务\r\n     */\r\n    static removeTask(foo: any): void;\r\n}\r\n"}}
