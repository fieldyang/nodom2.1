{"code":"/// <reference path=\"../nodom.ts\" />\r\nimport { NError } from \"../error\";\r\nimport { FilterManager } from \"../filtermanager\";\r\nimport { NodomMessage } from \"../nodom\";\r\nimport { Util } from \"../util\";\r\nexport default (function () {\r\n    /**\r\n     * 过滤器类型初始化\r\n     */\r\n    /**\r\n     * 格式化日期\r\n     * @param format    日期格式\r\n     */\r\n    FilterManager.addType('date', (value, param) => {\r\n        if (Util.isEmpty(value)) {\r\n            return '';\r\n        }\r\n        //去掉首尾\" '\r\n        if (/[\\'\\\"\\`]/.test(param)) {\r\n            param = param.substr(1, param.length - 2);\r\n        }\r\n        return Util.formatDate(value, param);\r\n    });\r\n    /**\r\n     * 转换为货币\r\n     * @param sign  货币符号¥ $ 等，默认 ¥\r\n     */\r\n    FilterManager.addType('currency', (value, sign) => {\r\n        if (isNaN(value)) {\r\n            return '';\r\n        }\r\n        sign = sign || '¥';\r\n        if (typeof value === 'string') {\r\n            value = parseFloat(value);\r\n        }\r\n        return sign + ((value * 100 + 0.5 | 0) / 100);\r\n    });\r\n    /**\r\n     * 格式化，如果为字符串，转换成数字，保留小数点后位数\r\n     * @param digits    小数点后位数\r\n     */\r\n    FilterManager.addType('number', (value, param) => {\r\n        let digits = param || 0;\r\n        if (isNaN(value) || digits < 0) {\r\n            return '';\r\n        }\r\n        if (typeof value === 'string') {\r\n            value = parseFloat(value);\r\n        }\r\n        let x = 1;\r\n        for (let i = 0; i < digits; i++) {\r\n            x *= 10;\r\n        }\r\n        return ((value * x + 0.5) | 0) / x;\r\n    });\r\n    /**\r\n     * 转换为小写字母\r\n     */\r\n    FilterManager.addType('tolowercase', (value) => {\r\n        if (Util.isEmpty(value)) {\r\n            return '';\r\n        }\r\n        if (!Util.isString(value) || Util.isEmpty(value)) {\r\n            throw new NError('invoke1', NodomMessage.TipWords['filter'] + ' tolowercase', '0', 'string');\r\n        }\r\n        return value.toLowerCase();\r\n    });\r\n    /**\r\n     * 转换为大写字母\r\n     */\r\n    FilterManager.addType('touppercase', (value) => {\r\n        if (Util.isEmpty(value)) {\r\n            return '';\r\n        }\r\n        if (!Util.isString(value) || Util.isEmpty(value)) {\r\n            throw new NError('invoke1', NodomMessage.TipWords['filter'] + ' touppercase', '0', 'string');\r\n        }\r\n        return value.toUpperCase();\r\n    });\r\n    /**\r\n     * 数组排序\r\n     * @param arr       数组\r\n     * @param param\r\n     *     用法: orderby:字段:desc/asc\r\n     */\r\n    FilterManager.addType('orderby', function () {\r\n        let args = arguments;\r\n        let arr = args[0]; //数组\r\n        let field = args[1]; //比较字段\r\n        let odr = args[2] || 'asc'; //升序或降序,默认升序\r\n        if (!Util.isArray(arr)) {\r\n            throw new NError('invoke1', NodomMessage.TipWords['filter'] + ' orderby', '0', 'array');\r\n        }\r\n        //复制数组\r\n        let ret = arr.concat([]);\r\n        if (field && Util.isObject(arr[0])) { //对象数组\r\n            if (odr === 'asc') {\r\n                ret.sort((a, b) => a[field] >= b[field] ? 1 : -1);\r\n            }\r\n            else {\r\n                ret.sort((a, b) => a[field] <= b[field] ? 1 : -1);\r\n            }\r\n        }\r\n        else { //值数组\r\n            if (odr === 'asc') {\r\n                ret.sort((a, b) => a >= b ? 1 : -1);\r\n            }\r\n            else {\r\n                ret.sort((a, b) => a <= b ? 1 : -1);\r\n            }\r\n        }\r\n        return ret;\r\n    });\r\n    /**\r\n     * 数组过滤\r\n     * 用法: 无参数select:odd 带参数 select:range:1:5\r\n     * odd      奇数，返回索引号为奇数的数组元素\r\n     * even     偶数，返回索引号为偶数的数组元素\r\n     * value    返回值中含有指定字符的数组元素\r\n     *          {prop1:v1,prop2:v2,...} 满足所有属性prop的值中含有对应字符或相等值的数组元素\r\n     * func     自定义函数过滤\r\n     * range    数组范围1:5 返回索引1到5的数组元素\r\n     * index    数组索引序列1:2:3 返回索引1，2，3的元素\r\n     */\r\n    FilterManager.addType('select', function () {\r\n        if (!Util.isArray(arguments[0])) {\r\n            throw new NError('invoke1', NodomMessage.TipWords['filter'] + ' filter', '0', 'array');\r\n        }\r\n        let params = new Array();\r\n        for (let i = 0; i < arguments.length; i++) {\r\n            params.push(arguments[i]);\r\n        }\r\n        //内部处理方法对象\r\n        let handler = {\r\n            //奇数索引过滤\r\n            odd: function () {\r\n                let arr = arguments[0];\r\n                let ret = [];\r\n                for (let i = 0; i < arr.length; i++) {\r\n                    if (i % 2 === 1) {\r\n                        ret.push(arr[i]);\r\n                    }\r\n                }\r\n                return ret;\r\n            },\r\n            //偶数索引过滤\r\n            even: function () {\r\n                let arr = arguments[0];\r\n                let ret = [];\r\n                for (let i = 0; i < arr.length; i++) {\r\n                    if (i % 2 === 0) {\r\n                        ret.push(arr[i]);\r\n                    }\r\n                }\r\n                return ret;\r\n            },\r\n            //索引区域过滤\r\n            range: function () {\r\n                let args = arguments;\r\n                let arr = args[0];\r\n                let ret = [];\r\n                //第一个索引,第二个索引\r\n                let first = args[1];\r\n                let last = args[2];\r\n                if (isNaN(first)) {\r\n                    throw new NError('paramException', NodomMessage.TipWords['filter'], 'filter range');\r\n                }\r\n                if (!Util.isNumber(first)) {\r\n                    first = parseInt(first);\r\n                }\r\n                //判断数字\r\n                if (isNaN(last)) {\r\n                    throw new NError('paramException', NodomMessage.TipWords['filter'], 'filter range');\r\n                }\r\n                //字符串转数字\r\n                if (!Util.isNumber(last)) {\r\n                    last = parseInt(last);\r\n                }\r\n                if (first > last) {\r\n                    throw new NError('paramException', NodomMessage.TipWords['filter'], 'filter range');\r\n                }\r\n                return arr.slice(first, last + 1);\r\n            },\r\n            //索引过滤\r\n            index: function () {\r\n                let args = arguments;\r\n                let arr = args[0];\r\n                if (!Util.isArray(args[0])) {\r\n                    throw new NError('paramException', NodomMessage.TipWords['filter'], 'filter index');\r\n                }\r\n                let ret = [];\r\n                //读取所有index\r\n                if (arr.length > 0) {\r\n                    for (let i = 1; i < args.length; i++) {\r\n                        if (isNaN(args[i])) {\r\n                            continue;\r\n                        }\r\n                        let k = parseInt(args[i]);\r\n                        if (k < arr.length) {\r\n                            ret.push(arr[k]);\r\n                        }\r\n                    }\r\n                }\r\n                return ret;\r\n            },\r\n            //函数过滤\r\n            func: function (arr, param) {\r\n                if (!Util.isArray(arr) || Util.isEmpty(param)) {\r\n                    throw new NError('paramException', NodomMessage.TipWords['filter'], 'filter func');\r\n                }\r\n                //自定义函数\r\n                let foo = this.methodFactory.get(param);\r\n                if (Util.isFunction(foo)) {\r\n                    return Util.apply(foo, this, [arr]);\r\n                }\r\n                return arr;\r\n            },\r\n            //值过滤\r\n            value: function (arr, param) {\r\n                if (!Util.isArray(arr) || Util.isEmpty(param)) {\r\n                    throw new NError('paramException', NodomMessage.TipWords['filter'], 'filter value');\r\n                }\r\n                //属性值对象，所有属性值满足才过滤出来\r\n                if (Util.isObject(param)) {\r\n                    let keys = Util.getOwnProps(param);\r\n                    return arr.filter(function (item) {\r\n                        for (let i = 0; i < keys.length; i++) {\r\n                            let v = item[keys[i]];\r\n                            let v1 = param[keys[i]];\r\n                            //找不到属性值，或者不相等并且是字符串且不包含的情况都返回false\r\n                            if (v === undefined || v !== v1 || typeof v === 'string' && v.indexOf(v1) === -1) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                        //都匹配则返回true\r\n                        return true;\r\n                    });\r\n                }\r\n                else { //字符串\r\n                    return arr.filter(function (item) {\r\n                        let props = Util.getOwnProps(item);\r\n                        for (let i = 0; i < props.length; i++) {\r\n                            let v = item[props[i]];\r\n                            if (Util.isString(v) && v.indexOf(param) !== -1) {\r\n                                return item;\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        let type;\r\n        //类型匹配并处理\r\n        if (Util.isString(params[1])) {\r\n            type = params[1].trim();\r\n            if (handler.hasOwnProperty(type)) {\r\n                //去掉type\r\n                params.splice(1, 1);\r\n            }\r\n            else { //默认为value\r\n                type = 'value';\r\n            }\r\n        }\r\n        else { //默认为value，值对象\r\n            type = 'value';\r\n        }\r\n        //校验输入参数是否为空\r\n        if (type === 'range' || type === 'index' || type === 'func') {\r\n            if (params.length < 2) {\r\n                throw new NError('paramException', NodomMessage.TipWords['filter']);\r\n            }\r\n        }\r\n        //方法调用\r\n        return Util.apply(handler[type], this, params);\r\n    });\r\n}());\r\n//# sourceMappingURL=filterinit.js.map","references":["D:/graduate/project/nodom2.1/nodom2.1/core/error.ts","D:/graduate/project/nodom2.1/nodom2.1/core/filtermanager.ts","D:/graduate/project/nodom2.1/nodom2.1/core/nodom.ts","D:/graduate/project/nodom2.1/nodom2.1/core/util.ts"],"map":"{\"version\":3,\"file\":\"filterinit.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../core/extend/filterinit.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"D:/graduate/project/nodom2.1/nodom2.1/node_modules/.cache/rollup-plugin-typescript2/placeholder/core/extend/filterinit.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\".cache/rollup-plugin-typescript2/placeholder/core/nodom\" />\r\ndeclare const _default: void;\r\nexport default _default;\r\n"}}
